--- select_lock_in_share_mode.result	2013-01-22 22:05:05.246633000 +0400
+++ select_lock_in_share_mode.reject	2013-01-23 03:22:39.739615191 +0400
@@ -1,3 +1,9 @@
+# -- WARNING ----------------------------------------------------------------
+# According to I_S.ENGINES, MRG_MYISAM does not support transactions.
+# If it is true, the test will most likely fail; you can 
+# either create an rdiff file, or add the test to disabled.def.
+# If transactions should be supported, check the data in Information Schema.
+# ---------------------------------------------------------------------------
 DROP TABLE IF EXISTS t1;
 CREATE TABLE t1 (a <INT_COLUMN>, b <CHAR_COLUMN>) ENGINE=<STORAGE_ENGINE> <CUSTOM_TABLE_OPTIONS>;
 INSERT INTO t1 (a,b) VALUES (1,'a'),(2,'b'),(3,'a');
@@ -18,14 +24,21 @@
 1	a
 3	a
 UPDATE t1 SET b='c' WHERE b='a';
-ERROR HY000: Lock wait timeout exceeded; try restarting transaction
+# ERROR: Statement succeeded (expected results: ER_LOCK_WAIT_TIMEOUT)
+# ------------ UNEXPECTED RESULT ------------
+# The statement|command succeeded unexpectedly.
+# LOCK IN SHARE MODE or UPDATE or the mix could be unsupported|malfunctioning, or the problem was caused by previous errors. 
+# You can change the engine code, or create an rdiff, or disable the test by adding it to disabled.def.
+# Further in this test, the message might sometimes be suppressed; a part of the test might be skipped.
+# Also, this problem may cause a chain effect (more errors of different kinds in the test).
+# -------------------------------------------
 connection con1;
 COMMIT;
 SELECT a,b FROM t1;
 a	b
-1	a
+1	c
 2	b
-3	a
+3	c
 disconnect con1;
 connection default;
 UPDATE t1 SET b='c' WHERE b='a';
