/*****************************************************************************

Copyright (c) 1995, 2009, Innobase Oy. All Rights Reserved.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; version 2 of the License.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 
51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA

*****************************************************************************/

/******************************************************************//**
@file include/fut0fut.ic
File-based utilities

Created 12/13/1995 Heikki Tuuri
***********************************************************************/

#include "srv0srv.h"
#include "sync0rw.h"
#include "buf0buf.h"

/********************************************************************//**
Gets a pointer to a file address and latches the page.
@return pointer to a byte in a frame; the file page in the frame is
bufferfixed and latched */
UNIV_INLINE
byte*
fut_get_ptr(
/*========*/
	ulint		space,	/*!< in: space id */
	ulint		zip_size,/*!< in: compressed page size in bytes
				or 0 for uncompressed pages */
	fil_addr_t	addr,	/*!< in: file address */
	ulint		rw_latch, /*!< in: RW_S_LATCH, RW_X_LATCH */
	mtr_t*		mtr)	/*!< in: mtr handle */
{
	buf_block_t*	block;
	byte*		ptr;

	ut_ad(addr.boffset < UNIV_PAGE_SIZE);
	ut_ad((rw_latch == RW_S_LATCH) || (rw_latch == RW_X_LATCH));

	block = buf_page_get(space, zip_size, addr.page, rw_latch, mtr);

	SRV_CORRUPT_TABLE_CHECK(block, return(0););

	ptr = buf_block_get_frame(block) + addr.boffset;

	buf_block_dbg_add_level(block, SYNC_NO_ORDER_CHECK);

	return(ptr);
}
