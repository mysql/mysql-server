/*****************************************************************************

Copyright (c) 2011, 2022, Oracle and/or its affiliates.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License, version 2.0, as published by the
Free Software Foundation.

This program is also distributed with certain software (including but not
limited to OpenSSL) that is licensed under separate terms, as designated in a
particular file or component or in included license documentation. The authors
of MySQL hereby grant you an additional permission to link the program and
your derivative works with the separately licensed software that they have
included with MySQL.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU General Public License, version 2.0,
for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA

*****************************************************************************/

/** @file include/row0log.ic
 Modification log for online index creation and online table rebuild

 Created 2012-10-18 Marko Makela
 *******************************************************/

#include "dict0dict.h"

#ifndef UNIV_HOTBACKUP
/** Free the row log for an index on which online creation was aborted. */
static inline void row_log_abort_sec(
    dict_index_t *index) /*!< in/out: index (x-latched) */
{
  ut_ad(rw_lock_own(dict_index_get_lock(index), RW_LOCK_X));

  ut_ad(!index->is_clustered());
  dict_index_set_online_status(index, ONLINE_INDEX_ABORTED);
  row_log_free(index->online_log);
}

static inline bool row_log_online_op_try(dict_index_t *index,
                                         const dtuple_t *tuple,
                                         trx_id_t trx_id) {
  ut_ad(rw_lock_own_flagged(dict_index_get_lock(index),
                            RW_LOCK_FLAG_S | RW_LOCK_FLAG_X | RW_LOCK_FLAG_SX));

  switch (dict_index_get_online_status(index)) {
    case ONLINE_INDEX_COMPLETE:
      /* This is a normal index. Do not log anything.
      The caller must perform the operation on the
      index tree directly. */
      return (false);
    case ONLINE_INDEX_CREATION:
      /* The index is being created online. Log the
      operation. */
      row_log_online_op(index, tuple, trx_id);
      break;
    case ONLINE_INDEX_ABORTED:
    case ONLINE_INDEX_ABORTED_DROPPED:
      /* The index was created online, but the operation was
      aborted. Do not log the operation and tell the caller
      to skip the operation. */
      break;
  }

  return (true);
}
#endif /* !UNIV_HOTBACKUP */
