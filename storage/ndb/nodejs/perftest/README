/*
 Copyright (c) 2013, 2016, Oracle and/or its affiliates. All rights reserved.
 
 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License, version 2.0,
 as published by the Free Software Foundation.

 This program is also distributed with certain software (including
 but not limited to OpenSSL) that is licensed under separate terms,
 as designated in a particular file or component or in included license
 documentation.  The authors of MySQL hereby grant you an additional
 permission to link the program and your derivative works with the
 separately licensed software that they have included with MySQL.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License, version 2.0, for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA
 */

README for mysql-js perftest
last update 18 February 2013

The jscrund.js program is an application written to the node.js api that tests
the performance of various interfaces to MySQL and MySQL Cluster.

The program tests insert, read, and delete performance against a simple schema.

The data used in the program is the same as the data used by the crund benchmark
and performance results can be compared directly with other crund implementations.

To run the tests, call jscrund via node from the command line, e.g. 
  % node jscrund

For usage information, node jscrund -h or node jscrund --help

Various options are available:

adapter: choose ndb, mysql, or sql
  ndb: mysql-js api with the native ndb adapter
  mysql: mysql-js api with the mysql adapter that uses the felix api to access mysqld
  sql: felix api that uses sql to access mysqld

number of records to insert, delete, or read
  default is 4000

mode: choose any or all of indy, each, or bulk
  indy: run in autocommit with each operation in its own transaction
  each: begin, perform all operations, and commit
  bulk: perform all operations in bulk (fewest database round trips)

The schema used in jscrund is in the file create.sql
