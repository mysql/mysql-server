# verify that serializable get of a repeatable read transaction grabs read lock

--source include/have_tokudb.inc
SET DEFAULT_STORAGE_ENGINE = 'tokudb';

--echo # Establish connection conn1 (user = root)
connect (conn1,localhost,root,,);

--disable_warnings
DROP TABLE IF EXISTS foo, foo_isam;
--enable_warnings

connection default;
set session transaction isolation level repeatable read;
create table foo ( a int, b int, c int, primary key (a), key (b))engine=TokuDB;
show create table foo;
insert into foo values (1,10,100),(2,20,200),(3,30,300),(4,40,400),(5,50,500);
create table foo_isam (a int, b int, c int);
--echo # should use key b
explain select * from foo where b=30;
begin;
insert into foo_isam select * from foo where b=30;

connection conn1;
set session transaction isolation level repeatable read;
--echo # should get a lock error
--error ER_LOCK_WAIT_TIMEOUT
replace into foo values (3,3,3);

connection default;
commit;
disconnect conn1;

connection default;
# Final cleanup.
set session transaction isolation level serializable;
DROP TABLE foo, foo_isam;
