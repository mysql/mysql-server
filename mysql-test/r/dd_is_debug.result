CALL mtr.add_suppression("Could not parse key-value pairs in property string.*");
#
# Bug#24487414 - SIG 11 IN DD::INFO_SCHEMA::STATISTICS_CACHE::READ_STAT_BY_OPEN_TABLE
#
SET SESSION information_schema_stats_expiry=0;
CREATE TABLE time_zone(f1 INT PRIMARY KEY) ENGINE=MyISAM;
INSERT INTO time_zone VALUES (10);
SET SESSION DEBUG="+d,simulate_kill_query_on_open_table";
# Without fix, following query results in crash when query is killed while
# opening "test.time_zone" table.
SELECT * FROM INFORMATION_SCHEMA.STATISTICS WHERE TABLE_SCHEMA='test' AND
TABLE_NAME = 'time_zone';
ERROR 70100: Query execution was interrupted
SET SESSION DEBUG="-d,simulate_kill_query_on_open_table";
DROP TABLE time_zone;
SET SESSION information_schema_stats_expiry=default;
#
# Bug#26318759 ASSERT IN ROW_DROP_TABLE_FOR_MYSQL IN ROW/ROW0MYSQL.CC
#
SET SESSION information_schema_stats_expiry=0;
SET SESSION debug= "+d,information_schema_fetch_table_stats";
CREATE TABLE t1 (a VARCHAR(200), b TEXT, FULLTEXT (a,b));
INSERT INTO t1 VALUES ('a','b');
SELECT table_name, cardinality  FROM INFORMATION_SCHEMA.STATISTICS
WHERE cardinality > 0 and table_schema='test';
TABLE_NAME	CARDINALITY
t1	1
t1	1
DROP TABLE t1;
SET SESSION debug= "-d,information_schema_fetch_table_stats";
SET SESSION information_schema_stats_expiry=default;
#
# Bug #27569314: ASSERTION `(UCHAR *)TABLE->DEF_READ_SET.BITMAP +
# TABLE->S->COLUMN_BITMAP_SIZE
#
# RQG bug, not directly re-producible. Provoking same issue using
# fault injection. Without fix, this would trigger same assert as seen
# in RQG. Triggered by a failure to call tmp_restore_column_map in case
# of errors.
CREATE TABLE t1(i INT);
SET SESSION debug="+d,sim_acq_fail_in_store_ci";
SHOW CREATE TABLE t1;
ERROR HY000: Got unknown error: 42
SET SESSION debug="";
DROP TABLE t1;
#
# Bug#28460158 SIG 11 IN ITEM_FUNC_GET_DD_CREATE_OPTIONS::VAL_STR AT SQL/ITEM_STRFUNC.CC:4167
#
CREATE TABLE t1(f1 INT, s VARCHAR(10));
SELECT TABLE_NAME, CREATE_OPTIONS FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_NAME='t1';
TABLE_NAME	CREATE_OPTIONS
t1	
SET debug = '+d,skip_dd_table_access_check';
update mysql.tables set options=concat(options,"abc") where name='t1';
SET debug = '+d,continue_on_property_string_parse_failure';
SELECT TABLE_NAME, CREATE_OPTIONS FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_NAME='t1';
TABLE_NAME	CREATE_OPTIONS
t1	
SET debug = DEFAULT;
DROP TABLE t1;
Pattern "Could not parse key-value pairs in property string.*" found
