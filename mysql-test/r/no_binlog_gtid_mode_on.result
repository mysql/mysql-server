RESET MASTER;
include/gtid_utils.inc
include/gtid_step_reset.inc
SET SESSION GTID_NEXT='MASTER_UUID:1';
CREATE TABLE t1( i INT) engine=INNODB;
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1
SET SESSION GTID_NEXT='MASTER_UUID:2';
INSERT INTO t1 VALUES (12);
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-2
SET SESSION GTID_NEXT='MASTER_UUID:3';
INSERT INTO t1 SELECT * FROM t1;
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-3
SET SESSION GTID_NEXT='MASTER_UUID:4';
UPDATE t1 SET i=13 WHERE i=12;
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-4
SET SESSION GTID_NEXT='MASTER_UUID:5';
DELETE FROM t1;
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-5
SET SESSION GTID_NEXT='MASTER_UUID:6';
ALTER TABLE t1 ADD COLUMN other_column INT;
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-6
SET SESSION GTID_NEXT='MASTER_UUID:7';
CREATE INDEX t_index ON t1(i);
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-7
SET SESSION GTID_NEXT='MASTER_UUID:8';
DROP INDEX t_index ON t1;
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-8
SET SESSION GTID_NEXT='MASTER_UUID:9';
RENAME TABLE t1 TO t2;
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-9
SET SESSION GTID_NEXT='MASTER_UUID:10';
DROP TABLE t2;
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-10
SET SESSION GTID_NEXT='MASTER_UUID:11';
CREATE TEMPORARY TABLE t1(i INT);
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-11
SET SESSION GTID_NEXT='MASTER_UUID:12';
DROP TEMPORARY TABLE t1;
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-12
SET SESSION GTID_NEXT='MASTER_UUID:13';
CREATE VIEW v1 as SELECT 1;
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-13
SET SESSION GTID_NEXT='MASTER_UUID:14';
DROP VIEW v1;
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-14
SET SESSION GTID_NEXT='MASTER_UUID:15';
CREATE USER user1;
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-15
SET SESSION GTID_NEXT='MASTER_UUID:16';
ALTER USER user1 IDENTIFIED BY 'passwd';
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-16
SET SESSION GTID_NEXT='MASTER_UUID:17';
GRANT ALL ON *.* TO user1;
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-17
SET SESSION GTID_NEXT='MASTER_UUID:18';
REVOKE ALL PRIVILEGES ON *.* FROM user1;
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-18
SET SESSION GTID_NEXT='MASTER_UUID:19';
DROP USER user1;
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-19
SET SESSION GTID_NEXT='MASTER_UUID:20';
CREATE DATABASE db1;
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-20
SET SESSION GTID_NEXT='MASTER_UUID:21';
ALTER DATABASE db1 DEFAULT CHARACTER SET utf8;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-21
SET SESSION GTID_NEXT='MASTER_UUID:22';
DROP DATABASE db1;
include/gtid_step_assert.inc [count=1, only_count=0]
FLUSH LOGS;
SELECT GTID_EXECUTED_FROM_TABLE();
GTID_EXECUTED_FROM_TABLE()
MASTER_UUID:1-22
#
# Bug #21459999  "ASSERTION FAILURE WHEN PREVIOUSLY UNUSED TIME
#                 ZONE IS USED WITH GTID + NO BINLOG"
CREATE TABLE t1(dt DATETIME) engine=INNODB;
SET SESSION GTID_NEXT='MASTER_UUID:23';
# Below statement caused assertion failure.
INSERT INTO t1 VALUES (CONVERT_TZ('2015-07-01 01:00:00', 'UTC', 'No-such-time-zone'));
SET SESSION GTID_NEXT='AUTOMATIC';
DROP TABLE t1;
include/gtid_utils_end.inc
