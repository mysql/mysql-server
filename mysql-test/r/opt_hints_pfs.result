#
# Bug #21286261: QUERY DIGEST DOES NOT REFLECT NEW OPTIMIZER HINTS
#
CREATE TABLE t1(i INT);
CREATE TABLE t2(i INT);
# Digests should be same (empty hint comment):
SELECT        * FROM t1;
SELECT /*+ */ * FROM t1;
SELECT digest, digest_text FROM performance_schema.events_statements_history ORDER BY timer_start DESC LIMIT 2;
digest	digest_text
ab76ae93006f3e27247a4605c9cc1677	SELECT * FROM `t1` 
ab76ae93006f3e27247a4605c9cc1677	SELECT * FROM `t1` 
# Digests should be different:
SELECT * FROM t1, t2;
SELECT /*+
BKA(t1@qb1)
BNL(@qb1 t1)
DUPSWEEDOUT
FIRSTMATCH
INTOEXISTS
LOOSESCAN
MATERIALIZATION
MRR(t1)
NO_BKA(t2)
NO_BNL(t2)
NO_ICP(t2)
NO_MRR(t2)
NO_RANGE_OPTIMIZATION(t2)
NO_SEMIJOIN(t2)
QB_NAME(qb1)
SEMIJOIN(t1)
SUBQUERY(t1)
*/ * FROM t1, t2;
SELECT digest, digest_text FROM performance_schema.events_statements_history ORDER BY timer_start DESC LIMIT 2;
digest	digest_text
d0a871b9001c79b2cc82d4a7a8b46976	SELECT /*+ BKA ( `t1`@`qb1` ) BNL ( @`qb1` `t1` ) DUPSWEEDOUT FIRSTMATCH INTOEXISTS LOOSESCAN MATERIALIZATION MRR ( `t1` ) NO_BKA ( `t2` ) NO_BNL ( `t2` ) NO_ICP ( `t2` ) NO_MRR ( `t2` ) NO_RANGE_OPTIMIZATION ( `t2` ) NO_SEMIJOIN ( `t2` ) QB_NAME ( `qb1` ) SEMIJOIN ( `t1` ) SUBQUERY ( `t1` ) */ * FROM `t1` , `t2` 
6d05afa5bad50f5e5fbf57e75df1fc3d	SELECT * FROM `t1` , `t2` 
SELECT * FROM t2, t1;
SELECT /*+ MAX_EXECUTION_TIME(4294967295) */ * FROM t2, t1;
SELECT digest, digest_text FROM performance_schema.events_statements_history ORDER BY timer_start DESC LIMIT 2;
digest	digest_text
edfef391abe51fdbb4195cb7e5c230a1	SELECT /*+ MAX_EXECUTION_TIME (?) */ * FROM `t2` , `t1` 
b086a183285eeb4944ac5b952d52294e	SELECT * FROM `t2` , `t1` 
SELECT 1;
SELECT /*+ bad_hint_also_goes_to_digest */ 1;
SELECT digest, digest_text FROM performance_schema.events_statements_history ORDER BY timer_start DESC LIMIT 2;
digest	digest_text
b7c3e3f868b665ce17ca877f6f667f81	SELECT /*+ `bad_hint_also_goes_to_digest` */ ? 
a532c6f3e890282b7eee77f35ee85ae9	SELECT ? 
DROP TABLE t1, t2;
#
# WL#681: Hint to temporarily set session variable for current statement
#
SELECT 1;
SELECT /*+ SET_VAR(foo = 1K) */ 1;
SELECT digest, digest_text FROM performance_schema.events_statements_history ORDER BY timer_start DESC LIMIT 2;
digest	digest_text
b58aae8e93b1f5bee1dc10aed8c36ed8	SELECT /*+ SET_VAR ( `foo` = ? ) */ ? 
a532c6f3e890282b7eee77f35ee85ae9	SELECT ? 
SELECT 1;
SELECT /*+ SET_VAR(bar = 'baz') */ 1;
SELECT digest, digest_text FROM performance_schema.events_statements_history ORDER BY timer_start DESC LIMIT 2;
digest	digest_text
f08104a2def4b8d9a97f33106d9c71b0	SELECT /*+ SET_VAR ( `bar` = ? ) */ ? 
a532c6f3e890282b7eee77f35ee85ae9	SELECT ? 
