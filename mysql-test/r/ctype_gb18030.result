SET @test_character_set= 'gb18030';
SET @test_collation= 'gb18030_chinese_ci';
SET @safe_character_set_server= @@character_set_server;
SET @safe_collation_server= @@collation_server;
SET @safe_character_set_client= @@character_set_client;
SET @safe_character_set_results= @@character_set_results;
SET character_set_server= @test_character_set;
SET collation_server= @test_collation;
CREATE DATABASE d1;
USE d1;
CREATE TABLE t1 (c CHAR(10), KEY(c));
SHOW FULL COLUMNS FROM t1;
Field	Type	Collation	Null	Key	Default	Extra	Privileges	Comment
c	char(10)	gb18030_chinese_ci	YES	MUL	NULL			
INSERT INTO t1 VALUES ('aaa'),('aaaa'),('aaaaa');
SELECT c as want3results FROM t1 WHERE c LIKE 'aaa%';
want3results
aaa
aaaa
aaaaa
DROP TABLE t1;
CREATE TABLE t1 (c1 varchar(15), KEY c1 (c1(2)));
SHOW FULL COLUMNS FROM t1;
Field	Type	Collation	Null	Key	Default	Extra	Privileges	Comment
c1	varchar(15)	gb18030_chinese_ci	YES	MUL	NULL			
INSERT INTO t1 VALUES ('location'),('loberge'),('lotre'),('boabab');
SELECT c1 as want3results from t1 where c1 like 'l%';
want3results
location
loberge
lotre
SELECT c1 as want3results from t1 where c1 like 'lo%';
want3results
location
loberge
lotre
SELECT c1 as want1result  from t1 where c1 like 'loc%';
want1result
location
SELECT c1 as want1result  from t1 where c1 like 'loca%';
want1result
location
SELECT c1 as want1result  from t1 where c1 like 'locat%';
want1result
location
SELECT c1 as want1result  from t1 where c1 like 'locati%';
want1result
location
SELECT c1 as want1result  from t1 where c1 like 'locatio%';
want1result
location
SELECT c1 as want1result  from t1 where c1 like 'location%';
want1result
location
DROP TABLE t1;
create table t1 (a set('a') not null);
insert ignore into t1 values (),();
Warnings:
Warning	1364	Field 'a' doesn't have a default value
select cast(a as char(1)) from t1;
cast(a as char(1))


select a sounds like a from t1;
a sounds like a
1
1
select 1 from t1 order by cast(a as char(1));
1
1
1
drop table t1;
set names utf8;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
create table t1 (
name varchar(10),
level smallint unsigned);
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `name` varchar(10) DEFAULT NULL,
  `level` smallint unsigned DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=gb18030
insert into t1 values ('string',1);
select concat(name,space(level)), concat(name, repeat(' ',level)) from t1;
concat(name,space(level))	concat(name, repeat(' ',level))
string 	string 
drop table t1;
DROP DATABASE d1;
USE test;
SET character_set_server= @safe_character_set_server;
SET collation_server= @safe_collation_server;
SET character_set_client= @safe_character_set_client;
SET character_set_results= @safe_character_set_results;
SET NAMES utf8;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
SET collation_connection='gb18030_chinese_ci';
create table t1 select repeat('a',4000) a;
delete from t1;
insert into t1 values ('a'), ('a '), ('a\t');
select collation(a),hex(a) from t1 order by a;
collation(a)	hex(a)
gb18030_chinese_ci	6109
gb18030_chinese_ci	61
gb18030_chinese_ci	6120
drop table t1;
create table t1 engine=innodb select repeat('a',50) as c1;
alter table t1 add index(c1(5));
insert into t1 values ('abcdefg'),('abcde100'),('abcde110'),('abcde111');
select collation(c1) from t1 limit 1;
collation(c1)
gb18030_chinese_ci
select c1 from t1 where c1 like 'abcdef%' order by c1;
c1
abcdefg
select c1 from t1 where c1 like 'abcde1%' order by c1;
c1
abcde100
abcde110
abcde111
select c1 from t1 where c1 like 'abcde11%' order by c1;
c1
abcde110
abcde111
select c1 from t1 where c1 like 'abcde111%' order by c1;
c1
abcde111
drop table t1;
select @@collation_connection;
@@collation_connection
gb18030_chinese_ci
create table t1 ROW_FORMAT=DYNAMIC select repeat('a',50) as c1 ;
insert into t1 values('abcdef');
insert into t1 values('_bcdef');
insert into t1 values('a_cdef');
insert into t1 values('ab_def');
insert into t1 values('abc_ef');
insert into t1 values('abcd_f');
insert into t1 values('abcde_');
select c1 as c1u from t1 where c1 like 'ab\_def';
c1u
ab_def
select c1 as c2h from t1 where c1 like 'ab#_def' escape '#';
c2h
ab_def
drop table t1;
CREATE TABLE t1 AS
SELECT 10 AS a, REPEAT('a',20) AS b, REPEAT('a',8) AS c, REPEAT('a',8) AS d;
ALTER TABLE t1 ADD PRIMARY KEY(a), ADD KEY(b);
INSERT INTO t1 (a, b) VALUES (1, repeat(0xF1F2,5));
INSERT INTO t1 (a, b) VALUES (2, repeat(0xF1F2,10));
INSERT INTO t1 (a, b) VALUES (3, repeat(0xF1F2,11));
INSERT INTO t1 (a, b) VALUES (4, repeat(0xF1F2,12));
SELECT hex(concat(repeat(0xF1F2, 10), '%'));
hex(concat(repeat(0xF1F2, 10), '%'))
F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F225
3 rows expected
SELECT a, hex(b), c FROM t1 WHERE b LIKE concat(repeat(0xF1F2,10), '%');
a	hex(b)	c
2	F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2	NULL
3	F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2	NULL
4	F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2	NULL
DROP TABLE t1;
drop table if exists t1;
create table t1 select repeat('a',10) as c1;
delete from t1;
insert into t1 values (0x20),(0x21),(0x22),(0x23),(0x24),(0x25),(0x26),(0x27),(0x28),(0x29),(0x2A),(0x2B),(0x2C),(0x2D),(0x2E),(0x2F);
insert into t1 values (0x30),(0x31),(0x32),(0x33),(0x34),(0x35),(0x36),(0x37),(0x38),(0x39),(0x3A),(0x3B),(0x3C),(0x3D),(0x3E),(0x3F);
insert into t1 values (0x40),(0x41),(0x42),(0x43),(0x44),(0x45),(0x46),(0x47),(0x48),(0x49),(0x4A),(0x4B),(0x4C),(0x4D),(0x4E),(0x4F);
insert into t1 values (0x50),(0x51),(0x52),(0x53),(0x54),(0x55),(0x56),(0x57),(0x58),(0x59),(0x5A),(0x5B),(0x5C),(0x5D),(0x5E),(0x5F);
insert into t1 values (0x60),(0x61),(0x62),(0x63),(0x64),(0x65),(0x66),(0x67),(0x68),(0x69),(0x6A),(0x6B),(0x6C),(0x6D),(0x6E),(0x6F);
insert into t1 values (0x70),(0x71),(0x72),(0x73),(0x74),(0x75),(0x76),(0x77),(0x78),(0x79),(0x7A),(0x7B),(0x7C),(0x7D),(0x7E),(0x7F);
SELECT HEX(cx), cy
FROM (SELECT GROUP_CONCAT(c1 ORDER BY binary c1 SEPARATOR '') AS cx,
GROUP_CONCAT(HEX(c1) ORDER BY BINARY c1) AS cy
FROM t1
GROUP BY c1
) AS dt;
HEX(cx)	cy
20	20
21	21
22	22
23	23
24	24
25	25
26	26
27	27
28	28
29	29
2A	2A
2B	2B
2C	2C
2D	2D
2E	2E
2F	2F
30	30
31	31
32	32
33	33
34	34
35	35
36	36
37	37
38	38
39	39
3A	3A
3B	3B
3C	3C
3D	3D
3E	3E
3F	3F
40	40
4161	41,61
4262	42,62
4363	43,63
4464	44,64
4565	45,65
4666	46,66
4767	47,67
4868	48,68
4969	49,69
4A6A	4A,6A
4B6B	4B,6B
4C6C	4C,6C
4D6D	4D,6D
4E6E	4E,6E
4F6F	4F,6F
5070	50,70
5171	51,71
5272	52,72
5373	53,73
5474	54,74
5575	55,75
5676	56,76
5777	57,77
5878	58,78
5979	59,79
5A7A	5A,7A
5B	5B
5C	5C
5D	5D
5E	5E
5F	5F
60	60
7B	7B
7C	7C
7D	7D
7E	7E
7F	7F
Warnings:
Warning	1287	'BINARY expr' is deprecated and will be removed in a future release. Please use CAST instead
Warning	1287	'BINARY expr' is deprecated and will be removed in a future release. Please use CAST instead
drop table t1;
SET collation_connection='gb18030_bin';
create table t1 select repeat('a',4000) a;
delete from t1;
insert into t1 values ('a'), ('a '), ('a\t');
select collation(a),hex(a) from t1 order by a;
collation(a)	hex(a)
gb18030_bin	6109
gb18030_bin	61
gb18030_bin	6120
drop table t1;
create table t1 engine=innodb select repeat('a',50) as c1;
alter table t1 add index(c1(5));
insert into t1 values ('abcdefg'),('abcde100'),('abcde110'),('abcde111');
select collation(c1) from t1 limit 1;
collation(c1)
gb18030_bin
select c1 from t1 where c1 like 'abcdef%' order by c1;
c1
abcdefg
select c1 from t1 where c1 like 'abcde1%' order by c1;
c1
abcde100
abcde110
abcde111
select c1 from t1 where c1 like 'abcde11%' order by c1;
c1
abcde110
abcde111
select c1 from t1 where c1 like 'abcde111%' order by c1;
c1
abcde111
drop table t1;
select @@collation_connection;
@@collation_connection
gb18030_bin
create table t1 ROW_FORMAT=DYNAMIC select repeat('a',50) as c1 ;
insert into t1 values('abcdef');
insert into t1 values('_bcdef');
insert into t1 values('a_cdef');
insert into t1 values('ab_def');
insert into t1 values('abc_ef');
insert into t1 values('abcd_f');
insert into t1 values('abcde_');
select c1 as c1u from t1 where c1 like 'ab\_def';
c1u
ab_def
select c1 as c2h from t1 where c1 like 'ab#_def' escape '#';
c2h
ab_def
drop table t1;
CREATE TABLE t1 AS
SELECT 10 AS a, REPEAT('a',20) AS b, REPEAT('a',8) AS c, REPEAT('a',8) AS d;
ALTER TABLE t1 ADD PRIMARY KEY(a), ADD KEY(b);
INSERT INTO t1 (a, b) VALUES (1, repeat(0xF1F2,5));
INSERT INTO t1 (a, b) VALUES (2, repeat(0xF1F2,10));
INSERT INTO t1 (a, b) VALUES (3, repeat(0xF1F2,11));
INSERT INTO t1 (a, b) VALUES (4, repeat(0xF1F2,12));
SELECT hex(concat(repeat(0xF1F2, 10), '%'));
hex(concat(repeat(0xF1F2, 10), '%'))
F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F225
3 rows expected
SELECT a, hex(b), c FROM t1 WHERE b LIKE concat(repeat(0xF1F2,10), '%');
a	hex(b)	c
2	F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2	NULL
3	F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2	NULL
4	F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2F1F2	NULL
DROP TABLE t1;
SELECT HEX(CONVERT(_gb18030 0xA14041 USING ucs2));
HEX(CONVERT(_gb18030 0xA14041 USING ucs2))
E4C60041
Warnings:
Warning	1287	'ucs2' is deprecated and will be removed in a future release. Please use utf8mb4 instead
SELECT HEX(CONVERT(_gb18030 0xA14041 USING utf8));
HEX(CONVERT(_gb18030 0xA14041 USING utf8))
EE938641
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
SELECT HEX(CONVERT(_gb18030 0xFEFEFEFD814040 USING utf32));
HEX(CONVERT(_gb18030 0xFEFEFEFD814040 USING utf32))
0000E4C50000E4C400004E0200000040
SELECT HEX(CONVERT(_gb18030 0x813081304041A140 USING utf32));
HEX(CONVERT(_gb18030 0x813081304041A140 USING utf32))
0000008000000040000000410000E4C6
SELECT HEX(CONVERT(_gb18030 0xE3329A34 USING utf32));
HEX(CONVERT(_gb18030 0xE3329A34 USING utf32))
0010FFFE
SELECT HEX(CONVERT(_gb18030 0xE3329A35 USING utf32));
HEX(CONVERT(_gb18030 0xE3329A35 USING utf32))
0010FFFF
SELECT HEX(CONVERT(_gb18030 0xE3329A36 USING utf32));
HEX(CONVERT(_gb18030 0xE3329A36 USING utf32))
0000003F
SELECT HEX(CONVERT(_gb18030 0xFE39FE39 USING utf32));
HEX(CONVERT(_gb18030 0xFE39FE39 USING utf32))
0000003F
SELECT HEX(CONVERT(_ucs2 0xD800 USING gb18030));
HEX(CONVERT(_ucs2 0xD800 USING gb18030))
3F
Warnings:
Warning	1287	'ucs2' is deprecated and will be removed in a future release. Please use utf8mb4 instead
SELECT HEX(CONVERT(_ucs2 0xDFFF USING gb18030));
HEX(CONVERT(_ucs2 0xDFFF USING gb18030))
3F
Warnings:
Warning	1287	'ucs2' is deprecated and will be removed in a future release. Please use utf8mb4 instead
SELECT HEX(CONVERT(_ucs2 0xE000 USING gb18030));
HEX(CONVERT(_ucs2 0xE000 USING gb18030))
AAA1
Warnings:
Warning	1287	'ucs2' is deprecated and will be removed in a future release. Please use utf8mb4 instead
SELECT HEX(CONVERT(_ucs2 0xF8FF USING gb18030));
HEX(CONVERT(_ucs2 0xF8FF USING gb18030))
84308130
Warnings:
Warning	1287	'ucs2' is deprecated and will be removed in a future release. Please use utf8mb4 instead
SELECT HEX(CONVERT(_gb18030 0xA13941 USING ucs2));
ERROR HY000: Invalid gb18030 character string: 'A13941'
SELECT HEX(CONVERT(_gb18030 0xFFFE USING ucs2));
ERROR HY000: Invalid gb18030 character string: 'FFFE'
SELECT HEX(CONVERT(_gb18030 0x81308140 USING ucs2));
ERROR HY000: Invalid gb18030 character string: '813081'
SELECT LOCATE(_gb18030 0x8140, _gb18030 0x814181408142);
LOCATE(_gb18030 0x8140, _gb18030 0x814181408142)
2
SELECT HEX(REVERSE(_gb18030 0x8140814181428130813081308131FE39FE39));
HEX(REVERSE(_gb18030 0x8140814181428130813081308131FE39FE39))
FE39FE398130813181308130814281418140
SELECT HEX(SUBSTRING(_gb18030 0x81308131813081328130813381308134, 1, 2));
HEX(SUBSTRING(_gb18030 0x81308131813081328130813381308134, 1, 2))
8130813181308132
SELECT HEX(SUBSTRING(_gb18030 0x81308131813081328130813381308134, -3, 2));
HEX(SUBSTRING(_gb18030 0x81308131813081328130813381308134, -3, 2))
8130813281308133
SELECT HEX(TRIM(_gb18030 0x20202081408141208144202020));
HEX(TRIM(_gb18030 0x20202081408141208144202020))
81408141208144
CREATE TABLE t1 (c1 TEXT not null, c2 TEXT not null) CHARACTER SET gb18030;
ALTER TABLE t1 CHANGE c1 c1 MEDIUMTEXT CHARACTER SET gb18030 NOT NULL;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `c1` mediumtext CHARACTER SET gb18030 COLLATE gb18030_chinese_ci NOT NULL,
  `c2` text NOT NULL
) ENGINE=default_engine DEFAULT CHARSET=gb18030
DROP TABLE t1;
CREATE TABLE t1(a MEDIUMTEXT CHARACTER SET gb18030,
b MEDIUMTEXT CHARACTER SET big5);
INSERT INTO t1 VALUES
(REPEAT(0x1125,200000), REPEAT(0x1125,200000)), ('', ''), ('', '');
SELECT a FROM t1 GROUP BY 1 LIMIT 1 INTO @nullll;
SELECT b FROM t1 GROUP BY 1 LIMIT 1 INTO @nullll;
DROP TABLES t1;
SET NAMES utf8mb4;
SET collation_connection=gb18030_chinese_ci;
select @@collation_connection;
@@collation_connection
gb18030_chinese_ci
select hex(weight_string('a'));
hex(weight_string('a'))
41
select hex(weight_string('A'));
hex(weight_string('A'))
41
select hex(weight_string('abc'));
hex(weight_string('abc'))
414243
select hex(weight_string('abc' as char(2)));
hex(weight_string('abc' as char(2)))
4142
select hex(weight_string('abc' as char(3)));
hex(weight_string('abc' as char(3)))
414243
select hex(weight_string('abc' as char(5)));
hex(weight_string('abc' as char(5)))
4142432020
select hex(weight_string('abc', 1, 2, 0xC0));
hex(weight_string('abc', 1, 2, 0xC0))
41
select hex(weight_string('abc', 2, 2, 0xC0));
hex(weight_string('abc', 2, 2, 0xC0))
4142
select hex(weight_string('abc', 3, 2, 0xC0));
hex(weight_string('abc', 3, 2, 0xC0))
414220
select hex(weight_string('abc', 4, 2, 0xC0));
hex(weight_string('abc', 4, 2, 0xC0))
41422020
select hex(weight_string('abc', 5, 2, 0xC0));
hex(weight_string('abc', 5, 2, 0xC0))
4142202020
select hex(weight_string('abc',25, 2, 0xC0));
hex(weight_string('abc',25, 2, 0xC0))
41422020202020202020202020202020202020202020202020
select hex(weight_string('abc', 1, 3, 0xC0));
hex(weight_string('abc', 1, 3, 0xC0))
41
select hex(weight_string('abc', 2, 3, 0xC0));
hex(weight_string('abc', 2, 3, 0xC0))
4142
select hex(weight_string('abc', 3, 3, 0xC0));
hex(weight_string('abc', 3, 3, 0xC0))
414243
select hex(weight_string('abc', 4, 3, 0xC0));
hex(weight_string('abc', 4, 3, 0xC0))
41424320
select hex(weight_string('abc', 5, 3, 0xC0));
hex(weight_string('abc', 5, 3, 0xC0))
4142432020
select hex(weight_string('abc',25, 3, 0xC0));
hex(weight_string('abc',25, 3, 0xC0))
41424320202020202020202020202020202020202020202020
select hex(weight_string('abc', 1, 4, 0xC0));
hex(weight_string('abc', 1, 4, 0xC0))
41
select hex(weight_string('abc', 2, 4, 0xC0));
hex(weight_string('abc', 2, 4, 0xC0))
4142
select hex(weight_string('abc', 3, 4, 0xC0));
hex(weight_string('abc', 3, 4, 0xC0))
414243
select hex(weight_string('abc', 4, 4, 0xC0));
hex(weight_string('abc', 4, 4, 0xC0))
41424320
select hex(weight_string('abc', 5, 4, 0xC0));
hex(weight_string('abc', 5, 4, 0xC0))
4142432020
select hex(weight_string('abc',25, 4, 0xC0));
hex(weight_string('abc',25, 4, 0xC0))
41424320202020202020202020202020202020202020202020
select collation(cast(0xA1A1 as char));
collation(cast(0xA1A1 as char))
gb18030_chinese_ci
select hex(weight_string(cast(0x6141 as char)));
hex(weight_string(cast(0x6141 as char)))
4141
select hex(weight_string(cast(0xA1A1 as char)));
hex(weight_string(cast(0xA1A1 as char)))
A1A1
select hex(weight_string(cast(0xA1A1 as char) as char(1)));
hex(weight_string(cast(0xA1A1 as char) as char(1)))
A1A1
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(1)));
hex(weight_string(cast(0xA1A1A1A1 as char) as char(1)))
A1A1
select hex(weight_string(cast(0xA1A1 as char) as char(3)));
hex(weight_string(cast(0xA1A1 as char) as char(3)))
A1A12020
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(3)));
hex(weight_string(cast(0xA1A1A1A1 as char) as char(3)))
A1A1A1A120
select hex(weight_string(cast(0x40A1A1 as char) as char(3)));
hex(weight_string(cast(0x40A1A1 as char) as char(3)))
40A1A120
select hex(weight_string(cast(0x40A1A1A1A1 as char) as char(3)));
hex(weight_string(cast(0x40A1A1A1A1 as char) as char(3)))
40A1A1A1A1
select hex(weight_string(cast(0x40A1A1A1A1A1A1 as char) as char(3)));
hex(weight_string(cast(0x40A1A1A1A1A1A1 as char) as char(3)))
40A1A1A1A1
select hex(weight_string(cast(0x4040A1A1A1A1A1A1 as char) as char(3)));
hex(weight_string(cast(0x4040A1A1A1A1A1A1 as char) as char(3)))
4040A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 2, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 2, 0xC0))
A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 2, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 2, 0xC0))
A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 2, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 2, 0xC0))
A1A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 2, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 2, 0xC0))
A1A1A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 2, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 2, 0xC0))
A1A1A1A120
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 2, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 2, 0xC0))
A1A1A1A1202020202020202020202020202020202020202020
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 3, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 3, 0xC0))
A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 3, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 3, 0xC0))
A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 3, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 3, 0xC0))
A1A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 3, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 3, 0xC0))
A1A1A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 3, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 3, 0xC0))
A1A1A1A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 3, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 3, 0xC0))
A1A1A1A1A1A120202020202020202020202020202020202020
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 4, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 4, 0xC0))
A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 4, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 4, 0xC0))
A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 4, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 4, 0xC0))
A1A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 4, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 4, 0xC0))
A1A1A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 4, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 4, 0xC0))
A1A1A1A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 4, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 4, 0xC0))
A1A1A1A1A1A120202020202020202020202020202020202020
select collation(cast(0xA2A9 as char));
collation(cast(0xA2A9 as char))
gb18030_chinese_ci
select hex(weight_string(cast(0x6141 as char)));
hex(weight_string(cast(0x6141 as char)))
4141
select hex(weight_string(cast(0xA2A9 as char)));
hex(weight_string(cast(0xA2A9 as char)))
A2F9
select hex(weight_string(cast(0xA2A9 as char) as char(1)));
hex(weight_string(cast(0xA2A9 as char) as char(1)))
A2F9
select hex(weight_string(cast(0xA2A9A2A9 as char) as char(1)));
hex(weight_string(cast(0xA2A9A2A9 as char) as char(1)))
A2F9
select hex(weight_string(cast(0xA2A9 as char) as char(3)));
hex(weight_string(cast(0xA2A9 as char) as char(3)))
A2F92020
select hex(weight_string(cast(0xA2A9A2A9 as char) as char(3)));
hex(weight_string(cast(0xA2A9A2A9 as char) as char(3)))
A2F9A2F920
select hex(weight_string(cast(0x40A2A9 as char) as char(3)));
hex(weight_string(cast(0x40A2A9 as char) as char(3)))
40A2F920
select hex(weight_string(cast(0x40A2A9A2A9 as char) as char(3)));
hex(weight_string(cast(0x40A2A9A2A9 as char) as char(3)))
40A2F9A2F9
select hex(weight_string(cast(0x40A2A9A2A9A2A9 as char) as char(3)));
hex(weight_string(cast(0x40A2A9A2A9A2A9 as char) as char(3)))
40A2F9A2F9
select hex(weight_string(cast(0x4040A2A9A2A9A2A9 as char) as char(3)));
hex(weight_string(cast(0x4040A2A9A2A9A2A9 as char) as char(3)))
4040A2F9
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 1, 2, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 1, 2, 0xC0))
A2
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 2, 2, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 2, 2, 0xC0))
A2F9
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 3, 2, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 3, 2, 0xC0))
A2F9A2
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 4, 2, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 4, 2, 0xC0))
A2F9A2F9
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 5, 2, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 5, 2, 0xC0))
A2F9A2F920
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char),25, 2, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char),25, 2, 0xC0))
A2F9A2F9202020202020202020202020202020202020202020
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 1, 3, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 1, 3, 0xC0))
A2
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 2, 3, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 2, 3, 0xC0))
A2F9
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 3, 3, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 3, 3, 0xC0))
A2F9A2
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 4, 3, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 4, 3, 0xC0))
A2F9A2F9
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 5, 3, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 5, 3, 0xC0))
A2F9A2F9A2
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char),25, 3, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char),25, 3, 0xC0))
A2F9A2F9A2F920202020202020202020202020202020202020
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 1, 4, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 1, 4, 0xC0))
A2
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 2, 4, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 2, 4, 0xC0))
A2F9
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 3, 4, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 3, 4, 0xC0))
A2F9A2
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 4, 4, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 4, 4, 0xC0))
A2F9A2F9
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 5, 4, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 5, 4, 0xC0))
A2F9A2F9A2
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char),25, 4, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char),25, 4, 0xC0))
A2F9A2F9A2F920202020202020202020202020202020202020
SELECT collation(CAST(0x81309D30 AS CHAR));
collation(CAST(0x81309D30 AS CHAR))
gb18030_chinese_ci
SELECT HEX(WEIGHT_STRING(CAST(0x6141 AS CHAR)));
HEX(WEIGHT_STRING(CAST(0x6141 AS CHAR)))
4141
SELECT HEX(WEIGHT_STRING(CAST(0x81309D30 AS CHAR)));
HEX(WEIGHT_STRING(CAST(0x81309D30 AS CHAR)))
FF000117
SELECT HEX(WEIGHT_STRING(CAST(0x81309D30 AS CHAR) AS CHAR(1)));
HEX(WEIGHT_STRING(CAST(0x81309D30 AS CHAR) AS CHAR(1)))
FF000117
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D30 AS CHAR) AS CHAR(1)));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D30 AS CHAR) AS CHAR(1)))
FF000117
SELECT HEX(WEIGHT_STRING(CAST(0x81309D30 AS CHAR) AS CHAR(3)));
HEX(WEIGHT_STRING(CAST(0x81309D30 AS CHAR) AS CHAR(3)))
FF0001172020
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D30 AS CHAR) AS CHAR(3)));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D30 AS CHAR) AS CHAR(3)))
FF000117FF00011720
SELECT HEX(WEIGHT_STRING(CAST(0x4081309D30 AS CHAR) AS CHAR(3)));
HEX(WEIGHT_STRING(CAST(0x4081309D30 AS CHAR) AS CHAR(3)))
40FF00011720
SELECT HEX(WEIGHT_STRING(CAST(0x4081309D3081309D30 AS CHAR) AS CHAR(3)));
HEX(WEIGHT_STRING(CAST(0x4081309D3081309D30 AS CHAR) AS CHAR(3)))
40FF000117FF000117
SELECT HEX(WEIGHT_STRING(CAST(0x4081309D3081309D3081309D30 AS CHAR) AS CHAR(3)));
HEX(WEIGHT_STRING(CAST(0x4081309D3081309D3081309D30 AS CHAR) AS CHAR(3)))
40FF000117FF000117
SELECT HEX(WEIGHT_STRING(CAST(0x404081309D3081309D3081309D30 AS CHAR) AS CHAR(3)));
HEX(WEIGHT_STRING(CAST(0x404081309D3081309D3081309D30 AS CHAR) AS CHAR(3)))
4040FF000117
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 1, 2, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 1, 2, 0xC0))
FF
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 2, 2, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 2, 2, 0xC0))
FF00
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 3, 2, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 3, 2, 0xC0))
FF0001
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 4, 2, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 4, 2, 0xC0))
FF000117
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 5, 2, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 5, 2, 0xC0))
FF000117FF
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 25, 2, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 25, 2, 0xC0))
FF000117FF0001172020202020202020202020202020202020
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 1, 3, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 1, 3, 0xC0))
FF
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 2, 3, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 2, 3, 0xC0))
FF00
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 3, 3, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 3, 3, 0xC0))
FF0001
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 4, 3, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 4, 3, 0xC0))
FF000117
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 5, 3, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 5, 3, 0xC0))
FF000117FF
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 25, 3, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 25, 3, 0xC0))
FF000117FF000117FF00011720202020202020202020202020
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 1, 4, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 1, 4, 0xC0))
FF
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 2, 4, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 2, 4, 0xC0))
FF00
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 3, 4, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 3, 4, 0xC0))
FF0001
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 4, 4, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 4, 4, 0xC0))
FF000117
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 5, 4, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 5, 4, 0xC0))
FF000117FF
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 25, 4, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 25, 4, 0xC0))
FF000117FF000117FF00011720202020202020202020202020
SET collation_connection=gb18030_bin;
select @@collation_connection;
@@collation_connection
gb18030_bin
select hex(weight_string('a'));
hex(weight_string('a'))
61
select hex(weight_string('A'));
hex(weight_string('A'))
41
select hex(weight_string('abc'));
hex(weight_string('abc'))
616263
select hex(weight_string('abc' as char(2)));
hex(weight_string('abc' as char(2)))
6162
select hex(weight_string('abc' as char(3)));
hex(weight_string('abc' as char(3)))
616263
select hex(weight_string('abc' as char(5)));
hex(weight_string('abc' as char(5)))
6162632020
select hex(weight_string('abc', 1, 2, 0xC0));
hex(weight_string('abc', 1, 2, 0xC0))
61
select hex(weight_string('abc', 2, 2, 0xC0));
hex(weight_string('abc', 2, 2, 0xC0))
6162
select hex(weight_string('abc', 3, 2, 0xC0));
hex(weight_string('abc', 3, 2, 0xC0))
616220
select hex(weight_string('abc', 4, 2, 0xC0));
hex(weight_string('abc', 4, 2, 0xC0))
61622020
select hex(weight_string('abc', 5, 2, 0xC0));
hex(weight_string('abc', 5, 2, 0xC0))
6162202020
select hex(weight_string('abc',25, 2, 0xC0));
hex(weight_string('abc',25, 2, 0xC0))
61622020202020202020202020202020202020202020202020
select hex(weight_string('abc', 1, 3, 0xC0));
hex(weight_string('abc', 1, 3, 0xC0))
61
select hex(weight_string('abc', 2, 3, 0xC0));
hex(weight_string('abc', 2, 3, 0xC0))
6162
select hex(weight_string('abc', 3, 3, 0xC0));
hex(weight_string('abc', 3, 3, 0xC0))
616263
select hex(weight_string('abc', 4, 3, 0xC0));
hex(weight_string('abc', 4, 3, 0xC0))
61626320
select hex(weight_string('abc', 5, 3, 0xC0));
hex(weight_string('abc', 5, 3, 0xC0))
6162632020
select hex(weight_string('abc',25, 3, 0xC0));
hex(weight_string('abc',25, 3, 0xC0))
61626320202020202020202020202020202020202020202020
select hex(weight_string('abc', 1, 4, 0xC0));
hex(weight_string('abc', 1, 4, 0xC0))
61
select hex(weight_string('abc', 2, 4, 0xC0));
hex(weight_string('abc', 2, 4, 0xC0))
6162
select hex(weight_string('abc', 3, 4, 0xC0));
hex(weight_string('abc', 3, 4, 0xC0))
616263
select hex(weight_string('abc', 4, 4, 0xC0));
hex(weight_string('abc', 4, 4, 0xC0))
61626320
select hex(weight_string('abc', 5, 4, 0xC0));
hex(weight_string('abc', 5, 4, 0xC0))
6162632020
select hex(weight_string('abc',25, 4, 0xC0));
hex(weight_string('abc',25, 4, 0xC0))
61626320202020202020202020202020202020202020202020
select collation(cast(0xA1A1 as char));
collation(cast(0xA1A1 as char))
gb18030_bin
select hex(weight_string(cast(0x6141 as char)));
hex(weight_string(cast(0x6141 as char)))
6141
select hex(weight_string(cast(0xA1A1 as char)));
hex(weight_string(cast(0xA1A1 as char)))
A1A1
select hex(weight_string(cast(0xA1A1 as char) as char(1)));
hex(weight_string(cast(0xA1A1 as char) as char(1)))
A1A1
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(1)));
hex(weight_string(cast(0xA1A1A1A1 as char) as char(1)))
A1A1
select hex(weight_string(cast(0xA1A1 as char) as char(3)));
hex(weight_string(cast(0xA1A1 as char) as char(3)))
A1A12020
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(3)));
hex(weight_string(cast(0xA1A1A1A1 as char) as char(3)))
A1A1A1A120
select hex(weight_string(cast(0x40A1A1 as char) as char(3)));
hex(weight_string(cast(0x40A1A1 as char) as char(3)))
40A1A120
select hex(weight_string(cast(0x40A1A1A1A1 as char) as char(3)));
hex(weight_string(cast(0x40A1A1A1A1 as char) as char(3)))
40A1A1A1A1
select hex(weight_string(cast(0x40A1A1A1A1A1A1 as char) as char(3)));
hex(weight_string(cast(0x40A1A1A1A1A1A1 as char) as char(3)))
40A1A1A1A1
select hex(weight_string(cast(0x4040A1A1A1A1A1A1 as char) as char(3)));
hex(weight_string(cast(0x4040A1A1A1A1A1A1 as char) as char(3)))
4040A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 2, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 2, 0xC0))
A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 2, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 2, 0xC0))
A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 2, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 2, 0xC0))
A1A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 2, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 2, 0xC0))
A1A1A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 2, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 2, 0xC0))
A1A1A1A120
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 2, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 2, 0xC0))
A1A1A1A1202020202020202020202020202020202020202020
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 3, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 3, 0xC0))
A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 3, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 3, 0xC0))
A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 3, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 3, 0xC0))
A1A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 3, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 3, 0xC0))
A1A1A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 3, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 3, 0xC0))
A1A1A1A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 3, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 3, 0xC0))
A1A1A1A1A1A120202020202020202020202020202020202020
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 4, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 4, 0xC0))
A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 4, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 4, 0xC0))
A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 4, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 4, 0xC0))
A1A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 4, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 4, 0xC0))
A1A1A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 4, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 4, 0xC0))
A1A1A1A1A1
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 4, 0xC0));
hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 4, 0xC0))
A1A1A1A1A1A120202020202020202020202020202020202020
select collation(cast(0xA2A9 as char));
collation(cast(0xA2A9 as char))
gb18030_bin
select hex(weight_string(cast(0x6141 as char)));
hex(weight_string(cast(0x6141 as char)))
6141
select hex(weight_string(cast(0xA2A9 as char)));
hex(weight_string(cast(0xA2A9 as char)))
A2A9
select hex(weight_string(cast(0xA2A9 as char) as char(1)));
hex(weight_string(cast(0xA2A9 as char) as char(1)))
A2A9
select hex(weight_string(cast(0xA2A9A2A9 as char) as char(1)));
hex(weight_string(cast(0xA2A9A2A9 as char) as char(1)))
A2A9
select hex(weight_string(cast(0xA2A9 as char) as char(3)));
hex(weight_string(cast(0xA2A9 as char) as char(3)))
A2A92020
select hex(weight_string(cast(0xA2A9A2A9 as char) as char(3)));
hex(weight_string(cast(0xA2A9A2A9 as char) as char(3)))
A2A9A2A920
select hex(weight_string(cast(0x40A2A9 as char) as char(3)));
hex(weight_string(cast(0x40A2A9 as char) as char(3)))
40A2A920
select hex(weight_string(cast(0x40A2A9A2A9 as char) as char(3)));
hex(weight_string(cast(0x40A2A9A2A9 as char) as char(3)))
40A2A9A2A9
select hex(weight_string(cast(0x40A2A9A2A9A2A9 as char) as char(3)));
hex(weight_string(cast(0x40A2A9A2A9A2A9 as char) as char(3)))
40A2A9A2A9
select hex(weight_string(cast(0x4040A2A9A2A9A2A9 as char) as char(3)));
hex(weight_string(cast(0x4040A2A9A2A9A2A9 as char) as char(3)))
4040A2A9
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 1, 2, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 1, 2, 0xC0))
A2
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 2, 2, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 2, 2, 0xC0))
A2A9
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 3, 2, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 3, 2, 0xC0))
A2A9A2
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 4, 2, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 4, 2, 0xC0))
A2A9A2A9
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 5, 2, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 5, 2, 0xC0))
A2A9A2A920
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char),25, 2, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char),25, 2, 0xC0))
A2A9A2A9202020202020202020202020202020202020202020
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 1, 3, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 1, 3, 0xC0))
A2
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 2, 3, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 2, 3, 0xC0))
A2A9
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 3, 3, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 3, 3, 0xC0))
A2A9A2
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 4, 3, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 4, 3, 0xC0))
A2A9A2A9
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 5, 3, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 5, 3, 0xC0))
A2A9A2A9A2
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char),25, 3, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char),25, 3, 0xC0))
A2A9A2A9A2A920202020202020202020202020202020202020
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 1, 4, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 1, 4, 0xC0))
A2
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 2, 4, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 2, 4, 0xC0))
A2A9
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 3, 4, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 3, 4, 0xC0))
A2A9A2
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 4, 4, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 4, 4, 0xC0))
A2A9A2A9
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 5, 4, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char), 5, 4, 0xC0))
A2A9A2A9A2
select hex(weight_string(cast(0xA2A9A2A9A2A9 as char),25, 4, 0xC0));
hex(weight_string(cast(0xA2A9A2A9A2A9 as char),25, 4, 0xC0))
A2A9A2A9A2A920202020202020202020202020202020202020
SELECT collation(CAST(0x81309D30 AS CHAR));
collation(CAST(0x81309D30 AS CHAR))
gb18030_bin
SELECT HEX(WEIGHT_STRING(CAST(0x6141 AS CHAR)));
HEX(WEIGHT_STRING(CAST(0x6141 AS CHAR)))
6141
SELECT HEX(WEIGHT_STRING(CAST(0x81309D30 AS CHAR)));
HEX(WEIGHT_STRING(CAST(0x81309D30 AS CHAR)))
81309D30
SELECT HEX(WEIGHT_STRING(CAST(0x81309D30 AS CHAR) AS CHAR(1)));
HEX(WEIGHT_STRING(CAST(0x81309D30 AS CHAR) AS CHAR(1)))
81309D30
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D30 AS CHAR) AS CHAR(1)));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D30 AS CHAR) AS CHAR(1)))
81309D30
SELECT HEX(WEIGHT_STRING(CAST(0x81309D30 AS CHAR) AS CHAR(3)));
HEX(WEIGHT_STRING(CAST(0x81309D30 AS CHAR) AS CHAR(3)))
81309D302020
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D30 AS CHAR) AS CHAR(3)));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D30 AS CHAR) AS CHAR(3)))
81309D3081309D3020
SELECT HEX(WEIGHT_STRING(CAST(0x4081309D30 AS CHAR) AS CHAR(3)));
HEX(WEIGHT_STRING(CAST(0x4081309D30 AS CHAR) AS CHAR(3)))
4081309D3020
SELECT HEX(WEIGHT_STRING(CAST(0x4081309D3081309D30 AS CHAR) AS CHAR(3)));
HEX(WEIGHT_STRING(CAST(0x4081309D3081309D30 AS CHAR) AS CHAR(3)))
4081309D3081309D30
SELECT HEX(WEIGHT_STRING(CAST(0x4081309D3081309D3081309D30 AS CHAR) AS CHAR(3)));
HEX(WEIGHT_STRING(CAST(0x4081309D3081309D3081309D30 AS CHAR) AS CHAR(3)))
4081309D3081309D30
SELECT HEX(WEIGHT_STRING(CAST(0x404081309D3081309D3081309D30 AS CHAR) AS CHAR(3)));
HEX(WEIGHT_STRING(CAST(0x404081309D3081309D3081309D30 AS CHAR) AS CHAR(3)))
404081309D30
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 1, 2, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 1, 2, 0xC0))
81
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 2, 2, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 2, 2, 0xC0))
8130
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 3, 2, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 3, 2, 0xC0))
81309D
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 4, 2, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 4, 2, 0xC0))
81309D30
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 5, 2, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 5, 2, 0xC0))
81309D3081
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 25, 2, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 25, 2, 0xC0))
81309D3081309D302020202020202020202020202020202020
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 1, 3, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 1, 3, 0xC0))
81
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 2, 3, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 2, 3, 0xC0))
8130
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 3, 3, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 3, 3, 0xC0))
81309D
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 4, 3, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 4, 3, 0xC0))
81309D30
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 5, 3, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 5, 3, 0xC0))
81309D3081
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 25, 3, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 25, 3, 0xC0))
81309D3081309D3081309D3020202020202020202020202020
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 1, 4, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 1, 4, 0xC0))
81
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 2, 4, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 2, 4, 0xC0))
8130
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 3, 4, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 3, 4, 0xC0))
81309D
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 4, 4, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 4, 4, 0xC0))
81309D30
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 5, 4, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 5, 4, 0xC0))
81309D3081
SELECT HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 25, 4, 0xC0));
HEX(WEIGHT_STRING(CAST(0x81309D3081309D3081309D30 AS CHAR), 25, 4, 0xC0))
81309D3081309D3081309D3020202020202020202020202020
#
# Bugs#12635232: VALGRIND WARNINGS: IS_IPV6, IS_IPV4, INET6_ATON,
# INETTO_NTOA + MULTIBYTE CHARSET.
#
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
SELECT is_ipv4(inet_ntoa('1'));
is_ipv4(inet_ntoa('1'))
1
SELECT is_ipv6(inet_ntoa('1'));
is_ipv6(inet_ntoa('1'))
0
SELECT HEX(inet6_aton(inet_ntoa('1')));
HEX(inet6_aton(inet_ntoa('1')))
00000001
SELECT inet6_ntoa(inet_ntoa('1'));
inet6_ntoa(inet_ntoa('1'))
NULL
#
# Bug#14040277 UNINITIALIZED VALUE REFERENCED IN STR_TO_IPV6
#
SELECT inet6_aton(soundex('a'));
inet6_aton(soundex('a'))
NULL
#
# Bug#19047425 UNINITIALISED VALUE IN STR_TO_IPV6
#
do is_ipv4_mapped(inet6_aton(convert(_ascii "a:" using utf8mb4)));
#
# Test for gb18030_unicode_520_ci collation.
#
SET NAMES utf8mb4;
SET collation_connection=gb18030_unicode_520_ci;
CREATE TABLE t1 AS SELECT repeat('a', 10) as c LIMIT 0;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `c` varchar(10) CHARACTER SET gb18030 COLLATE gb18030_unicode_520_ci NOT NULL DEFAULT ''
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci
INSERT INTO t1 VALUES (_utf32 0x0180),(_utf32 0x023A);
INSERT INTO t1 VALUES (_utf32 0x023B),(_utf32 0x023C);
INSERT INTO t1 VALUES (_utf32 0x023D),(_utf32 0x023E);
INSERT INTO t1 VALUES (_utf32 0x0241),(_utf32 0x0242);
INSERT INTO t1 VALUES (_utf32 0x0243),(_utf32 0x0244);
INSERT INTO t1 VALUES (_utf32 0x0245),(_utf32 0x0246);
INSERT INTO t1 VALUES (_utf32 0x0247),(_utf32 0x0248);
INSERT INTO t1 VALUES (_utf32 0x0249),(_utf32 0x024A);
INSERT INTO t1 VALUES (_utf32 0x024B),(_utf32 0x024C);
INSERT INTO t1 VALUES (_utf32 0x024D),(_utf32 0x024E);
INSERT INTO t1 VALUES (_utf32 0x024F),(_utf32 0x026B);
INSERT INTO t1 VALUES (_utf32 0x027D),(_utf32 0x0289);
INSERT INTO t1 VALUES (_utf32 0x028C);
INSERT INTO t1 VALUES (_utf32 0x037B), (_utf32 0x037C);
INSERT INTO t1 VALUES (_utf32 0x037D), (_utf32 0x03FD);
INSERT INTO t1 VALUES (_utf32 0x03FE), (_utf32 0x03FF);
INSERT INTO t1 VALUES (_utf32 0x04C0), (_utf32 0x04CF);
INSERT INTO t1 VALUES (_utf32 0x04F6), (_utf32 0x04F7);
INSERT INTO t1 VALUES (_utf32 0x04FA), (_utf32 0x04FB);
INSERT INTO t1 VALUES (_utf32 0x04FC), (_utf32 0x04FD);
INSERT INTO t1 VALUES (_utf32 0x04FE), (_utf32 0x04FF);
INSERT INTO t1 VALUES (_utf32 0x0510), (_utf32 0x0511);
INSERT INTO t1 VALUES (_utf32 0x0512), (_utf32 0x0513);
INSERT INTO t1 VALUES (_utf32 0x10A0), (_utf32 0x10A1);
INSERT INTO t1 VALUES (_utf32 0x10A2), (_utf32 0x10A3);
INSERT INTO t1 VALUES (_utf32 0x10A4), (_utf32 0x10A5);
INSERT INTO t1 VALUES (_utf32 0x10A6), (_utf32 0x10A7);
INSERT INTO t1 VALUES (_utf32 0x2D00), (_utf32 0x2D01);
INSERT INTO t1 VALUES (_utf32 0x2D02), (_utf32 0x2D03);
INSERT INTO t1 VALUES (_utf32 0x2D04), (_utf32 0x2D05);
INSERT INTO t1 VALUES (_utf32 0x2D06), (_utf32 0x2D07);
INSERT INTO t1 VALUES (_utf32 0x1D7D);
INSERT INTO t1 VALUES (_utf32 0x2132),(_utf32 0x214E);
INSERT INTO t1 VALUES (_utf32 0x2183),(_utf32 0x2184);
INSERT INTO t1 VALUES (_utf32 0x2C80), (_utf32 0x2C81);
INSERT INTO t1 VALUES (_utf32 0x2C82), (_utf32 0x2C83);
INSERT INTO t1 VALUES (_utf32 0x2C84), (_utf32 0x2C85);
INSERT INTO t1 VALUES (_utf32 0x2C86), (_utf32 0x2C87);
INSERT INTO t1 VALUES (_utf32 0x2C88), (_utf32 0x2C89);
INSERT INTO t1 VALUES (_utf32 0x2C8A), (_utf32 0x2C8B);
INSERT INTO t1 VALUES (_utf32 0x2C8C), (_utf32 0x2C8D);
INSERT INTO t1 VALUES (_utf32 0x2C8E), (_utf32 0x2C8F);
INSERT INTO t1 VALUES (_utf32 0x2C60), (_utf32 0x2C61);
INSERT INTO t1 VALUES (_utf32 0x2C62), (_utf32 0x2C63);
INSERT INTO t1 VALUES (_utf32 0x2C64), (_utf32 0x2C65);
INSERT INTO t1 VALUES (_utf32 0x2C66), (_utf32 0x2C67);
INSERT INTO t1 VALUES (_utf32 0x2C68), (_utf32 0x2C69);
INSERT INTO t1 VALUES (_utf32 0x2C6A), (_utf32 0x2C6B);
INSERT INTO t1 VALUES (_utf32 0x2C6C), (_utf32 0x2C75);
INSERT INTO t1 VALUES (_utf32 0x2C76);
INSERT INTO t1 VALUES (_utf32 0x2C00), (_utf32 0x2C01);
INSERT INTO t1 VALUES (_utf32 0x2C02), (_utf32 0x2C03);
INSERT INTO t1 VALUES (_utf32 0x2C04), (_utf32 0x2C05);
INSERT INTO t1 VALUES (_utf32 0x2C06), (_utf32 0x2C07);
INSERT INTO t1 VALUES (_utf32 0x2C30), (_utf32 0x2C31);
INSERT INTO t1 VALUES (_utf32 0x2C32), (_utf32 0x2C33);
INSERT INTO t1 VALUES (_utf32 0x2C34), (_utf32 0x2C35);
INSERT INTO t1 VALUES (_utf32 0x2C36), (_utf32 0x2C37);
INSERT INTO t1 VALUES (_utf32 0x10400), (_utf32 0x10401);
INSERT INTO t1 VALUES (_utf32 0x10402), (_utf32 0x10403);
INSERT INTO t1 VALUES (_utf32 0x10404), (_utf32 0x10405);
INSERT INTO t1 VALUES (_utf32 0x10406), (_utf32 0x10407);
INSERT INTO t1 VALUES (_utf32 0x10428), (_utf32 0x10429);
INSERT INTO t1 VALUES (_utf32 0x1042A), (_utf32 0x1042B);
INSERT INTO t1 VALUES (_utf32 0x1042C), (_utf32 0x1042D);
INSERT INTO t1 VALUES (_utf32 0x1042E), (_utf32 0x1042F);
INSERT INTO t1 VALUES (_utf32 0x0370);
INSERT INTO t1 VALUES (_utf32 0x0371);
INSERT INTO t1 VALUES (_utf32 0x0372);
INSERT INTO t1 VALUES (_utf32 0x0373);
INSERT INTO t1 VALUES (_utf32 0x0514);
INSERT INTO t1 VALUES (_utf32 0x0515);
INSERT INTO t1 VALUES (_utf32 0x0516);
INSERT INTO t1 VALUES (_utf32 0x0517);
INSERT INTO t1 VALUES (_utf32 0xA640);
INSERT INTO t1 VALUES (_utf32 0xA641);
INSERT INTO t1 VALUES (_utf32 0xA642);
INSERT INTO t1 VALUES (_utf32 0xA643);
INSERT INTO t1 VALUES (_utf32 0xA722);
INSERT INTO t1 VALUES (_utf32 0xA723);
INSERT INTO t1 VALUES (_utf32 0xA724);
INSERT INTO t1 VALUES (_utf32 0xA725);
INSERT INTO t1 VALUES (_utf32 0xA726);
INSERT INTO t1 VALUES (_utf32 0xA727);
INSERT INTO t1 VALUES (_utf32 0xA728);
INSERT INTO t1 VALUES (_utf32 0xA729);
INSERT INTO t1 VALUES (_utf32 0xA72A);
INSERT INTO t1 VALUES (_utf32 0xA72B);
INSERT INTO t1 VALUES (_utf32 0x2CEB);
INSERT INTO t1 VALUES (_utf32 0x2CEC);
INSERT INTO t1 VALUES (_utf32 0x2CED);
INSERT INTO t1 VALUES (_utf32 0x2CEE);
SELECT hex(c), hex(lower(c)), hex(upper(c)), hex(weight_string(c)), c
FROM t1 ORDER BY c, BINARY c;
hex(c)	hex(lower(c))	hex(upper(c))	hex(weight_string(c))	c
8130A935	8138C739	8130A935	1214	Ⱥ
8138C739	8138C739	8130A935	1214	ⱥ
81309738	81309738	8130AA34	122D	ƀ
8130AA34	81309738	8130AA34	122D	Ƀ
8130A936	8130A937	8130A936	1242	Ȼ
8130A937	8130A937	8130A936	1242	ȼ
8136C539	8136C630	8136C539	124E	Ↄ
8136C630	8136C630	8136C539	124E	ↄ
8130AA37	8130AA38	8130AA37	1270	Ɇ
8130AA38	8130AA38	8130AA37	1270	ɇ
8136C030	8136C238	8136C030	12AE	Ⅎ
8136C238	8136C238	8136C030	12AE	ⅎ
8138C831	8138C832	8138C831	12E3	Ⱨ
8138C832	8138C832	8138C831	12E3	ⱨ
8138C935	8138C936	8138C935	12E4	Ⱶ
8138C936	8138C936	8138C935	12E4	ⱶ
8236D133	8236D134	8236D133	12E5	Ꜧ
8236D134	8236D134	8236D133	12E5	ꜧ
8130AA39	8130AB30	8130AA39	130E	Ɉ
8130AB30	8130AB30	8130AA39	130E	ɉ
8138C833	8138C834	8138C833	1328	Ⱪ
8138C834	8138C834	8138C833	1328	ⱪ
8130A938	81309A34	8130A938	133B	Ƚ
8138C734	8138C735	8138C734	133F	Ⱡ
8138C735	8138C735	8138C734	133F	ⱡ
8130AE32	8130AE32	8138C736	1340	ɫ
8138C736	8130AE32	8138C736	1340	Ɫ
8135E133	8135E133	8138C737	13B8	ᵽ
8138C737	8135E133	8138C737	13B8	Ᵽ
8130AB31	8130AB32	8130AB31	13D2	Ɋ
8130AB32	8130AB32	8130AB31	13D2	ɋ
8130AB33	8130AB34	8130AB33	13E4	Ɍ
8130AB34	8130AB34	8130AB33	13E4	ɍ
8130B030	8130B030	8138C738	13FC	ɽ
8138C738	8130B030	8138C738	13FC	Ɽ
8236D135	8236D136	8236D135	143314AD	Ꜩ
8236D136	8236D136	8236D135	143314AD	ꜩ
8130A939	8138C830	8130A939	143C	Ⱦ
8138C830	8138C830	8130A939	143C	ⱦ
8130AA35	8130B132	8130AA35	145B	Ʉ
8130B132	8130B132	8130AA35	145B	ʉ
8130AA36	8130B135	8130AA36	1489	Ʌ
8130B135	8130B135	8130AA36	1489	ʌ
8130AB35	8130AB36	8130AB35	14A4	Ɏ
8130AB36	8130AB36	8130AB35	14A4	ɏ
8138C835	8138C836	8138C835	14C8	Ⱬ
8138C836	8138C836	8138C835	14C8	ⱬ
8236D137	8236D138	8236D137	14F3	Ꜫ
8236D138	8236D138	8236D137	14F3	ꜫ
8130AA32	8130AA33	8130AA32	1506	Ɂ
8130AA33	8130AA33	8130AA32	1506	ɂ
8236D039	8236D130	8236D039	150E	Ꜣ
8236D130	8236D130	8236D039	150E	ꜣ
8236D131	8236D132	8236D131	1518	Ꜥ
8236D132	8236D132	8236D131	1518	ꜥ
8130C738	8130C739	8130C738	154F	Ͱ
8130C739	8130C739	8130C738	154F	ͱ
8130C930	8130C930	8130D132	1564	ͼ
8130D132	8130C930	8130D132	1564	Ͼ
8130C839	8130C839	8130D131	1565	ͻ
8130D131	8130C839	8130D131	1565	Ͻ
8130C931	8130C931	8130D133	1566	ͽ
8130D133	8130C931	8130D133	1566	Ͽ
8130C830	8130C831	8130C830	156F	Ͳ
8130C831	8130C831	8130C830	156F	ͳ
8138CA36	8138CA37	8138CA36	1571	Ⲁ
8138CA37	8138CA37	8138CA36	1571	ⲁ
8138CA38	8138CA39	8138CA38	1572	Ⲃ
8138CA39	8138CA39	8138CA38	1572	ⲃ
8138CB30	8138CB31	8138CB30	1573	Ⲅ
8138CB31	8138CB31	8138CB30	1573	ⲅ
8138CB32	8138CB33	8138CB32	1574	Ⲇ
8138CB33	8138CB33	8138CB32	1574	ⲇ
8138CB34	8138CB35	8138CB34	1575	Ⲉ
8138CB35	8138CB35	8138CB34	1575	ⲉ
8138CB36	8138CB37	8138CB36	1577	Ⲋ
8138CB37	8138CB37	8138CB36	1577	ⲋ
8138CB38	8138CB39	8138CB38	1578	Ⲍ
8138CB39	8138CB39	8138CB38	1578	ⲍ
8138CC30	8138CC31	8138CC30	1579	Ⲏ
8138CC31	8138CC31	8138CC30	1579	ⲏ
8138D533	8138D534	8138D533	1591	Ⳬ
8138D534	8138D534	8138D533	1591	ⳬ
8138D535	8138D536	8138D535	15A0	Ⳮ
8138D536	8138D536	8138D535	15A0	ⳮ
8130E338	8130E339	8130E338	15D4	Ӻ
8130E339	8130E339	8130E338	15D4	ӻ
8130E334	8130E335	8130E334	15DC	Ӷ
8130E335	8130E335	8130E334	15DC	ӷ
8236BA33	8236BA34	8236BA33	1611	Ꙁ
8236BA34	8236BA34	8236BA33	1611	ꙁ
8130E630	8130E631	8130E630	1613	Ԑ
8130E631	8130E631	8130E630	1613	ԑ
8236BA35	8236BA36	8236BA35	1618	Ꙃ
8236BA36	8236BA36	8236BA35	1618	ꙃ
8130E632	8130E633	8130E632	1666	Ԓ
8130E633	8130E633	8130E632	1666	ԓ
8130E634	8130E635	8130E634	166E	Ԕ
8130E635	8130E635	8130E634	166E	ԕ
8130E636	8130E637	8130E636	16B7	Ԗ
8130E637	8130E637	8130E636	16B7	ԗ
8130E430	8130E431	8130E430	16F9	Ӽ
8130E431	8130E431	8130E430	16F9	ӽ
8130E432	8130E433	8130E432	16FD	Ӿ
8130E433	8130E433	8130E432	16FD	ӿ
8130DE30	8130DF35	8130DE30	17B1	Ӏ
8130DF35	8130DF35	8130DE30	17B1	ӏ
8138BD38	8138C236	8138BD38	17B5	Ⰰ
8138C236	8138C236	8138BD38	17B5	ⰰ
8138BD39	8138C237	8138BD39	17B6	Ⰱ
8138C237	8138C237	8138BD39	17B6	ⰱ
8138BE30	8138C238	8138BE30	17B7	Ⰲ
8138C238	8138C238	8138BE30	17B7	ⰲ
8138BE31	8138C239	8138BE31	17B8	Ⰳ
8138C239	8138C239	8138BE31	17B8	ⰳ
8138BE32	8138C330	8138BE32	17B9	Ⰴ
8138C330	8138C330	8138BE32	17B9	ⰴ
8138BE33	8138C331	8138BE33	17BA	Ⰵ
8138C331	8138C331	8138BE33	17BA	ⰵ
8138BE34	8138C332	8138BE34	17BB	Ⰶ
8138C332	8138C332	8138BE34	17BB	ⰶ
8138BE35	8138C333	8138BE35	17BC	Ⰷ
8138C333	8138C333	8138BE35	17BC	ⰷ
81339430	8138D734	81339430	17E5	Ⴀ
8138D734	8138D734	81339430	17E5	ⴀ
81339431	8138D735	81339431	17E7	Ⴁ
8138D735	8138D735	81339431	17E7	ⴁ
81339432	8138D736	81339432	17E9	Ⴂ
8138D736	8138D736	81339432	17E9	ⴂ
81339433	8138D737	81339433	17EB	Ⴃ
8138D737	8138D737	81339433	17EB	ⴃ
81339434	8138D738	81339434	17ED	Ⴄ
8138D738	8138D738	81339434	17ED	ⴄ
81339435	8138D739	81339435	17EF	Ⴅ
8138D739	8138D739	81339435	17EF	ⴅ
81339436	8138D830	81339436	17F1	Ⴆ
8138D830	8138D830	81339436	17F1	ⴆ
81339437	8138D831	81339437	17F5	Ⴇ
8138D831	8138D831	81339437	17F5	ⴇ
9030E734	8130D239	8130D134	30D2	𐐀
9030EB34	A7EA	A7BA	30D2	𐐨
9030E735	A7D7	A7A7	30D3	𐐁
9030EB35	A7EB	A7BB	30D3	𐐩
9030E736	8130D330	8130D135	30D4	𐐂
9030EB36	A7EC	A7BC	30D4	𐐪
9030E737	8130D331	8130D136	30D5	𐐃
9030EB37	A7ED	A7BD	30D5	𐐫
9030E738	8130D332	8130D137	30D6	𐐄
9030EB38	A7EE	A7BE	30D6	𐐬
9030E739	8130D333	8130D138	30D7	𐐅
9030EB39	A7EF	A7BF	30D7	𐐭
9030E830	8130D334	8130D139	30D8	𐐆
9030EC30	A7F0	A7C0	30D8	𐐮
9030E831	8130D335	8130D230	30D9	𐐇
9030EC31	A7F1	A7C1	30D9	𐐯
Warnings:
Warning	1287	'BINARY expr' is deprecated and will be removed in a future release. Please use CAST instead
INSERT INTO t1 VALUES ('a');
INSERT INTO t1 VALUES (concat(_utf32 0x61, _utf32 0xFFFF));
INSERT INTO t1 VALUES (concat(_utf32 0x61, _utf32 0x10FFFF));
INSERT INTO t1 VALUES (concat(_utf32 0x61, _utf32 0x10400));
SELECT hex(c), hex(weight_string(c)) FROM t1 WHERE c LIKE 'a%' ORDER BY c;
hex(c)	hex(weight_string(c))
61	120F
619030E734	120F30D2
618431A439	120FFBC1FFFF
61E3329A35	120FFBE1FFFF
SELECT hex(c), hex(weight_string(c)), c FROM t1 WHERE c LIKE _utf32 0x10400 ORDER BY c, BINARY c;
hex(c)	hex(weight_string(c))	c
9030E734	30D2	𐐀
9030EB34	30D2	𐐨
Warnings:
Warning	1287	'BINARY expr' is deprecated and will be removed in a future release. Please use CAST instead
SELECT hex(c), hex(weight_string(c)), c FROM t1 WHERE c LIKE _utf32 0x10428 ORDER BY c, BINARY c;
hex(c)	hex(weight_string(c))	c
9030E734	30D2	𐐀
9030EB34	30D2	𐐨
Warnings:
Warning	1287	'BINARY expr' is deprecated and will be removed in a future release. Please use CAST instead
ALTER TABLE t1 ADD KEY(c);
EXPLAIN SELECT hex(c) FROM t1 WHERE c LIKE 'a%' ORDER BY c;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	c	c	42	NULL	4	100.00	Using where; Using index
Warnings:
Note	1003	/* select#1 */ select hex(`test`.`t1`.`c`) AS `hex(c)` from `test`.`t1` where (`test`.`t1`.`c` like 'a%') order by `test`.`t1`.`c`
SELECT hex(c), hex(weight_string(c)) FROM t1 WHERE c LIKE 'a%' ORDER BY c;
hex(c)	hex(weight_string(c))
61	120F
619030E734	120F30D2
618431A439	120FFBC1FFFF
61E3329A35	120FFBE1FFFF
SELECT hex(c), hex(weight_string(c)), c FROM t1 WHERE c LIKE _utf32 0x10400 ORDER BY c, BINARY c;
hex(c)	hex(weight_string(c))	c
9030E734	30D2	𐐀
9030EB34	30D2	𐐨
Warnings:
Warning	1287	'BINARY expr' is deprecated and will be removed in a future release. Please use CAST instead
SELECT hex(c), hex(weight_string(c)), c FROM t1 WHERE c LIKE _utf32 0x10428 ORDER BY c, BINARY c;
hex(c)	hex(weight_string(c))	c
9030E734	30D2	𐐀
9030EB34	30D2	𐐨
Warnings:
Warning	1287	'BINARY expr' is deprecated and will be removed in a future release. Please use CAST instead
DROP TABLE t1;
SET NAMES gb18030 COLLATE gb18030_unicode_520_ci;
SELECT 1 gb18030_unicode_520_ci;
gb18030_unicode_520_ci
1
CREATE DATABASE gb18030 CHARSET=GB18030;
SET NAMES utf8mb4;
SET collation_connection='gb18030_chinese_ci';
CREATE TABLE t1(C VARCHAR(100) CHARACTER SET gb18030, KEY(c(20)));
INSERT INTO t1 VALUES(0xC4EEC5ABBDBFA1A4B3E0B1DABBB3B9C520A1A4CBD5B6ABC6C2);
INSERT INTO t1 VALUES(0xB4F3BDADB6ABC8A5A3ACC0CBCCD4BEA1A1A2C7A7B9C5B7E7C1F7C8CBCEEFA1A3);
INSERT INTO t1 VALUES(0xB9CAC0DDCEF7B1DFA3ACC8CBB5C0CAC7A1A2C8FDB9FAD6DCC0C9B3E0B1DAA1A3);
INSERT INTO t1 VALUES(0xC2D2CAAFB1C0D4C6A3ACBEAACCCEC1D1B0B6A3ACBEEDC6F0C7A7B6D1D1A9A1A3);
INSERT INTO t1 VALUES(0xBDADC9BDC8E7BBADA3ACD2BBCAB1B6E0C9D9BAC0BDDCA3A1);
INSERT INTO t1 VALUES(0xD2A3CFEBB9ABE8AAB5B1C4EAA3ACD0A1C7C7B3F5BCDEC1CBA3ACD0DBD7CBD3A2B7A2A1A3);
INSERT INTO t1 VALUES(0xD3F0C9C8C2DABDEDA3ACCCB8D0A6BCE4A1A2E9C9E9D6BBD2B7C9D1CCC3F0A1A3);
INSERT INTO t1 VALUES(0xB9CAB9FAC9F1D3CEA3ACB6E0C7E9D3A6D0A6CED2A1A2D4E7C9FABBAAB7A2A1A3);
INSERT INTO t1 VALUES(0xC8CBBCE4C8E7C3CEA3ACD2BBE9D7BBB9F5AABDADD4C2A1A3);
SELECT c, HEX(c), CONVERT(c USING utf8mb4) FROM t1;
c	HEX(c)	CONVERT(c USING utf8mb4)
念奴娇·赤壁怀古 ·苏东坡	C4EEC5ABBDBFA1A4B3E0B1DABBB3B9C520A1A4CBD5B6ABC6C2	念奴娇·赤壁怀古 ·苏东坡
大江东去，浪淘尽、千古风流人物。	B4F3BDADB6ABC8A5A3ACC0CBCCD4BEA1A1A2C7A7B9C5B7E7C1F7C8CBCEEFA1A3	大江东去，浪淘尽、千古风流人物。
故垒西边，人道是、三国周郎赤壁。	B9CAC0DDCEF7B1DFA3ACC8CBB5C0CAC7A1A2C8FDB9FAD6DCC0C9B3E0B1DAA1A3	故垒西边，人道是、三国周郎赤壁。
乱石崩云，惊涛裂岸，卷起千堆雪。	C2D2CAAFB1C0D4C6A3ACBEAACCCEC1D1B0B6A3ACBEEDC6F0C7A7B6D1D1A9A1A3	乱石崩云，惊涛裂岸，卷起千堆雪。
江山如画，一时多少豪杰！	BDADC9BDC8E7BBADA3ACD2BBCAB1B6E0C9D9BAC0BDDCA3A1	江山如画，一时多少豪杰！
遥想公瑾当年，小乔初嫁了，雄姿英发。	D2A3CFEBB9ABE8AAB5B1C4EAA3ACD0A1C7C7B3F5BCDEC1CBA3ACD0DBD7CBD3A2B7A2A1A3	遥想公瑾当年，小乔初嫁了，雄姿英发。
羽扇纶巾，谈笑间、樯橹灰飞烟灭。	D3F0C9C8C2DABDEDA3ACCCB8D0A6BCE4A1A2E9C9E9D6BBD2B7C9D1CCC3F0A1A3	羽扇纶巾，谈笑间、樯橹灰飞烟灭。
故国神游，多情应笑我、早生华发。	B9CAB9FAC9F1D3CEA3ACB6E0C7E9D3A6D0A6CED2A1A2D4E7C9FABBAAB7A2A1A3	故国神游，多情应笑我、早生华发。
人间如梦，一樽还酹江月。	C8CBBCE4C8E7C3CEA3ACD2BBE9D7BBB9F5AABDADD4C2A1A3	人间如梦，一樽还酹江月。
SELECT HEX(c), CONVERT(c USING utf8mb4) FROM t1 ORDER BY c;
HEX(c)	CONVERT(c USING utf8mb4)
B4F3BDADB6ABC8A5A3ACC0CBCCD4BEA1A1A2C7A7B9C5B7E7C1F7C8CBCEEFA1A3	大江东去，浪淘尽、千古风流人物。
B9CAB9FAC9F1D3CEA3ACB6E0C7E9D3A6D0A6CED2A1A2D4E7C9FABBAAB7A2A1A3	故国神游，多情应笑我、早生华发。
B9CAC0DDCEF7B1DFA3ACC8CBB5C0CAC7A1A2C8FDB9FAD6DCC0C9B3E0B1DAA1A3	故垒西边，人道是、三国周郎赤壁。
BDADC9BDC8E7BBADA3ACD2BBCAB1B6E0C9D9BAC0BDDCA3A1	江山如画，一时多少豪杰！
C2D2CAAFB1C0D4C6A3ACBEAACCCEC1D1B0B6A3ACBEEDC6F0C7A7B6D1D1A9A1A3	乱石崩云，惊涛裂岸，卷起千堆雪。
C4EEC5ABBDBFA1A4B3E0B1DABBB3B9C520A1A4CBD5B6ABC6C2	念奴娇·赤壁怀古 ·苏东坡
C8CBBCE4C8E7C3CEA3ACD2BBE9D7BBB9F5AABDADD4C2A1A3	人间如梦，一樽还酹江月。
D2A3CFEBB9ABE8AAB5B1C4EAA3ACD0A1C7C7B3F5BCDEC1CBA3ACD0DBD7CBD3A2B7A2A1A3	遥想公瑾当年，小乔初嫁了，雄姿英发。
D3F0C9C8C2DABDEDA3ACCCB8D0A6BCE4A1A2E9C9E9D6BBD2B7C9D1CCC3F0A1A3	羽扇纶巾，谈笑间、樯橹灰飞烟灭。
SELECT HEX(c), CONVERT(c USING utf8mb4) FROM t1 WHERE c LIKE CONCAT('%', _gb18030 0xD2BB, '%');
HEX(c)	CONVERT(c USING utf8mb4)
BDADC9BDC8E7BBADA3ACD2BBCAB1B6E0C9D9BAC0BDDCA3A1	江山如画，一时多少豪杰！
C8CBBCE4C8E7C3CEA3ACD2BBE9D7BBB9F5AABDADD4C2A1A3	人间如梦，一樽还酹江月。
SELECT HEX(c), CONVERT(c USING utf8mb4) FROM t1 WHERE c LIKE CONCAT('%', _gb18030 0xC8CB, '%');
HEX(c)	CONVERT(c USING utf8mb4)
B4F3BDADB6ABC8A5A3ACC0CBCCD4BEA1A1A2C7A7B9C5B7E7C1F7C8CBCEEFA1A3	大江东去，浪淘尽、千古风流人物。
B9CAC0DDCEF7B1DFA3ACC8CBB5C0CAC7A1A2C8FDB9FAD6DCC0C9B3E0B1DAA1A3	故垒西边，人道是、三国周郎赤壁。
C8CBBCE4C8E7C3CEA3ACD2BBE9D7BBB9F5AABDADD4C2A1A3	人间如梦，一樽还酹江月。
SELECT HEX(c), CONVERT(c USING utf8mb4) FROM t1 WHERE c > 0xD2A3;
HEX(c)	CONVERT(c USING utf8mb4)
D2A3CFEBB9ABE8AAB5B1C4EAA3ACD0A1C7C7B3F5BCDEC1CBA3ACD0DBD7CBD3A2B7A2A1A3	遥想公瑾当年，小乔初嫁了，雄姿英发。
D3F0C9C8C2DABDEDA3ACCCB8D0A6BCE4A1A2E9C9E9D6BBD2B7C9D1CCC3F0A1A3	羽扇纶巾，谈笑间、樯橹灰飞烟灭。
TRUNCATE TABLE t1;
INSERT INTO t1 VALUES(0x5373547483329330);
INSERT INTO t1 VALUES(0x8239AB318239AB358239AF3583308132833087348335EB39);
INSERT INTO t1 VALUES(0x97339631973396339733A6359831C0359831C536);
INSERT INTO t1 VALUES(0x9835CF329835CE359835F336);
INSERT INTO t1 VALUES(0x833988318339883283398539);
INSERT INTO t1 VALUES(0x823398318233973582339A3882348A32);
INSERT INTO t1 VALUES(0x8134D5318134D6328134D832);
INSERT INTO t1 VALUES(0x4A7320204B82339A35646566);
INSERT INTO t1 VALUES(0x8130883281308833);
INSERT INTO t1 VALUES(0xE05FE06A777682339230);
INSERT INTO t1 VALUES(0x814081418139FE30);
INSERT INTO t1 VALUES(0x81308130FEFE);
INSERT INTO t1 VALUES(0xE3329A35E3329A34);
INSERT INTO t1 VALUES(0xFE39FE39FE38FE38);
INSERT INTO t1 VALUES(0xFE39FE38A976);
SELECT c, HEX(c), CONVERT(c USING utf8mb4) FROM t1;
c	HEX(c)	CONVERT(c USING utf8mb4)
SsTt숿	5373547483329330	SsTt숿
둬둰뒘략럳푼	8239AB318239AB358239AF3583308132833087348335EB39	둬둰뒘략럳푼
𦠟𦠡𦣃𩄧𩅚	97339631973396339733A6359831C0359831C536	𦠟𦠡𦣃𩄧𩅚
𪕪𪕣𪛖	9835CF329835CE359835F336	𪕪𪕣𪛖
	833988318339883283398539	
䑠䑚䑻䣈	823398318233973582339A3882348A32	䑠䑚䑻䣈
᠗ᠢᠶ	8134D5318134D6328134D832	᠗ᠢᠶ
Js  K䑸def	4A7320204B82339A35646566	Js  K䑸def
ÎÏ	8130883281308833	ÎÏ
郷鄇wv䐣	E05FE06A777682339230	郷鄇wv䐣
丂丄㒙	814081418139FE30	丂丄㒙
	81308130FEFE	
􏿿􏿾	E3329A35E3329A34	􏿿􏿾
??	FE39FE39FE38FE38	??
?﹙	FE39FE38A976	?﹙
SELECT c, HEX(c), CONVERT(c USING utf8mb4) FROM t1 WHERE c LIKE CONCAT('%', _gb18030 0x9835CE35, '%');
c	HEX(c)	CONVERT(c USING utf8mb4)
𪕪𪕣𪛖	9835CF329835CE359835F336	𪕪𪕣𪛖
SELECT c, HEX(c), CONVERT(c USING utf8mb4) FROM t1 WHERE c = 0x8130883281308833;
c	HEX(c)	CONVERT(c USING utf8mb4)
ÎÏ	8130883281308833	ÎÏ
SELECT c, HEX(c), CONVERT(c USING utf8mb4) FROM t1 WHERE c > 0xE040 AND c < 0x8239AB31;
c	HEX(c)	CONVERT(c USING utf8mb4)
SELECT c, HEX(c), CONVERT(c USING utf8mb4) FROM t1 ORDER BY c;
c	HEX(c)	CONVERT(c USING utf8mb4)
Js  K䑸def	4A7320204B82339A35646566	Js  K䑸def
SsTt숿	5373547483329330	SsTt숿
	81308130FEFE	
ÎÏ	8130883281308833	ÎÏ
᠗ᠢᠶ	8134D5318134D6328134D832	᠗ᠢᠶ
둬둰뒘략럳푼	8239AB318239AB358239AF3583308132833087348335EB39	둬둰뒘략럳푼
	833988318339883283398539	
𪕪𪕣𪛖	9835CF329835CE359835F336	𪕪𪕣𪛖
􏿿􏿾	E3329A35E3329A34	􏿿􏿾
?﹙	FE39FE38A976	?﹙
丂丄㒙	814081418139FE30	丂丄㒙
䑠䑚䑻䣈	823398318233973582339A3882348A32	䑠䑚䑻䣈
郷鄇wv䐣	E05FE06A777682339230	郷鄇wv䐣
𦠟𦠡𦣃𩄧𩅚	97339631973396339733A6359831C0359831C536	𦠟𦠡𦣃𩄧𩅚
??	FE39FE39FE38FE38	??
TRUNCATE TABLE t1;
INSERT INTO t1 VALUES(0x8139818F);
Warnings:
Warning	1366	Incorrect string value: '\x819\x81\x8F' for column 'C' at row 1
INSERT INTO t1 VALUES(0x8431A530);
INSERT INTO t1 VALUES(0x9030813089398130);
INSERT INTO t1 VALUES(0xE3329A36);
INSERT INTO t1 VALUES(0xA6A78586E3329A38);
INSERT INTO t1 VALUES(0xA69C8041);
Warnings:
Warning	1366	Incorrect string value: '\x80A' for column 'C' at row 1
INSERT INTO t1 VALUES(0xA9C6FEFF);
Warnings:
Warning	1366	Incorrect string value: '\xFE\xFF' for column 'C' at row 1
INSERT INTO t1 VALUES(0xFFFF);
Warnings:
Warning	1366	Incorrect string value: '\xFF\xFF' for column 'C' at row 1
INSERT INTO t1 VALUES(0x81408139);
Warnings:
Warning	1366	Incorrect string value: '\x819' for column 'C' at row 1
INSERT INTO t1 VALUES(0x962B);
Warnings:
Warning	1366	Incorrect string value: '\x96+' for column 'C' at row 1
INSERT INTO t1 VALUES(0x9F37823881308156);
Warnings:
Warning	1366	Incorrect string value: '\x810\x81V' for column 'C' at row 1
INSERT INTO t1 VALUES(0xFE35FF30);
Warnings:
Warning	1366	Incorrect string value: '\xFE5\xFF0' for column 'C' at row 1
INSERT INTO t1 VALUES(0x814281309CA4);
Warnings:
Warning	1366	Incorrect string value: '\x810\x9C\xA4' for column 'C' at row 1
INSERT INTO t1 VALUES(0xE3329A36);
INSERT INTO t1 VALUES(0xFE39FE39FE39FE38);
SELECT * FROM t1;
C

?
𐀀?
?
Η厗?

┢

丂

񀓎

丅
?
??
UPDATE t1 SET c=0x81308130;
SELECT COUNT(*) FROM t1 WHERE c <> 0x81308130;
COUNT(*)
0
TRUNCATE TABLE t1;
INSERT INTO t1 VALUES(_gb18030 0x9534A337), (_gb18030 0x8959), (_gb18030 0xB0F9), (_gb18030 0xB0F4), (_gb18030 0x95348B39), (_gb18030 0x9794), (_gb18030 0x8231AC35);
INSERT INTO t1 VALUES(_gb18030 0xB0F8), (_gb18030 0xAB67), (_gb18030 0x8232B632), (_gb18030 0x9630ED37), (_gb18030 0x9539F933), (_gb18030 0xB0F6), (_gb18030 0x8233B931);
INSERT INTO t1 VALUES(_gb18030 0xD143), (_gb18030 0xB2A4), (_gb18030 0xC08F), (_gb18030 0xBC9E), (_gb18030 0xB2A6), (_gb18030 0xB2A8), (_gb18030 0xB069);
INSERT INTO t1 VALUES(_gb18030 0x9833A533), (_gb18030 0xE2C4), (_gb18030 0xB2A7), (_gb18030 0x97368632), (_gb18030 0xB2A3), (_gb18030 0x8483), (_gb18030 0xB0FE);
INSERT INTO t1 VALUES(_gb18030 0x865C), (_gb18030 0xD093), (_gb18030 0xB36A), (_gb18030 0xB143);
SELECT c, HEX(c) FROM t1 ORDER BY c;
c	HEX(c)
𠬣	9534A337
𠨵	95348B39
㭋	8231AC35
玤	AB67
䂜	8232B632
蚌	B0F6
𢜗	9539F933
𢮏	9630ED37
䖫	8233B931
傍	B0F8
棒	B0F4
棓	9794
谤	B0F9
塝	8959
拨	B2A6
波	B2A8
癷	B069
𩧯	9833A533
玻	B2A3
剝	8483
剥	B0FE
哱	865C
盋	B143
砵	B36A
袚	D093
𧙄	97368632
钵	B2A7
饽	E2C4
紴	BC9E
缽	C08F
菠	B2A4
袰	D143
SELECT c, HEX(c) FROM t1 WHERE c >= 0x8483 and c < 0xE2C4 ORDER BY c;
c	HEX(c)
剝	8483
剥	B0FE
哱	865C
盋	B143
砵	B36A
袚	D093
𧙄	97368632
钵	B2A7
SELECT c, HEX(c) FROM t1 WHERE c LIKE 0xB0FE;
c	HEX(c)
剥	B0FE
TRUNCATE TABLE t1;
INSERT INTO t1 VALUES(_gb18030 0x81308130), (_gb18030 0x81308132);
INSERT INTO t1 VALUES('A'), ('a'), ('1'), ('2');
INSERT INTO t1 VALUES(_gb18030 0xCDF5), (_gb18030 0xC0EE), (_gb18030 0xD5C5), (_gb18030 0xC1F5), (_gb18030 0xB3C2), (_gb18030 0xD1EE), (_gb18030 0xBBC6);
INSERT INTO t1 VALUES(_gb18030 0xCEE2), (_gb18030 0xD5D4), (_gb18030 0xD6DC), (_gb18030 0xD0EC), (_gb18030 0xCBEF), (_gb18030 0xC2ED), (_gb18030 0xD6EC);
INSERT INTO t1 VALUES(_gb18030 0xBAFA), (_gb18030 0xC1D6), (_gb18030 0xB9F9), (_gb18030 0xBACE), (_gb18030 0xB8DF), (_gb18030 0xC2DE), (_gb18030 0xD6A3);
INSERT INTO t1 VALUES(_gb18030 0xE3329A35), (_gb18030 0xE3329A34);
SELECT c, HEX(c) FROM t1 ORDER BY c;
c	HEX(c)
1	31
2	32
A	41
a	61
	81308130
	81308132
􏿾	E3329A34
􏿿	E3329A35
陈	B3C2
高	B8DF
郭	B9F9
何	BACE
胡	BAFA
黄	BBC6
李	C0EE
林	C1D6
刘	C1F5
罗	C2DE
马	C2ED
孙	CBEF
王	CDF5
吴	CEE2
徐	D0EC
杨	D1EE
张	D5C5
赵	D5D4
郑	D6A3
周	D6DC
朱	D6EC
DROP TABLE t1;
CREATE TABLE t1 (c CHAR(1) CHARACTER SET gb18030, v VARCHAR(100) CHARACTER SET gb18030);
INSERT INTO t1 VALUES(0x8140, 0x81308132A6C9A6A985328338);
SELECT HEX(c), c, HEX(v), v FROM t1;
HEX(c)	c	HEX(v)	v
8140	丂	81308132A6C9A6A985328338	ιΙ?
ALTER TABLE t1 ADD COLUMN t TEXT CHARACTER SET gb18030;
INSERT INTO t1 VALUES(0xBC81, 0x82358132FE39FE3940414281308135, 0x84678578);
SELECT HEX(c), c, HEX(v), v, HEX(t), t FROM t1;
HEX(c)	c	HEX(v)	v	HEX(t)	t
8140	丂	81308132A6C9A6A985328338	ιΙ?	NULL	NULL
BC81	紒	82358132FE39FE3940414281308135	䵲?@AB	84678578	刧厁
DROP TABLE t1;
CREATE TABLE t1 (c VARCHAR(10) CHARACTER SET gb18030);
INSERT INTO t1 VALUES(0x81308A3181308A3181308A3181308A3181308732);
INSERT INTO t1 VALUES(0x81308A3181308A318130873281308A31);
INSERT INTO t1 VALUES(0x81308A318130873281309636);
INSERT INTO t1 VALUES(0x81308A318130873281309637);
INSERT INTO t1 VALUES(0x81308A31813087328130963781309636);
INSERT INTO t1 VALUES(0x8130963681308A31);
INSERT INTO t1 VALUES(0xA8A581308D35);
INSERT INTO t1 VALUES(0x81308D35A8A5);
INSERT INTO t1 VALUES(0x81308D35A8A5A8A5);
SELECT HEX(c) FROM t1;
HEX(c)
81308A3181308A3181308A3181308A3181308732
81308A3181308A318130873281308A31
81308A318130873281309636
81308A318130873281309637
81308A31813087328130963781309636
8130963681308A31
A8A581308D35
81308D35A8A5
81308D35A8A5A8A5
SELECT HEX(c) FROM t1 WHERE c LIKE CONCAT('%', _gb18030 0x81308A31);
HEX(c)
81308A3181308A3181308A3181308A3181308732
81308A3181308A318130873281308A31
8130963681308A31
SELECT HEX(c) FROM t1 WHERE c LIKE CONCAT('%', _gb18030 0x8130873281308A31, '%');
HEX(c)
81308A3181308A3181308A3181308A3181308732
81308A3181308A318130873281308A31
81308A318130873281309636
81308A318130873281309637
81308A31813087328130963781309636
SELECT HEX(c) FROM t1 WHERE c LIKE CONCAT('%', _gb18030 0x8130873281309636);
HEX(c)
81308A318130873281309636
81308A318130873281309637
SELECT HEX(c) FROM t1 WHERE c LIKE CONCAT('%', _gb18030 0x8130963781309636);
HEX(c)
81308A31813087328130963781309636
SELECT HEX(c) FROM t1 WHERE c LIKE CONCAT(_gb18030 0x81309636, '%');
HEX(c)
8130963681308A31
SELECT HEX(c) FROM t1 WHERE c LIKE CONCAT('%', _gb18030 0x8130963781309636);
HEX(c)
81308A31813087328130963781309636
SELECT HEX(c) FROM t1 WHERE c LIKE CONCAT('%', _gb18030 0x8130963781309636) ESCAPE _gb18030 0x81309637;
HEX(c)
81308A318130873281309636
81308A318130873281309637
81308A31813087328130963781309636
SELECT HEX(c) FROM t1 WHERE c LIKE CONCAT(_gb18030 0xA8A5, '%');
HEX(c)
A8A581308D35
81308D35A8A5
81308D35A8A5A8A5
SELECT HEX(c) FROM t1 WHERE c LIKE CONCAT(_gb18030 0xA8A5, '_');
HEX(c)
A8A581308D35
81308D35A8A5
SELECT HEX(c) FROM t1 WHERE c LIKE CONCAT(_gb18030 0xA8A5, '_', _gb18030 0x81308D35);
HEX(c)
81308D35A8A5A8A5
SELECT HEX(c) FROM t1 WHERE c LIKE CONCAT('%_', _gb18030 0xA8A5);
HEX(c)
A8A581308D35
81308D35A8A5
81308D35A8A5A8A5
DROP TABLE t1;
SET NAMES utf8mb4;
CREATE TABLE t1 (c VARCHAR(10) CHARACTER SET gb18030);
INSERT INTO t1 VALUES (_gb18030 0x8BF5819AEDC3), (_gb18030 0x99CC), (_gb18030 0x90459958), (_gb18030 0xAA95C0E59E509AED), (_gb18030 0xCCE7), (_gb18030 0x9068), (_gb18030 0x90459958);
SELECT ANY_VALUE(HEX(c)), COUNT(c) FROM t1 GROUP BY c COLLATE gb18030_chinese_ci;
ANY_VALUE(HEX(c))	COUNT(c)
8BF5819AEDC3	1
90459958	2
9068	1
99CC	1
AA95C0E59E509AED	1
CCE7	1
DROP TABLE t1;
CREATE TABLE t1 (a int) ENGINE=InnoDB;
LOAD DATA INFILE '../../std_data/bug21542698.dat' INTO TABLE t1 CHARACTER SET gb18030;
ERROR HY000: Invalid gb18030 character string: 'MZ'
DROP TABLE t1;
DROP DATABASE gb18030;
SET sql_mode = default;
#
# End of 5.7 tests
#
