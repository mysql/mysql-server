SET @old_general_log_state = @@global.general_log;
SET @old_log_output=       @@global.log_output;
SET @old_slow_query_log=   @@global.slow_query_log;
SET @old_general_log=      @@global.general_log;
SET @old_long_query_time=  @@session.long_query_time;
SET GLOBAL log_output="FILE,TABLE";
use mysql;
SET @saved_long_query_time = @@long_query_time;
SET @saved_log_output = @@log_output;
SET @saved_general_log = @@GLOBAL.general_log;
SET @saved_slow_query_log = @@GLOBAL.slow_query_log;
SELECT @saved_long_query_time, @saved_log_output, @saved_general_log, @saved_slow_query_log;
@saved_long_query_time	@saved_log_output	@saved_general_log	@saved_slow_query_log
10	FILE,TABLE	1	1
truncate table general_log;
select * from general_log;
event_time	user_host	thread_id	server_id	command_type	argument
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	select * from general_log
truncate table slow_log;
select * from slow_log;
start_time	user_host	query_time	lock_time	rows_sent	rows_examined	db	last_insert_id	insert_id	server_id	sql_text	thread_id
truncate table general_log;
select * from general_log where argument like '%general_log%';
event_time	user_host	thread_id	server_id	command_type	argument
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	select * from general_log where argument like '%general_log%'
create table join_test (verbose_comment varchar (80), command_type varchar(64));
insert into join_test values ("User performed a usual SQL query", "Query");
insert into join_test values ("New DB connection was registered", "Connect");
insert into join_test values ("Get the table info", "Field List");
select verbose_comment, user_host, argument
from  mysql.general_log join join_test
on (mysql.general_log.command_type = join_test.command_type);
verbose_comment	user_host	argument
User performed a usual SQL query	USER_HOST	create table join_test (verbose_comment varchar (80), command_type varchar(64))
User performed a usual SQL query	USER_HOST	insert into join_test values ("Get the table info", "Field List")
User performed a usual SQL query	USER_HOST	insert into join_test values ("New DB connection was registered", "Connect")
User performed a usual SQL query	USER_HOST	insert into join_test values ("User performed a usual SQL query", "Query")
User performed a usual SQL query	USER_HOST	select * from general_log where argument like '%general_log%'
User performed a usual SQL query	USER_HOST	select verbose_comment, user_host, argument
from  mysql.general_log join join_test
on (mysql.general_log.command_type = join_test.command_type)
drop table join_test;
flush logs;
lock tables mysql.general_log WRITE;
ERROR HY000: You can't use locks with log tables.
lock tables mysql.slow_log WRITE;
ERROR HY000: You can't use locks with log tables.
lock tables mysql.general_log READ;
ERROR HY000: You can't use locks with log tables.
lock tables mysql.slow_log READ;
ERROR HY000: You can't use locks with log tables.
lock tables mysql.slow_log READ LOCAL, mysql.general_log READ LOCAL;
ERROR HY000: You can't use locks with log tables.
show create table mysql.general_log;
Table	Create Table
general_log	CREATE TABLE `general_log` (
  `event_time` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  `user_host` mediumtext NOT NULL,
  `thread_id` bigint unsigned NOT NULL,
  `server_id` int unsigned NOT NULL,
  `command_type` varchar(64) NOT NULL,
  `argument` mediumblob NOT NULL
) ENGINE=CSV DEFAULT CHARSET=utf8mb3 COMMENT='General log'
show fields from mysql.general_log;
Field	Type	Null	Key	Default	Extra
event_time	timestamp(6)	NO		CURRENT_TIMESTAMP(6)	DEFAULT_GENERATED on update CURRENT_TIMESTAMP(6)
user_host	mediumtext	NO		NULL	
thread_id	bigint unsigned	NO		NULL	
server_id	int unsigned	NO		NULL	
command_type	varchar(64)	NO		NULL	
argument	mediumblob	NO		NULL	
show create table mysql.slow_log;
Table	Create Table
slow_log	CREATE TABLE `slow_log` (
  `start_time` timestamp(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  `user_host` mediumtext NOT NULL,
  `query_time` time(6) NOT NULL,
  `lock_time` time(6) NOT NULL,
  `rows_sent` int NOT NULL,
  `rows_examined` int NOT NULL,
  `db` varchar(512) NOT NULL,
  `last_insert_id` int NOT NULL,
  `insert_id` int NOT NULL,
  `server_id` int unsigned NOT NULL,
  `sql_text` mediumblob NOT NULL,
  `thread_id` bigint unsigned NOT NULL
) ENGINE=CSV DEFAULT CHARSET=utf8mb3 COMMENT='Slow log'
show fields from mysql.slow_log;
Field	Type	Null	Key	Default	Extra
start_time	timestamp(6)	NO		CURRENT_TIMESTAMP(6)	DEFAULT_GENERATED on update CURRENT_TIMESTAMP(6)
user_host	mediumtext	NO		NULL	
query_time	time(6)	NO		NULL	
lock_time	time(6)	NO		NULL	
rows_sent	int	NO		NULL	
rows_examined	int	NO		NULL	
db	varchar(512)	NO		NULL	
last_insert_id	int	NO		NULL	
insert_id	int	NO		NULL	
server_id	int unsigned	NO		NULL	
sql_text	mediumblob	NO		NULL	
thread_id	bigint unsigned	NO		NULL	
flush logs;
flush tables;
SET GLOBAL GENERAL_LOG=ON;
SET GLOBAL SLOW_QUERY_LOG=ON;
show open tables;
Database	Table	In_use	Name_locked
mysql	general_log	0	0
flush logs;
show open tables like 'general%';
Database	Table	In_use	Name_locked
mysql	general_log	0	0
flush tables;
show open tables;
Database	Table	In_use	Name_locked
mysql	general_log	0	0
SET GLOBAL GENERAL_LOG=OFF;
SET GLOBAL SLOW_QUERY_LOG=OFF;
flush tables;
show open tables;
Database	Table	In_use	Name_locked
SET GLOBAL GENERAL_LOG=ON;
SET GLOBAL SLOW_QUERY_LOG=ON;
truncate table mysql.general_log;
set names binary;
select _koi8r'тест' as test;
test
тест
select * from mysql.general_log;
event_time	user_host	thread_id	server_id	command_type	argument
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	set names binary
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	select _koi8r'тест' as test
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	select * from mysql.general_log
set names utf8;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
truncate table mysql.general_log;
set names utf8;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
create table bug16905 (s char(15) character set utf8 default 'п©я┐я│я┌п╬');
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
insert into bug16905 values ('п╫п╬п╡п╬п╣');
select * from mysql.general_log;
event_time	user_host	thread_id	server_id	command_type	argument
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	set names utf8
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	SHOW WARNINGS
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	create table bug16905 (s char(15) character set utf8 default 'п©я┐я│я┌п╬')
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	SHOW WARNINGS
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	insert into bug16905 values ('п╫п╬п╡п╬п╣')
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	select * from mysql.general_log
drop table bug16905;
truncate table mysql.slow_log;
set session long_query_time=1;
select sleep(2);
sleep(2)
0
select * from mysql.slow_log;
start_time	user_host	query_time	lock_time	rows_sent	rows_examined	db	last_insert_id	insert_id	server_id	sql_text	thread_id
TIMESTAMP	USER_HOST	QUERY_TIME	LOCK_TIME	1	1	mysql	0	0	1	QUERY	THREAD_ID
set @@session.long_query_time = @saved_long_query_time;
flush tables with read lock;
unlock tables;
use mysql;
lock tables general_log read local, help_category read local;
ERROR HY000: You can't use locks with log tables.
unlock tables;
SET SESSION long_query_time = 1000;
drop table if exists mysql.renamed_general_log;
drop table if exists mysql.renamed_slow_log;
drop table if exists mysql.general_log_new;
drop table if exists mysql.slow_log_new;
use mysql;
RENAME TABLE general_log TO renamed_general_log;
ERROR HY000: Cannot rename 'general_log'. When logging enabled, rename to/from log table must rename two tables: the log table to an archive table and another table back to 'general_log'
RENAME TABLE slow_log TO renamed_slow_log;
ERROR HY000: Cannot rename 'slow_log'. When logging enabled, rename to/from log table must rename two tables: the log table to an archive table and another table back to 'slow_log'
truncate table general_log;
select * from general_log;
event_time	user_host	thread_id	server_id	command_type	argument
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	select * from general_log
truncate table slow_log;
select * from slow_log;
start_time	user_host	query_time	lock_time	rows_sent	rows_examined	db	last_insert_id	insert_id	server_id	sql_text	thread_id
create table general_log_new like general_log;
rename table general_log TO renamed_general_log, general_log_new TO general_log;
create table slow_log_new like slow_log;
rename table slow_log TO renamed_slow_log, slow_log_new TO slow_log;
rename table general_log TO general_log_new, renamed_general_log TO general_log, slow_log to renamed_slow_log;
ERROR HY000: Cannot rename 'slow_log'. When logging enabled, rename to/from log table must rename two tables: the log table to an archive table and another table back to 'slow_log'
select * from general_log;
event_time	user_host	thread_id	server_id	command_type	argument
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	create table slow_log_new like slow_log
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	rename table slow_log TO renamed_slow_log, slow_log_new TO slow_log
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	rename table general_log TO general_log_new, renamed_general_log TO general_log, slow_log to renamed_slow_log
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	select * from general_log
select * from renamed_general_log;
event_time	user_host	thread_id	server_id	command_type	argument
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	select * from general_log
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	truncate table slow_log
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	select * from slow_log
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	create table general_log_new like general_log
TIMESTAMP	USER_HOST	THREAD_ID	1	Query	rename table general_log TO renamed_general_log, general_log_new TO general_log
select * from slow_log;
start_time	user_host	query_time	lock_time	rows_sent	rows_examined	db	last_insert_id	insert_id	server_id	sql_text	thread_id
select * from renamed_slow_log;
start_time	user_host	query_time	lock_time	rows_sent	rows_examined	db	last_insert_id	insert_id	server_id	sql_text	thread_id
set global general_log='OFF';
RENAME TABLE general_log TO general_log2;
set global slow_query_log='OFF';
RENAME TABLE slow_log TO slow_log2;
set global general_log='ON';
ERROR 42S02: Table 'mysql.general_log' doesn't exist
set global slow_query_log='ON';
ERROR 42S02: Table 'mysql.slow_log' doesn't exist
RENAME TABLE general_log2 TO general_log;
RENAME TABLE slow_log2 TO slow_log;
SET SESSION long_query_time = @saved_long_query_time;
set global general_log='ON';
set global slow_query_log='ON';
flush logs;
flush logs;
drop table renamed_general_log, renamed_slow_log;
use test;
use mysql;
repair table general_log;
Table	Op	Msg_type	Msg_text
mysql.general_log	repair	status	OK
repair table slow_log;
Table	Op	Msg_type	Msg_text
mysql.slow_log	repair	status	OK
create table general_log_new like general_log;
create table slow_log_new like slow_log;
show tables where Tables_in_mysql like '%log%' and Tables_in_mysql != 'ndb_binlog_index';
Tables_in_mysql
general_log
general_log_new
slave_relay_log_info
slow_log
slow_log_new
drop table slow_log_new, general_log_new;
use test;
drop procedure if exists proc25422_truncate_slow;
drop procedure if exists proc25422_truncate_general;
drop procedure if exists proc25422_alter_slow;
drop procedure if exists proc25422_alter_general;
use test//
create procedure proc25422_truncate_slow (loops int)
begin
declare v1 int default 0;
declare continue handler for sqlexception /* errors from truncate */
begin end;
while v1 < loops do
truncate mysql.slow_log;
set v1 = v1 + 1;
end while;
end//
create procedure proc25422_truncate_general (loops int)
begin
declare v1 int default 0;
declare continue handler for sqlexception /* errors from truncate */
begin end;
while v1 < loops do
truncate mysql.general_log;
set v1 = v1 + 1;
end while;
end//
create procedure proc25422_alter_slow (loops int)
begin
declare v1 int default 0;
declare ER_BAD_LOG_STATEMENT condition for 1575;
declare continue handler for ER_BAD_LOG_STATEMENT begin end;
while v1 < loops do
set @old_log_state = @@global.slow_query_log;
set global slow_query_log = 'OFF';
alter table mysql.slow_log engine = CSV;
set global slow_query_log = @old_log_state;
set v1 = v1 + 1;
end while;
end//
create procedure proc25422_alter_general (loops int)
begin
declare v1 int default 0;
declare ER_BAD_LOG_STATEMENT condition for 1575;
declare continue handler for ER_BAD_LOG_STATEMENT begin end;
while v1 < loops do
set @old_log_state = @@global.general_log;
set global general_log = 'OFF';
alter table mysql.general_log engine = CSV;
set global general_log = @old_log_state;
set v1 = v1 + 1;
end while;
end//
set @iterations=100;
"Serial test (proc25422_truncate_slow)"
call proc25422_truncate_slow(@iterations);
"Serial test (proc25422_truncate_general)"
call proc25422_truncate_general(@iterations);
"Serial test (proc25422_alter_slow)"
call proc25422_alter_slow(@iterations);
"Serial test (proc25422_alter_general)"
call proc25422_alter_general(@iterations);
"Parallel test"
call proc25422_truncate_slow(@iterations);
call proc25422_truncate_slow(@iterations);
call proc25422_truncate_general(@iterations);
call proc25422_truncate_general(@iterations);
call proc25422_alter_slow(@iterations);
call proc25422_alter_slow(@iterations);
call proc25422_alter_general(@iterations);
call proc25422_alter_general(@iterations);
drop procedure proc25422_truncate_slow;
drop procedure proc25422_truncate_general;
drop procedure proc25422_alter_slow;
drop procedure proc25422_alter_general;
FLUSH TABLE mysql.general_log;
show warnings;
Level	Code	Message
FLUSH TABLE mysql.slow_log;
show warnings;
Level	Code	Message
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
DROP TABLE IF EXISTS `db_17876.slow_log_data`;
DROP TABLE IF EXISTS `db_17876.general_log_data`;
DROP PROCEDURE IF EXISTS `db_17876.archiveSlowLog`;
DROP PROCEDURE IF EXISTS `db_17876.archiveGeneralLog`;
DROP DATABASE IF EXISTS `db_17876`;
CREATE DATABASE db_17876;
CREATE TABLE `db_17876.slow_log_data` (
`start_time` timestamp  default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
`user_host` mediumtext ,
`query_time` time ,
`lock_time` time ,
`rows_sent` int(11) ,
`rows_examined` int(11) ,
`db` varchar(512) default NULL,
`last_insert_id` int(11) default NULL,
`insert_id` int(11) default NULL,
`server_id` int(11) default NULL,
`sql_text` mediumblob,
`thread_id` bigint(21) unsigned not NULL
);
Warnings:
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
CREATE TABLE `db_17876.general_log_data` (
`event_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
`user_host` mediumtext,
`thread_id` bigint(21) unsigned not NULL,
`server_id` int(11) DEFAULT NULL,
`command_type` varchar(64) DEFAULT NULL,
`argument` mediumblob
);
Warnings:
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
CREATE procedure `db_17876.archiveSlowLog`()
BEGIN
DECLARE start_time, query_time, lock_time CHAR(20);
DECLARE user_host MEDIUMTEXT;
DECLARE rows_set, rows_examined, last_insert_id, insert_id, server_id INT;
DECLARE thread_id BIGINT UNSIGNED;
DECLARE dbname MEDIUMTEXT;
DECLARE sql_text BLOB;
DECLARE done INT DEFAULT 0;
DECLARE ER_SP_FETCH_NO_DATA CONDITION for 1329;
DECLARE cur1 CURSOR FOR SELECT * FROM mysql.slow_log;
OPEN cur1;
REPEAT
BEGIN
BEGIN
DECLARE CONTINUE HANDLER FOR ER_SP_FETCH_NO_DATA SET done = 1;
FETCH cur1 INTO
start_time, user_host, query_time, lock_time,
rows_set, rows_examined, dbname, last_insert_id,
insert_id, server_id, sql_text, thread_id;
END;
IF NOT done THEN
BEGIN
INSERT INTO
`db_17876.slow_log_data`
            VALUES(start_time, user_host, query_time, lock_time, rows_set, rows_examined,
dbname, last_insert_id,  insert_id, server_id, sql_text, thread_id);
END;
END IF;
END;
UNTIL done END REPEAT;
CLOSE cur1;
TRUNCATE mysql.slow_log;
END //
CREATE procedure `db_17876.archiveGeneralLog`()
BEGIN
DECLARE event_time CHAR(20);
DECLARE user_host MEDIUMTEXT;
DECLARE argument MEDIUMBLOB;
DECLARE thread_id BIGINT UNSIGNED;
DECLARE server_id INT;
DECLARE sql_text BLOB;
DECLARE done INT DEFAULT 0;
DECLARE command_type VARCHAR(64);
DECLARE ER_SP_FETCH_NO_DATA CONDITION for 1329;
DECLARE cur1 CURSOR FOR SELECT * FROM mysql.general_log;
OPEN cur1;
REPEAT
BEGIN
BEGIN
DECLARE CONTINUE HANDLER FOR ER_SP_FETCH_NO_DATA SET done = 1;
FETCH cur1 INTO
event_time, user_host, thread_id, server_id,
command_type, argument;
END;
IF NOT done THEN
BEGIN
INSERT INTO
`db_17876.general_log_data`
            VALUES(event_time, user_host, thread_id, server_id,
command_type, argument);
END;
END IF;
END;
UNTIL done END REPEAT;
CLOSE cur1;
TRUNCATE mysql.general_log;
END //
SET GLOBAL general_log = ON;
SET GLOBAL slow_query_log = ON;
select "put something into general_log";
put something into general_log
put something into general_log
select "... and something more ...";
... and something more ...
... and something more ...
call `db_17876.archiveSlowLog`();
call `db_17876.archiveGeneralLog`();
SET GLOBAL general_log = OFF;
SET GLOBAL slow_query_log = OFF;
call `db_17876.archiveSlowLog`();
call `db_17876.archiveGeneralLog`();
DROP TABLE `db_17876.slow_log_data`;
DROP TABLE `db_17876.general_log_data`;
DROP PROCEDURE IF EXISTS `db_17876.archiveSlowLog`;
DROP PROCEDURE IF EXISTS `db_17876.archiveGeneralLog`;
DROP DATABASE IF EXISTS `db_17876`;
SET GLOBAL general_log = @old_general_log;
SET GLOBAL slow_query_log = @old_slow_query_log;
SET sql_mode = default;
select CONNECTION_ID() into @thread_id;
truncate table mysql.general_log;
set global general_log = on;
set @lparam = "000 001 002 003 004 005 006 007 008 009"
              "010 011 012 013 014 015 016 017 018 019"
              "020 021 022 023 024 025 026 027 028 029"
              "030 031 032 033 034 035 036 037 038 039"
              "040 041 042 043 044 045 046 047 048 049"
              "050 051 052 053 054 055 056 057 058 059"
              "060 061 062 063 064 065 066 067 068 069"
              "070 071 072 073 074 075 076 077 078 079"
              "080 081 082 083 084 085 086 087 088 089"
              "090 091 092 093 094 095 096 097 098 099"
              "100 101 102 103 104 105 106 107 108 109"
              "110 111 112 113 114 115 116 117 118 119"
              "120 121 122 123 124 125 126 127 128 129"
              "130 131 132 133 134 135 136 137 138 139"
              "140 141 142 143 144 145 146 147 148 149"
              "150 151 152 153 154 155 156 157 158 159"
              "160 161 162 163 164 165 166 167 168 169"
              "170 171 172 173 174 175 176 177 178 179"
              "180 181 182 183 184 185 186 187 188 189"
              "190 191 192 193 194 195 196 197 198 199"
              "200 201 202 203 204 205 206 207 208 209"
              "210 211 212 213 214 215 216 217 218 219"
              "220 221 222 223 224 225 226 227 228 229"
              "230 231 232 233 234 235 236 237 238 239"
              "240 241 242 243 244 245 246 247 248 249"
              "250 251 252 253 254 255 256 257 258 259"
              "260 261 262 263 264 265 266 267 268 269"
              "270 271 272 273 274 275 276 277 278 279"
              "280 281 282 283 284 285 286 287 288 289"
              "290 291 292 293 294 295 296 297 298 299"
              "300 301 302 303 304 305 306 307 308 309"
              "310 311 312 313 314 315 316 317 318 319"
              "320 321 322 323 324 325 326 327 328 329"
              "330 331 332 333 334 335 336 337 338 339"
              "340 341 342 343 344 345 346 347 348 349"
              "350 351 352 353 354 355 356 357 358 359"
              "360 361 362 363 364 365 366 367 368 369"
              "370 371 372 373 374 375 376 377 378 379"
              "380 381 382 383 384 385 386 387 388 389"
              "390 391 392 393 394 395 396 397 398 399"
              "400 401 402 403 404 405 406 407 408 409"
              "410 411 412 413 414 415 416 417 418 419"
              "420 421 422 423 424 425 426 427 428 429"
              "430 431 432 433 434 435 436 437 438 439"
              "440 441 442 443 444 445 446 447 448 449"
              "450 451 452 453 454 455 456 457 458 459"
              "460 461 462 463 464 465 466 467 468 469"
              "470 471 472 473 474 475 476 477 478 479"
              "480 481 482 483 484 485 486 487 488 489"
              "490 491 492 493 494 495 496 497 498 499"
              "500 501 502 503 504 505 506 507 508 509"
              "510 511 512 513 514 515 516 517 518 519"
              "520 521 522 523 524 525 526 527 528 529"
              "530 531 532 533 534 535 536 537 538 539"
              "540 541 542 543 544 545 546 547 548 549"
              "550 551 552 553 554 555 556 557 558 559"
              "560 561 562 563 564 565 566 567 568 569"
              "570 571 572 573 574 575 576 577 578 579"
              "580 581 582 583 584 585 586 587 588 589"
              "590 591 592 593 594 595 596 597 598 599"
              "600 601 602 603 604 605 606 607 608 609"
              "610 611 612 613 614 615 616 617 618 619"
              "620 621 622 623 624 625 626 627 628 629"
              "630 631 632 633 634 635 636 637 638 639"
              "640 641 642 643 644 645 646 647 648 649"
              "650 651 652 653 654 655 656 657 658 659"
              "660 661 662 663 664 665 666 667 668 669"
              "670 671 672 673 674 675 676 677 678 679"
              "680 681 682 683 684 685 686 687 688 689"
              "690 691 692 693 694 695 696 697 698 699"
              "700 701 702 703 704 705 706 707 708 709"
              "710 711 712 713 714 715 716 717 718 719"
              "720 721 722 723 724 725 726 727 728 729"
              "730 731 732 733 734 735 736 737 738 739"
              "740 741 742 743 744 745 746 747 748 749"
              "750 751 752 753 754 755 756 757 758 759"
              "760 761 762 763 764 765 766 767 768 769"
              "770 771 772 773 774 775 776 777 778 779"
              "780 781 782 783 784 785 786 787 788 789"
              "790 791 792 793 794 795 796 797 798 799"
              "800 801 802 803 804 805 806 807 808 809"
              "810 811 812 813 814 815 816 817 818 819"
              "820 821 822 823 824 825 826 827 828 829"
              "830 831 832 833 834 835 836 837 838 839"
              "840 841 842 843 844 845 846 847 848 849"
              "850 851 852 853 854 855 856 857 858 859"
              "860 861 862 863 864 865 866 867 868 869"
              "870 871 872 873 874 875 876 877 878 879"
              "880 881 882 883 884 885 886 887 888 889"
              "890 891 892 893 894 895 896 897 898 899"
              "900 901 902 903 904 905 906 907 908 909"
              "910 911 912 913 914 915 916 917 918 919"
              "920 921 922 923 924 925 926 927 928 929"
              "930 931 932 933 934 935 936 937 938 939"
              "940 941 942 943 944 945 946 947 948 949"
              "950 951 952 953 954 955 956 957 958 959"
              "960 961 962 963 964 965 966 967 968 969"
              "970 971 972 973 974 975 976 977 978 979"
              "980 981 982 983 984 985 986 987 988 989"
              "990 991 992 993 994 995 996 997 998 999";
prepare long_query from "select ? as long_query";
execute long_query using @lparam;
set global general_log = off;
select command_type, argument from mysql.general_log where thread_id = @thread_id;
command_type	argument
Query	set global general_log = on
Query	set @lparam = "000 001 002 003 004 005 006 007 008 009"
              "010 011 012 013 014 015 016 017 018 019"
              "020 021 022 023 024 025 026 027 028 029"
              "030 031 032 033 034 035 036 037 038 039"
              "040 041 042 043 044 045 046 047 048 049"
              "050 051 052 053 054 055 056 057 058 059"
              "060 061 062 063 064 065 066 067 068 069"
              "070 071 072 073 074 075 076 077 078 079"
              "080 081 082 083 084 085 086 087 088 089"
              "090 091 092 093 094 095 096 097 098 099"
              "100 101 102 103 104 105 106 107 108 109"
              "110 111 112 113 114 115 116 117 118 119"
              "120 121 122 123 124 125 126 127 128 129"
              "130 131 132 133 134 135 136 137 138 139"
              "140 141 142 143 144 145 146 147 148 149"
              "150 151 152 153 154 155 156 157 158 159"
              "160 161 162 163 164 165 166 167 168 169"
              "170 171 172 173 174 175 176 177 178 179"
              "180 181 182 183 184 185 186 187 188 189"
              "190 191 192 193 194 195 196 197 198 199"
              "200 201 202 203 204 205 206 207 208 209"
              "210 211 212 213 214 215 216 217 218 219"
              "220 221 222 223 224 225 226 227 228 229"
              "230 231 232 233 234 235 236 237 238 239"
              "240 241 242 243 244 245 246 247 248 249"
              "250 251 252 253 254 255 256 257 258 259"
              "260 261 262 263 264 265 266 267 268 269"
              "270 271 272 273 274 275 276 277 278 279"
              "280 281 282 283 284 285 286 287 288 289"
              "290 291 292 293 294 295 296 297 298 299"
              "300 301 302 303 304 305 306 307 308 309"
              "310 311 312 313 314 315 316 317 318 319"
              "320 321 322 323 324 325 326 327 328 329"
              "330 331 332 333 334 335 336 337 338 339"
              "340 341 342 343 344 345 346 347 348 349"
              "350 351 352 353 354 355 356 357 358 359"
              "360 361 362 363 364 365 366 367 368 369"
              "370 371 372 373 374 375 376 377 378 379"
              "380 381 382 383 384 385 386 387 388 389"
              "390 391 392 393 394 395 396 397 398 399"
              "400 401 402 403 404 405 406 407 408 409"
              "410 411 412 413 414 415 416 417 418 419"
              "420 421 422 423 424 425 426 427 428 429"
              "430 431 432 433 434 435 436 437 438 439"
              "440 441 442 443 444 445 446 447 448 449"
              "450 451 452 453 454 455 456 457 458 459"
              "460 461 462 463 464 465 466 467 468 469"
              "470 471 472 473 474 475 476 477 478 479"
              "480 481 482 483 484 485 486 487 488 489"
              "490 491 492 493 494 495 496 497 498 499"
              "500 501 502 503 504 505 506 507 508 509"
              "510 511 512 513 514 515 516 517 518 519"
              "520 521 522 523 524 525 526 527 528 529"
              "530 531 532 533 534 535 536 537 538 539"
              "540 541 542 543 544 545 546 547 548 549"
              "550 551 552 553 554 555 556 557 558 559"
              "560 561 562 563 564 565 566 567 568 569"
              "570 571 572 573 574 575 576 577 578 579"
              "580 581 582 583 584 585 586 587 588 589"
              "590 591 592 593 594 595 596 597 598 599"
              "600 601 602 603 604 605 606 607 608 609"
              "610 611 612 613 614 615 616 617 618 619"
              "620 621 622 623 624 625 626 627 628 629"
              "630 631 632 633 634 635 636 637 638 639"
              "640 641 642 643 644 645 646 647 648 649"
              "650 651 652 653 654 655 656 657 658 659"
              "660 661 662 663 664 665 666 667 668 669"
              "670 671 672 673 674 675 676 677 678 679"
              "680 681 682 683 684 685 686 687 688 689"
              "690 691 692 693 694 695 696 697 698 699"
              "700 701 702 703 704 705 706 707 708 709"
              "710 711 712 713 714 715 716 717 718 719"
              "720 721 722 723 724 725 726 727 728 729"
              "730 731 732 733 734 735 736 737 738 739"
              "740 741 742 743 744 745 746 747 748 749"
              "750 751 752 753 754 755 756 757 758 759"
              "760 761 762 763 764 765 766 767 768 769"
              "770 771 772 773 774 775 776 777 778 779"
              "780 781 782 783 784 785 786 787 788 789"
              "790 791 792 793 794 795 796 797 798 799"
              "800 801 802 803 804 805 806 807 808 809"
              "810 811 812 813 814 815 816 817 818 819"
              "820 821 822 823 824 825 826 827 828 829"
              "830 831 832 833 834 835 836 837 838 839"
              "840 841 842 843 844 845 846 847 848 849"
              "850 851 852 853 854 855 856 857 858 859"
              "860 861 862 863 864 865 866 867 868 869"
              "870 871 872 873 874 875 876 877 878 879"
              "880 881 882 883 884 885 886 887 888 889"
              "890 891 892 893 894 895 896 897 898 899"
              "900 901 902 903 904 905 906 907 908 909"
              "910 911 912 913 914 915 916 917 918 919"
              "920 921 922 923 924 925 926 927 928 929"
              "930 931 932 933 934 935 936 937 938 939"
              "940 941 942 943 944 945 946 947 948 949"
              "950 951 952 953 954 955 956 957 958 959"
              "960 961 962 963 964 965 966 967 968 969"
              "970 971 972 973 974 975 976 977 978 979"
              "980 981 982 983 984 985 986 987 988 989"
              "990 991 992 993 994 995 996 997 998 999"
Query	PREPARE long_query FROM ...
Prepare	select ? as long_query
Query	execute long_query using @lparam
Execute	selectas long_query
Query	set global general_log = off
deallocate prepare long_query;
set global general_log = @old_general_log;
DROP TABLE IF EXISTS log_count;
DROP TABLE IF EXISTS slow_log_copy;
DROP TABLE IF EXISTS general_log_copy;
CREATE TABLE log_count (count BIGINT(21));
Warnings:
Warning	1681	Integer display width is deprecated and will be removed in a future release.
SET GLOBAL general_log = ON;
SET GLOBAL slow_query_log = ON;
CREATE TABLE slow_log_copy SELECT * FROM mysql.slow_log;
INSERT INTO slow_log_copy SELECT * FROM mysql.slow_log;
INSERT INTO log_count (count) VALUES ((SELECT count(*) FROM mysql.slow_log));
DROP TABLE slow_log_copy;
CREATE TABLE general_log_copy SELECT * FROM mysql.general_log;
INSERT INTO general_log_copy SELECT * FROM mysql.general_log;
INSERT INTO log_count (count) VALUES ((SELECT count(*) FROM mysql.general_log));
DROP TABLE general_log_copy;
SET GLOBAL general_log = OFF;
SET GLOBAL slow_query_log = OFF;
CREATE TABLE slow_log_copy SELECT * FROM mysql.slow_log;
INSERT INTO slow_log_copy SELECT * FROM mysql.slow_log;
INSERT INTO log_count (count) VALUES ((SELECT count(*) FROM mysql.slow_log));
DROP TABLE slow_log_copy;
CREATE TABLE general_log_copy SELECT * FROM mysql.general_log;
INSERT INTO general_log_copy SELECT * FROM mysql.general_log;
INSERT INTO log_count (count) VALUES ((SELECT count(*) FROM mysql.general_log));
DROP TABLE general_log_copy;
SET GLOBAL general_log = @saved_general_log;
SET GLOBAL slow_query_log = @saved_slow_query_log;
DROP TABLE log_count;
SET SESSION long_query_time = 0;
SET GLOBAL slow_query_log = ON;
FLUSH LOGS;
TRUNCATE TABLE mysql.slow_log;
CREATE TABLE t1 (f1 SERIAL,f2 INT, f3 INT, PRIMARY KEY(f1), KEY(f2));
INSERT INTO t1 VALUES (1,1,1);
INSERT INTO t1 VALUES (2,2,2);
INSERT INTO t1 VALUES (3,3,3);
INSERT INTO t1 VALUES (4,4,4);
SELECT SQL_NO_CACHE 'Bug#31700 - SCAN',f1,f2,f3,SLEEP(1.1) FROM t1 WHERE f3=4;
Bug#31700 - SCAN	f1	f2	f3	SLEEP(1.1)
Bug#31700 - SCAN	4	4	4	0
Warnings:
Warning	1681	'SQL_NO_CACHE' is deprecated and will be removed in a future release.
SELECT SQL_NO_CACHE 'Bug#31700 - KEY', f1,f2,f3,SLEEP(1.1) FROM t1 WHERE f2=3;
Bug#31700 - KEY	f1	f2	f3	SLEEP(1.1)
Bug#31700 - KEY	3	3	3	0
Warnings:
Warning	1681	'SQL_NO_CACHE' is deprecated and will be removed in a future release.
SELECT SQL_NO_CACHE 'Bug#31700 - PK',  f1,f2,f3,SLEEP(1.1) FROM t1 WHERE f1=2;
Bug#31700 - PK	f1	f2	f3	SLEEP(1.1)
Bug#31700 - PK	2	2	2	0
Warnings:
Warning	1681	'SQL_NO_CACHE' is deprecated and will be removed in a future release.
SELECT start_time, rows_examined, rows_sent, sql_text FROM mysql.slow_log WHERE sql_text LIKE '%Bug#31700%' ORDER BY start_time;
start_time	rows_examined	rows_sent	sql_text
TIMESTAMP	1	1	SELECT SQL_NO_CACHE 'Bug#31700 - KEY', f1,f2,f3,SLEEP(1.1) FROM t1 WHERE f2=3
TIMESTAMP	1	1	SELECT SQL_NO_CACHE 'Bug#31700 - PK',  f1,f2,f3,SLEEP(1.1) FROM t1 WHERE f1=2
TIMESTAMP	4	1	SELECT SQL_NO_CACHE 'Bug#31700 - SCAN',f1,f2,f3,SLEEP(1.1) FROM t1 WHERE f3=4
DROP TABLE t1;
TRUNCATE TABLE mysql.slow_log;
use mysql;
drop table if exists renamed_general_log;
drop table if exists renamed_slow_log;
RENAME TABLE general_log TO renamed_general_log;
ERROR HY000: Cannot rename 'general_log'. When logging enabled, rename to/from log table must rename two tables: the log table to an archive table and another table back to 'general_log'
RENAME TABLE slow_log TO renamed_slow_log;
ERROR HY000: Cannot rename 'slow_log'. When logging enabled, rename to/from log table must rename two tables: the log table to an archive table and another table back to 'slow_log'
use test;
flush tables with read lock;
unlock tables;
#
# WL#6613: Refactor logging code - split logging and binlogging code
#
SET GLOBAL log_output= 'TABLE';
SELECT @@general_log;
@@general_log
1
ALTER TABLE mysql.general_log DISCARD TABLESPACE;
ERROR HY000: You cannot 'ALTER' a log table if logging is enabled
SET @@session.long_query_time= @old_long_query_time;
SET @@global.log_output=       @old_log_output;
SET @@global.slow_query_log=   @old_slow_query_log;
SET @@global.general_log=      @old_general_log;
TRUNCATE TABLE mysql.slow_log;
TRUNCATE TABLE mysql.general_log;
