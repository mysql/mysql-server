include/master-slave.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection master]
SET SESSION sql_log_bin = 0;
call mtr.add_suppression("Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT. Statement is unsafe because it is being used inside a XA transaction. Concurrent XA transactions may deadlock on slaves when replicated using statements*");
SET SESSION sql_log_bin = 1;
# 1. Setup scenario:
# i. Create table t in test database on the source.
# ii. Create database 'ignored' on the source.
# iii. Sync to replica.
#
CREATE TABLE t (a INT);
CREATE DATABASE ignored;
include/sync_slave_sql_with_master.inc
SET SESSION sql_log_bin = 0;
call mtr.add_suppression("Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT. Statement is unsafe because it is being used inside a XA transaction. Concurrent XA transactions may deadlock on slaves when replicated using statements*");
SET SESSION sql_log_bin = 1;
# 2. On replica: Stop replica and create ignore_db replication filter for
#    database 'ignored'. Start replica.
#
include/stop_slave.inc
CHANGE REPLICATION FILTER REPLICATE_IGNORE_DB = (ignored);
include/start_slave.inc
# 3. On source: Start a new XA transaction, insert data in test.t table.
#
[connection master]
USE test;
XA START 'a';
INSERT INTO test.t VALUES (1);
# 4.i. Execute 'XA END' to suspend current XA transaction. Change
#      default database to 'ignored' using 'USE ignored' command. The
#      'ignored' database was added to ignore_db replication filter in
#      step2. Execute 'XA PREPARE' to prepare the XA transaction.
#
XA END 'a';
USE ignored;
XA PREPARE 'a';
include/sync_slave_sql_with_master.inc
# 4.ii. The XA transaction is successful can be checked using XA
#       RECOVER. The xid value for the XA transaction will not be
#       listed by XA RECOVER when the transaction is terminated.
#
include/assert.inc [1 XA transaction(s) in PREPARED state]
# 4.iii. On source execute 'XA COMMIT' to commit the XA transaction.
#
[connection master]
XA COMMIT 'a';
include/sync_slave_sql_with_master.inc
# 5. Confirm data is replicated successfully.
#
include/assert.inc ['There is a value 1 in table t']
# 6. Cleanup.
#
include/stop_slave.inc
CHANGE REPLICATION FILTER REPLICATE_IGNORE_DB = ();
include/start_slave.inc
[connection master]
DROP TABLE test.t;
DROP DATABASE ignored;
include/rpl_end.inc
