-- source include/have_ndb.inc

SET information_schema_stats_expiry=0;

CREATE LOGFILE GROUP lg_1
  ADD UNDOFILE 'undofile.dat'
  INITIAL_SIZE 16M
  UNDO_BUFFER_SIZE = 1M
  ENGINE=NDB;

ALTER LOGFILE GROUP lg_1
  ADD UNDOFILE 'undofile1.dat'
  INITIAL_SIZE 16M
  ENGINE=NDB;

# Check relevant fields for undo files
--vertical_results
SELECT FILE_ID, FILE_NAME, FILE_TYPE, LOGFILE_GROUP_NUMBER, LOGFILE_GROUP_NAME, ENGINE, TOTAL_EXTENTS, EXTENT_SIZE, INITIAL_SIZE, MAXIMUM_SIZE
FROM INFORMATION_SCHEMA.FILES
WHERE ENGINE='ndbcluster' AND FILE_TYPE='UNDO LOG';

CREATE TABLESPACE ts_1
  ADD DATAFILE 'datafile.dat'
  USE LOGFILE GROUP lg_1
  INITIAL_SIZE 2M
  ENGINE NDB;

ALTER TABLESPACE ts_1
  ADD DATAFILE 'datafile2.dat'
  INITIAL_SIZE = 4M;

CREATE TABLE t1 (
  a int PRIMARY KEY,
  b varchar(255)
) ENGINE = NDB
  TABLESPACE ts_1
  STORAGE DISK;

INSERT INTO t1 VALUES (1, "We have got Chhetri");

# Check relevant fields for datafiles
--vertical_results
SELECT FILE_ID, FILE_NAME, FILE_TYPE, TABLESPACE_NAME, LOGFILE_GROUP_NUMBER, LOGFILE_GROUP_NAME, ENGINE, FREE_EXTENTS, TOTAL_EXTENTS, EXTENT_SIZE, INITIAL_SIZE, MAXIMUM_SIZE, ROW_FORMAT
FROM INFORMATION_SCHEMA.FILES
WHERE ENGINE='ndbcluster' AND FILE_TYPE='DATAFILE';

DROP TABLE t1;

# Check FREE_EXTENTS after dropping table
--vertical_results
SELECT FILE_ID, FILE_NAME, FREE_EXTENTS, TOTAL_EXTENTS
FROM information_schema.files
WHERE ENGINE='ndbcluster' AND FILE_TYPE='DATAFILE';

ALTER TABLESPACE ts_1
  DROP DATAFILE 'datafile.dat';

ALTER TABLESPACE ts_1
  DROP DATAFILE 'datafile2.dat';

DROP TABLESPACE ts_1;

DROP LOGFILE GROUP lg_1
  ENGINE=NDB;
