--source include/not_embedded.inc
--source include/have_audit_log_plugin.inc

call mtr.add_suppression("Plugin audit_log reported");

--echo ##########################################
--echo # Run plugin
--echo ##########################################
--replace_result $TEST_SESSION_IN_THD TEST_SESSION_IN_THD
eval INSTALL PLUGIN test_session_in_thd SONAME '$TEST_SESSION_IN_THD';

--echo ##########################################
--echo # Stop plugin
--echo ##########################################
UNINSTALL PLUGIN test_session_in_thd;

--echo ##########################################
--echo # Run audit_log plugin
--echo ##########################################
let $audit_so = audit_log.so;
--disable_warnings
if(`SELECT CONVERT(@@version_compile_os USING latin1)
           IN ("Win32","Win64","Windows")`)
{
 let $audit_so=audit_log.dll;
}
--replace_result audit_log.dll audit_log.so
eval INSTALL PLUGIN audit_log SONAME '$audit_so';

--echo ##########################################
--echo # Start plugin with audit log
--echo ##########################################
--replace_result $TEST_SESSION_IN_THD TEST_SESSION_IN_THD
eval INSTALL PLUGIN test_session_in_thd SONAME '$TEST_SESSION_IN_THD';

--echo # To allow session in plugin to complete (until event is available)
DO SLEEP(5);

--echo ##########################################
--echo # Stop plugin
--echo ##########################################
UNINSTALL PLUGIN test_session_in_thd;

--echo ##########################################
--echo # Stop audit_log plugin
--echo ##########################################
move_file $MYSQLTEST_VARDIR/mysqld.1/data/audit.log $MYSQLTEST_VARDIR/mysqld.1/data/audit.log.temp;
UNINSTALL PLUGIN audit_log;

--echo ##########################################
--echo # Plugin log
--echo ##########################################
let $MYSQLD_DATADIR= `select @@datadir`;
cat_file $MYSQLD_DATADIR/test_session_in_thd.log;
remove_file $MYSQLD_DATADIR/test_session_in_thd.log;

let $MYSQL_LOGFILE= $MYSQLTEST_VARDIR/mysqld.1/data/audit.log.temp;
CREATE TABLE t1 (c1 text);
sleep 1;
--replace_result $MYSQL_LOGFILE MYSQL_LOGFILE
eval LOAD DATA INFILE '$MYSQL_LOGFILE' INTO TABLE t1(c1);
SELECT count(*) FROM t1 WHERE ExtractValue(c1, '/COMMAND_CLASS')='connect' ; 
SELECT count(*) FROM t1 WHERE ExtractValue(c1, '/NAME')='Connect' ; 
SELECT count(*) FROM t1 WHERE ExtractValue(c1, '/NAME')='Quit' ; 

--echo ##########################################
--echo # Cleanup
--echo ##########################################
DROP TABLE t1;

remove_file $MYSQL_LOGFILE;
