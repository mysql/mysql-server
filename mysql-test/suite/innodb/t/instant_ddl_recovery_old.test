##########################################################################
# Test script to test RECOVERY of a crashed server in older release with
# table having INSTANT ADD columns.
##########################################################################

--source include/not_valgrind.inc
--source include/have_lowercase0.inc

# ------------------------------------------------------------
# Tables created on earlier version with following
# ------------------------------------------------------------
# CREATE TABLE t1_redundant(id INT PRIMARY KEY, c1 CHAR(10), c2 CHAR(10)) ROW_FORMAT=REDUNDANT;
# INSERT INTO t1_redundant VALUES (1, "r1c1", "r1c2");
# Alter table t1_redundant add column c3 char(10), algorithm=instant;
# INSERT INTO t1_redundant VALUES (2, "r2c1", "r2c2", "r2c3");
#
# CREATE TABLE t1_compact(id INT PRIMARY KEY, c1 CHAR(10), c2 CHAR(10)) ROW_FORMAT=COMPACT;
# INSERT INTO t1_compact VALUES (1, "r1c1", "r1c2");
# Alter table t1_compact add column c3 char(10), algorithm=instant;
# INSERT INTO t1_compact VALUES (2, "r2c1", "r2c2", "r2c3");
#
# CREATE TABLE t1_dynamic(id INT PRIMARY KEY, c1 CHAR(10), c2 CHAR(10)) ROW_FORMAT=DYNAMIC;
# INSERT INTO t1_dynamic VALUES (1, "r1c1", "r1c2");
# Alter table t1_dynamic add column c3 char(10), algorithm=instant;
# INSERT INTO t1_dynamic VALUES (2, "r2c1", "r2c2", "r2c3");
#
# <STOP FLUSH>
#
# UPDATE t1_redundant SET c1="r0c0";
# UPDATE t1_redundant SET c3="r1c3" WHERE id=1;
# INSERT INTO t1_redundant VALUES (3, "r3c1", "r3c2", "r3c3");
# DELETE FROM t1_redundant WHERE id=2;
#
# UPDATE t1_compact SET c1="r0c0";
# UPDATE t1_compact SET c3="r1c3" WHERE id=1;
# INSERT INTO t1_compact VALUES (3, "r3c1", "r3c2", "r3c3");
# DELETE FROM t1_compact WHERE id=2;
#
# UPDATE t1_dynamic SET c1="r0c0";
# UPDATE t1_dynamic SET c3="r1c3" WHERE id=1;
# INSERT INTO t1_dynamic VALUES (3, "r3c1", "r3c2", "r3c3");
# DELETE FROM t1_dynamic WHERE id=2;
# ------------------------------------------------------------

--echo #########
--echo # SETUP #
--echo #########

--echo # Stop the running the server
--source include/shutdown_mysqld.inc

--echo # Copy and unzip the datadir.
--copy_file $MYSQLTEST_VARDIR/std_data/instant_ddl/crashed_datadir.zip $MYSQL_TMP_DIR/crashed_datadir.zip
--file_exists $MYSQL_TMP_DIR/crashed_datadir.zip
--exec unzip -qo $MYSQL_TMP_DIR/crashed_datadir.zip -d $MYSQL_TMP_DIR
let $DATADIR = $MYSQL_TMP_DIR/data;

--echo # Restart the server against the unzipped datadir
--replace_result $DATADIR DATADIR
--let $restart_parameters = restart: --datadir=$DATADIR --innodb-page-size=16k
--let $wait_counter=3000
--source include/start_mysqld.inc

--echo ##############################################
--echo # Test instant ADD COLUMN for REDUNDANT format
--echo ##############################################
let $row_format = redundant;
--source suite/innodb/include/instant_ddl_recovery_old.inc

--echo ############################################
--echo # Test instant ADD COLUMN for DYNAMIC format
--echo ############################################
let $row_format = dynamic;
--source suite/innodb/include/instant_ddl_recovery_old.inc

--echo ############################################
--echo # Test instant ADD COLUMN for COMPACT format
--echo ############################################
let $row_format = compact;
--source suite/innodb/include/instant_ddl_recovery_old.inc

--echo ###########
--echo # CLEANUP #
--echo ###########

--echo # Shutdown server
--source include/shutdown_mysqld.inc

--echo # Remove copied files
--file_exists $MYSQL_TMP_DIR/crashed_datadir.zip
--force-rmdir $MYSQL_TMP_DIR/data
--remove_file $MYSQL_TMP_DIR/crashed_datadir.zip

--echo # Restarting server to restore server state
let $restart_parameters =;
--source include/start_mysqld.inc
