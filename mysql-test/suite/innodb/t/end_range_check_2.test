--source include/have_innodb_16k.inc
--source include/have_debug.inc

--echo #
--echo # Bug #26300119	ASSERTION IN PREBUILT->TRX->ISOLATION_LEVEL == TRX_ISO_READ_UNCOMMITTED
--echo #

connect (con1,localhost,root,,);
connect (con2,localhost,root,,);

DELIMITER |;
CREATE PROCEDURE populate_t1(IN BASE INT, IN SIZE INT)
BEGIN
        DECLARE i INT DEFAULT BASE;
        WHILE (i <= SIZE) DO
                INSERT INTO t1 VALUES  (i, repeat('10101010101010101010',2000));
                SET i = i + 1;
        END WHILE;
END|
DELIMITER ;|

CREATE TABLE t1 (
        pk int,
        col_blob_key blob,
        primary key (pk)
);

CALL populate_t1(1, 100);

connection con1;
START TRANSACTION;
CALL populate_t1(101, 199);
SET DEBUG_SYNC='before_insertion_of_blob SIGNAL halted_insert WAIT_FOR proceed';
--send INSERT INTO t1 VALUES (200, repeat('10101010101010101010',2000));

connection con2;
SET DEBUG_SYNC='now WAIT_FOR halted_insert';
SET DEBUG_SYNC='allow_insert SIGNAL proceed';
--disable_result_log
SELECT pk, col_blob_key FROM t1 WHERE pk between 99 and 100;
--enable_result_log

connection con1;
--reap
COMMIT;

connection default;
disconnect con1;
disconnect con2;

SET DEBUG_SYNC='RESET';
DROP PROCEDURE populate_t1;
DROP TABLE t1;

--echo #
--echo # Bug#32291506 ASSERTION FAILURE: ROW0SEL.CC: MYSQL_COL_LEN == LEN
--echo #

CREATE TABLE t1 (
  c0 int,
  c1 char(200) CHARACTER SET utf32,
  c2 int GENERATED ALWAYS AS (c1) VIRTUAL,
  c3 int,
  PRIMARY KEY (c0, c1),
  KEY i1 (c2, c1(1))
);

INSERT  INTO t1(c0,c1,c3) VALUES (1,'1',1);

START TRANSACTION;

DELETE FROM t1;

SET DEBUG = "+d, compare_end_range";

--echo # No lock Range select with KEY i1 and end range check
SELECT * FROM t1  WHERE c2 < 0;

--echo # X lock Range select with KEY i1 and end range check
DELETE FROM t1  WHERE c2 < 0;

SET DEBUG = "-d, compare_end_range";

COMMIT;

DROP TABLE t1;

--echo #
--echo # Bug#33384537 prebuilt->m_end_range should be reset at fetch_cache initializing at row_search_mvcc()
--echo #

create table t10 (i int);
insert into t10 values (0), (1), (2), (3), (4), (5), (6), (7), (8), (9);

create table t1000 (i int);
insert into t1000 select a.i + b.i*10 + c.i*100 from t10 a, t10 b, t10 c;

create table t (i int, j int, k int, primary key(k, j, i), key(i, j, k));

insert into t select 1, 1, i from t10;
insert into t select 1, 2, i from t10;
insert into t select 2, 1, i from t10;
insert into t select 2, 2, i from t10;
insert into t select 3, 1, i from t10;
insert into t select 3, 2, i from t10;

begin;
select * from t where i = 4;

connect (con1,localhost,root,,);
connection con1;

insert into t select 1, 1, i+10 from t1000 limit 400;
insert into t select 1, 2, i+10 from t1000;
insert into t select 2, 1, i+10 from t1000;
insert into t select 2, 2, i+10 from t1000;
insert into t select 3, 1, i+10 from t1000;
insert into t select 3, 2, i+10 from t1000;

connection default;

select /*+ SKIP_SCAN(t i) */ * from t where k > 2 and k < 8 order by i, j, k;

drop table t, t10, t1000;
disconnect con1;
