# Test for checking disk sector size
--source include/have_innodb.inc
--source include/not_embedded.inc
--source include/not_windows.inc

--disable_query_log
call mtr.add_suppression("\\[Error\\] InnoDB: Can't generate new master key for tablespace encryption, please check the keyring plugin is loaded.");
call mtr.add_suppression("\\[Error\\] InnoDB: Encryption can't find master key, please check the keyring plugin is loaded.");
call mtr.add_suppression("\\[ERROR\\] Function 'keyring_file' already exists");
call mtr.add_suppression("\\[ERROR\\] Couldn't load plugin named 'keyring_file' with soname 'keyring_file.*'.");
call mtr.add_suppression("Plugin keyring_file reported");
CALL mtr.add_suppression("\\[Warning\\] InnoDB: Failed to set O_DIRECT on file.*");

# The below mtr suppression to avoid failure in solaris platform.
CALL mtr.add_suppression("\\[ERROR\\] InnoDB: Failed to set DIRECTIO_ON on file.*");
CALL mtr.add_suppression("\\[ERROR\\] InnoDB: Failed to create check sector file*");
--enable_query_log

--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
eval SET @@global.keyring_file_data="$MYSQL_TMP_DIR/mysecret_keyring10";

# Confirm the flush method is O_DIRECT
# And the sector size has been set in I/O system initialization.
SHOW VARIABLES LIKE 'innodb_flush_method';

#  Create an encrypted table, and it will use sector size to align the
#  write buffer.
CREATE TABLE t1(c1 INT, c2 char(20)) ENCRYPTION="Y" ENGINE = InnoDB;

# Restart the server with keyring loaded
--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
-- send_shutdown
-- source include/wait_until_disconnected.inc
--exec echo "restart:--early-plugin-load="keyring_file=$KEYRING_PLUGIN" --loose-keyring_file_data=$MYSQL_TMP_DIR/mysecret_keyring10 $KEYRING_PLUGIN_OPT" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--enable_reconnect
--source include/wait_until_connected_again.inc
--disable_reconnect

SELECT * FROM t1 LIMIT 10;

DROP TABLE t1;

# Cleanup
--remove_file $MYSQL_TMP_DIR/mysecret_keyring10
