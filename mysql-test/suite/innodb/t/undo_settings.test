--echo # This test changes the setting innodb_undo_tablespaces and
--echo # innodb_rollback_segments both at runtime, between restarts,
--echo # and also after crashes.

SET DEFAULT_STORAGE_ENGINE=InnoDB;
let MYSQLD_DATADIR=`select @@datadir`;
let PAGE_SIZE=`select @@innodb_page_size`;
let ORIG_UNDO_TABLESPACES=`select @@innodb_undo_tablespaces`;
let ORIG_ROLLBACK_SEGMENTS=`select @@innodb_rollback_segments`;
SET GLOBAL innodb_monitor_enable='module_buffer_page';
SET GLOBAL innodb_monitor_enable='trx_rseg_current_size';

--echo #
--echo # Try to change the number of undo tablespaces online
--echo #

CREATE TABLESPACE `ts1` ADD DATAFILE 'ts1.ibd';
CREATE TABLE t1 (a SERIAL, b TEXT) TABLESPACE=`ts1`;
CREATE TABLE t2 (a SERIAL, b TEXT) TABLESPACE=`innodb_system`;
CREATE TABLE t3 (a SERIAL, b TEXT) TABLESPACE=`innodb_file_per_table`;

connect (con1,localhost,root);
INSERT INTO t1(b) VALUES (repeat('a',15));
INSERT INTO t2(b) VALUES (repeat('a',15));
INSERT INTO t3(b) VALUES (repeat('a',15));

connect (con2,localhost,root);
XA START 'x1';
INSERT INTO t1(b) VALUES (repeat('x1 ',5));
INSERT INTO t2(b) VALUES (repeat('x1 ',5));
INSERT INTO t3(b) VALUES (repeat('x1 ',5));

connection default;
SHOW VARIABLES LIKE 'innodb_rollback_segments';
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
--echo # Directory listing of UNDO tablespace files
--list_files $MYSQLD_DATADIR undo*

--echo #
--echo # Change number of UNDO tablespaces from 2 to 3 while online
--echo #
SET GLOBAL innodb_undo_tablespaces=3;
SHOW VARIABLES LIKE 'innodb_rollback_segments';
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
--echo # Directory listing of UNDO tablespace files
--list_files $MYSQLD_DATADIR undo*
connection con1;
COMMIT;
SELECT COUNT(*) FROM t1;
SELECT COUNT(*) FROM t2;
SELECT COUNT(*) FROM t3;
BEGIN;
INSERT INTO t1(b) VALUES (repeat('b',15));
INSERT INTO t2(b) VALUES (repeat('b',15));
INSERT INTO t3(b) VALUES (repeat('b',15));
connection con2;
XA END 'x1';
XA PREPARE 'x1';
XA COMMIT 'x1';
XA START 'x2';
INSERT INTO t1(b) VALUES (repeat('x2 ',5));
INSERT INTO t2(b) VALUES (repeat('x2 ',5));
INSERT INTO t3(b) VALUES (repeat('x2 ',5));
XA END 'x2';
connection default;

--echo #
--echo # Change number of UNDO tablespaces from 3 to 4 while online
--echo # Change number of Rollback Segments from 1 to 4 while online
--echo #
SHOW VARIABLES LIKE 'innodb_rollback_segments';
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
SET GLOBAL innodb_rollback_segments=4;
SET GLOBAL innodb_undo_tablespaces=4;
SHOW VARIABLES LIKE 'innodb_rollback_segments';
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
--echo # Directory listing of UNDO tablespace files
--list_files $MYSQLD_DATADIR undo*
connection con1;
INSERT INTO t1(b) VALUES (repeat('c',15));
INSERT INTO t2(b) VALUES (repeat('c',15));
INSERT INTO t3(b) VALUES (repeat('c',15));
connection con2;
XA PREPARE 'x2';
XA COMMIT 'x2';
XA START 'x3';
INSERT INTO t1(b) VALUES (repeat('x3 ',5));
INSERT INTO t2(b) VALUES (repeat('x3 ',5));
INSERT INTO t3(b) VALUES (repeat('x3 ',5));
XA END 'x3';
XA PREPARE 'x3';
XA COMMIT 'x3';
connection default;

--echo #
--echo # Change number of UNDO tablespaces from 4 to 2 while online
--echo # Change number of Rollback Segments from 4 to 2 while online
--echo #
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
SHOW VARIABLES LIKE 'innodb_rollback_segments';
SET GLOBAL innodb_undo_tablespaces=2;
SET GLOBAL innodb_rollback_segments=2;
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
SHOW VARIABLES LIKE 'innodb_rollback_segments';
SELECT name, status FROM information_schema.innodb_metrics WHERE name like '%rseg%';
connection con1;
INSERT INTO t1(b) VALUES (repeat('d',15));
INSERT INTO t2(b) VALUES (repeat('d',15));
INSERT INTO t3(b) VALUES (repeat('d',15));
connection default;

--echo #
--echo # Change number of UNDO tablespaces from 2 to 5 while online
--echo # Change number of Rollback Segments from 2 to 5 while online
--echo #
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
SHOW VARIABLES LIKE 'innodb_rollback_segments';
SET GLOBAL innodb_undo_tablespaces=5;
SET GLOBAL innodb_rollback_segments=5;
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
SHOW VARIABLES LIKE 'innodb_rollback_segments';
connection con1;
INSERT INTO t1(b) VALUES (repeat('e',15));
INSERT INTO t2(b) VALUES (repeat('e',15));
INSERT INTO t3(b) VALUES (repeat('e',15));
connection default;
disconnect con1;
disconnect con2;

--echo #
--echo # Shutdown mysqld cleanly.
--echo # Change number of UNDO tablespaces from 5 to 6 while offline
--echo # Change number of Rollback Segments from 5 to 6 while offline
--echo # Restart mysqld with these larger settings
--echo #
--source include/shutdown_mysqld.inc
let $restart_parameters = restart: --innodb_undo_tablespaces=6 --innodb_rollback_segments=6;
--source include/start_mysqld.inc
SHOW VARIABLES LIKE 'innodb_rollback_segments';
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
--echo # Directory listing of UNDO tablespace files
--list_files $MYSQLD_DATADIR undo*

--echo #
--echo # Shutdown mysqld cleanly.
--echo # Change number of UNDO tablespaces from 6 to 4 while offline
--echo # Change number of Rollback Segments from 6 to 4 while offline
--echo # Restart mysqld with these smaller settings
--echo #
--source include/shutdown_mysqld.inc
let $restart_parameters = restart: --innodb_undo_tablespaces=4 --innodb_rollback_segments=4;
--source include/start_mysqld.inc
SHOW VARIABLES LIKE 'innodb_rollback_segments';
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
--echo # Directory listing of UNDO tablespace files
--list_files $MYSQLD_DATADIR undo*

--echo #
--echo # Kill and and restart mysqld with less undo tablespaces=2 and less rollback segments=2
--echo #
connect (con1,localhost,root);
BEGIN;
INSERT INTO t1 (b) VALUES (repeat('f',15));
INSERT INTO t2 (b) VALUES (repeat('f',15));
INSERT INTO t3 (b) VALUES (repeat('f',15));
SELECT COUNT(*) FROM t1;
SELECT COUNT(*) FROM t2;
SELECT COUNT(*) FROM t3;
connection default;
let $restart_parameters = restart: --innodb_undo_tablespaces=2 --innodb_rollback_segments=2;
--source include/kill_and_restart_mysqld.inc
disconnect con1;
SHOW VARIABLES LIKE 'innodb_rollback_segments';
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
--echo # Directory listing of UNDO tablespace files
--list_files $MYSQLD_DATADIR undo*
SELECT COUNT(*) FROM t1;
SELECT COUNT(*) FROM t2;
SELECT COUNT(*) FROM t3;

--echo #
--echo # Kill and and restart mysqld with more undo tablespaces=7 and more rollback segments=7
--echo #
connect (con1,localhost,root);
BEGIN;
INSERT INTO t1 (b) VALUES (repeat('g',15));
INSERT INTO t2 (b) VALUES (repeat('g',15));
INSERT INTO t3 (b) VALUES (repeat('g',15));
SELECT COUNT(*) FROM t1;
SELECT COUNT(*) FROM t2;
SELECT COUNT(*) FROM t3;
connection default;
let $restart_parameters = restart: --innodb_undo_tablespaces=7 --innodb_rollback_segments=7;
--source include/kill_and_restart_mysqld.inc
disconnect con1;
SHOW VARIABLES LIKE 'innodb_rollback_segments';
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
--echo # Directory listing of UNDO tablespace files
--list_files $MYSQLD_DATADIR undo*
SELECT COUNT(*) FROM t1;
SELECT COUNT(*) FROM t2;
SELECT COUNT(*) FROM t3;

--echo #
--echo # Restart mysqld in read-only mode with more undo tablespaces=8 and more rollback segments=8
--echo #
connect (con1,localhost,root);
INSERT INTO t1 (b) VALUES (repeat('h',15));
INSERT INTO t2 (b) VALUES (repeat('h',15));
INSERT INTO t3 (b) VALUES (repeat('h',15));
connection default;
let $restart_parameters = restart: --innodb_read_only  --innodb_undo_tablespaces=8 --innodb_rollback_segments=8;
--source include/restart_mysqld.inc
disconnect con1;
SHOW VARIABLES LIKE 'innodb_rollback_segments';
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
SET GLOBAL innodb_undo_tablespaces=8;
SET GLOBAL innodb_rollback_segments=8;
SHOW VARIABLES LIKE 'innodb_rollback_segments';
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
SET GLOBAL innodb_undo_tablespaces=3;
SET GLOBAL innodb_rollback_segments=3;
SHOW VARIABLES LIKE 'innodb_rollback_segments';
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
--echo # Directory listing of UNDO tablespace files
--list_files $MYSQLD_DATADIR undo*
SELECT COUNT(*) FROM t1;
SELECT COUNT(*) FROM t2;
SELECT COUNT(*) FROM t3;

--echo #
--echo # Restart mysqld in force_recovery mode with more undo tablespaces=8 and more rollback segments=8
--echo #
let $restart_parameters = restart: --innodb_force_recovery=1 --innodb_undo_tablespaces=8 --innodb_rollback_segments=8;
--source include/restart_mysqld.inc
SHOW VARIABLES LIKE 'innodb_rollback_segments';
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
SET GLOBAL innodb_undo_tablespaces=8;
SET GLOBAL innodb_rollback_segments=8;
SHOW VARIABLES LIKE 'innodb_rollback_segments';
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
SET GLOBAL innodb_undo_tablespaces=3;
SET GLOBAL innodb_rollback_segments=3;
SHOW VARIABLES LIKE 'innodb_rollback_segments';
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
--echo # Directory listing of UNDO tablespace files
--list_files $MYSQLD_DATADIR undo*
SELECT COUNT(*) FROM t1;
SELECT COUNT(*) FROM t2;
SELECT COUNT(*) FROM t3;

--echo #
--echo # Use SET PERSIST to change undo tablespaces=11 and rollback segments=11
--echo # and put some undo logs in both the system tablespace and the undo logs
--echo # that must be rolled back on restart.
--echo #
let $restart_parameters = restart: --innodb_undo_tablespaces=8 --innodb_rollback_segments=8;
--source include/restart_mysqld.inc
BEGIN;
INSERT INTO t1 (b) VALUES (repeat('i',15));
INSERT INTO t2 (b) VALUES (repeat('i',15));
INSERT INTO t3 (b) VALUES (repeat('i',15));
SET PERSIST innodb_undo_tablespaces=11;
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
SET PERSIST innodb_rollback_segments=11;
SHOW VARIABLES LIKE 'innodb_rollback_segments';
INSERT INTO t1 (b) VALUES (repeat('j',15));
INSERT INTO t2 (b) VALUES (repeat('j',15));
INSERT INTO t3 (b) VALUES (repeat('j',15));

--echo #
--echo # Restart in normal mode with default undo tablespaces and rollback segments.
--echo # The persisted settings will be set just after startup.
--echo #
let $restart_parameters = restart;
--source include/restart_mysqld.inc
SHOW VARIABLES LIKE 'innodb_rollback_segments';
SHOW VARIABLES LIKE 'innodb_undo_tablespaces';
--echo # Directory listing of UNDO tablespace files
--list_files $MYSQLD_DATADIR undo*
SELECT COUNT(*) FROM t1;
SELECT COUNT(*) FROM t2;
SELECT COUNT(*) FROM t3;
INSERT INTO t1 (b) VALUES (repeat('k',15));
INSERT INTO t2 (b) VALUES (repeat('k',15));
INSERT INTO t3 (b) VALUES (repeat('k',15));
SELECT COUNT(*) FROM t1;
SELECT COUNT(*) FROM t2;
SELECT COUNT(*) FROM t3;

--echo #
--echo # Cleanup
--echo #
DROP TABLE t1;
DROP TABLE t2;
DROP TABLE t3;
DROP TABLESPACE ts1;

SET PERSIST innodb_undo_tablespaces=default;
SET PERSIST innodb_rollback_segments=default;
SET GLOBAL innodb_fast_shutdown=0;
--source include/shutdown_mysqld.inc
--remove_files_wildcard $MYSQLD_DATADIR undo*
let $restart_parameters = restart: --innodb_undo_tablespaces=$ORIG_UNDO_TABLESPACES --innodb_rollback_segments=$ORIG_ROLLBACK_SEGMENTS;
--source include/start_mysqld.inc

--disable_query_log
call mtr.add_suppression('Skip re-populating collations and character sets tables in InnoDB read-only mode');
call mtr.add_suppression('\\[Warning\\] \\[[^]]*\\] InnoDB: Cannot create undo tablespaces since innodb_read_only has been set.  Using 7 existing undo tablespaces');
call mtr.add_suppression('\\[Warning\\] \\[[^]]*\\] InnoDB: Cannot create undo tablespaces since innodb_force_recovery has been set.  Using 7 existing undo tablespaces');
call mtr.add_suppression('\\[Warning\\] \\[[^]]*\\] InnoDB: Cannot set innodb_undo_tablespaces to [8,3] when in read-only mode');
call mtr.add_suppression('\\[Warning\\] \\[[^]]*\\] InnoDB: Cannot set innodb_rollback_segments to [8,3] when in read-only mode');
call mtr.add_suppression('\\[Warning\\] \\[[^]]*\\] InnoDB: Cannot set innodb_undo_tablespaces to [8,3] when in innodb_force_recovery > 0');
call mtr.add_suppression('\\[Warning\\] \\[[^]]*\\] InnoDB: Cannot set innodb_rollback_segments to [8,3] when in innodb_force_recovery > 0');
call mtr.add_suppression('\\[Warning\\] \\[[^]]*\\] Skip updating information_schema metadata in InnoDB read-only mode');
call mtr.add_suppression('\\[Warning\\] \\[[^]]*\\] Skipped updating resource group metadata in InnoDB read only mode.');
--enable_query_log

