##########################################################################
# Test script to test UPGRADE from older version partitioned table (not)
# having INSTANT ADD columns.
##########################################################################

--source include/not_valgrind.inc
--source include/have_lowercase0.inc

# ------------------------------------------------------------
# Tables created on earlier version with following
# ------------------------------------------------------------
# CREATE TABLE t1_redundant (c1 INT, c2 CHAR(10))
#  PARTITION BY RANGE(c1)
#   (PARTITION p0 VALUES LESS THAN (100),
#    PARTITION p1 VALUES LESS THAN (200),
#    PARTITION p2 VALUES LESS THAN (300),
#    PARTITION p3 VALUES LESS THAN (400));
# INSERT INTO t1_redundant VALUES (10, "r1c2"), (110, "r2c2"), (210, "r3c2"), (310, "r4c2");
# ALTER TABLE t1_redundant ADD COLUMN c3 CHAR(10) default "c3_def";
# INSERT INTO t1_redundant VALUES(40, "r5c2", "r5c3");
# ALTER TABLE t1_redundant ADD COLUMN c4 CHAR(10) default "c4_def";
# INSERT INTO t1_redundant VALUES(60, "r6c2", "r6c3", "r6c4");

# CREATE TABLE t1_dynamic (c1 INT, c2 CHAR(10))
#  PARTITION BY RANGE(c1)
#   (PARTITION p0 VALUES LESS THAN (100),
#    PARTITION p1 VALUES LESS THAN (200),
#    PARTITION p2 VALUES LESS THAN (300),
#    PARTITION p3 VALUES LESS THAN (400));
# INSERT INTO t1_dynamic VALUES (10, "r1c2"), (110, "r2c2"), (210, "r3c2"), (310, "r4c2");
# ALTER TABLE t1_dynamic ADD COLUMN c3 CHAR(10) default "c3_def";
# INSERT INTO t1_dynamic VALUES(40, "r5c2", "r5c3");
# ALTER TABLE t1_dynamic ADD COLUMN c4 CHAR(10) default "c4_def";
# INSERT INTO t1_dynamic VALUES(60, "r6c2", "r6c3", "r6c4");

# CREATE TABLE t1_compact (c1 INT, c2 CHAR(10))
#  PARTITION BY RANGE(c1)
#   (PARTITION p0 VALUES LESS THAN (100),
#    PARTITION p1 VALUES LESS THAN (200),
#    PARTITION p2 VALUES LESS THAN (300),
#    PARTITION p3 VALUES LESS THAN (400));
# INSERT INTO t1_compact VALUES (10, "r1c2"), (110, "r2c2"), (210, "r3c2"), (310, "r4c2");
# ALTER TABLE t1_compact ADD COLUMN c3 CHAR(10) default "c3_def";
# INSERT INTO t1_compact VALUES(40, "r5c2", "r5c3");
# ALTER TABLE t1_compact ADD COLUMN c4 CHAR(10) default "c4_def";
# INSERT INTO t1_compact VALUES(60, "r6c2", "r6c3", "r6c4");
#
# CREATE TABLE t2_redundant (c1 INT, c2 INT, c3 INT, c4 TEXT)
#  PARTITION BY RANGE(c1)
#   (PARTITION p0 VALUES LESS THAN (100),
#    PARTITION p1 VALUES LESS THAN (200),
#    PARTITION p2 VALUES LESS THAN (300),
#    PARTITION p3 VALUES LESS THAN MAXVALUE);
# INSERT INTO t2_redundant VALUES (90, 1, 1, "1"), (190, 1, 1, "2"), (290, 1, 1, "3"), (390, 1, 1, "3");
# Alter table t2_redundant add column c5 INT, algorithm=INSTANT;
# ALTER TABLE t2_redundant TRUNCATE PARTITION p0, p1, p2;
#
# CREATE TABLE t2_dynamic (c1 INT, c2 INT, c3 INT, c4 TEXT)
#  PARTITION BY RANGE(c1)
#   (PARTITION p0 VALUES LESS THAN (100),
#    PARTITION p1 VALUES LESS THAN (200),
#    PARTITION p2 VALUES LESS THAN (300),
#    PARTITION p3 VALUES LESS THAN MAXVALUE);
# INSERT INTO t2_dynamic  VALUES (90, 1, 1, "1"), (190, 1, 1, "2"), (290, 1, 1, "3"), (390, 1, 1, "3");
# Alter table t2_dynamic  add column c5 INT, algorithm=INSTANT;
# ALTER TABLE t2_dynamic  TRUNCATE PARTITION p0, p1, p2;
#
# CREATE TABLE t2_compact (c1 INT, c2 INT, c3 INT, c4 TEXT)
#  PARTITION BY RANGE(c1)
#   (PARTITION p0 VALUES LESS THAN (100),
#    PARTITION p1 VALUES LESS THAN (200),
#    PARTITION p2 VALUES LESS THAN (300),
#    PARTITION p3 VALUES LESS THAN MAXVALUE);
# INSERT INTO t2_compact VALUES (90, 1, 1, "1"), (190, 1, 1, "2"), (290, 1, 1, "3"), (390, 1, 1, "3");
# Alter table t2_compact add column c5 INT, algorithm=INSTANT;
# ALTER TABLE t2_compact TRUNCATE PARTITION p0, p1, p2;
# ------------------------------------------------------------

--echo #########
--echo # SETUP #
--echo #########

--echo # Stop the running the server
--source include/shutdown_mysqld.inc

--echo # Copy and unzip the datadir.
--copy_file $MYSQLTEST_VARDIR/std_data/instant_ddl/data_instant_ddl_upgrade_part.zip $MYSQL_TMP_DIR/data_instant_ddl_upgrade_part.zip
--file_exists $MYSQL_TMP_DIR/data_instant_ddl_upgrade_part.zip
--exec unzip -qo $MYSQL_TMP_DIR/data_instant_ddl_upgrade_part.zip -d $MYSQL_TMP_DIR
let $DATADIR = $MYSQL_TMP_DIR/data;

--echo # Restart the server against the unzipped datadir
--replace_result $DATADIR DATADIR
--let $restart_parameters = restart: --datadir=$DATADIR --innodb-page-size=16k
--let $wait_counter=3000
--source include/start_mysqld.inc

--echo ##############################################
--echo # Test instant ADD/DROP COLUMN for REDUNDANT format
--echo ##############################################
let $row_format = redundant;
--source suite/innodb/include/instant_ddl_upgrade_part.inc

--echo ############################################
--echo # Test instant ADD/DROP COLUMN for DYNAMIC format
--echo ############################################
let $row_format = dynamic;
--source suite/innodb/include/instant_ddl_upgrade_part.inc

--echo ############################################
--echo # Test instant ADD/DROP COLUMN for COMPACT format
--echo ############################################
let $row_format = compact;
--source suite/innodb/include/instant_ddl_upgrade_part.inc

--echo ###########
--echo # CLEANUP #
--echo ###########

--echo # Shutdown server
--source include/shutdown_mysqld.inc

--echo # Remove copied files
--file_exists $MYSQL_TMP_DIR/data_instant_ddl_upgrade_part.zip
--force-rmdir $MYSQL_TMP_DIR/data
--remove_file $MYSQL_TMP_DIR/data_instant_ddl_upgrade_part.zip

--echo # Restarting server to restore server state
let $restart_parameters =;
--source include/start_mysqld.inc
