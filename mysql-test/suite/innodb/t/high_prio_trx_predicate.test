# Scenario:
#  T1=({R(B)})
#  T2=({W(B)})
#  T3=({W(B), C}, HIGH_PRIORITY).
#
# Outcome: T1 must abort, T2 must commit.

--source include/count_sessions.inc

CREATE TABLE tab(c1 int NOT NULL PRIMARY KEY,c2 POINT NOT NULL);
CREATE SPATIAL INDEX idx1 on tab(c2);
INSERT INTO tab(c1,c2) VALUES(1,ST_GeomFromText('POINT(10 10)'));

--connect(con1,localhost,root,,test)
--connect(con2,localhost,root,,test)
--connect(con3,localhost,root,,test)

--echo
--echo # On connection 1
--connection con1
set transaction isolation level serializable ;
START TRANSACTION;
SELECT ST_AsText(c2) FROM tab WHERE MBRWithin(c2, ST_GeomFromText('POLYGON((5 5, 15 5, 15 15, 5 15, 5 5))'));


--echo
--echo # On connection 2
--connection con2
start transaction;
--send INSERT INTO tab(c1,c2) VALUES(7, ST_GeomFromText('POINT(11 11)'));

--echo
--echo # On connection 3
--connection con3
--source include/start_transaction_high_prio.inc
INSERT INTO tab(c1,c2) VALUES(8, ST_GeomFromText('POINT(10 10)'));
COMMIT;
--disconnect con3

--echo
--echo # On connection 1
--connection con1
--error ER_ERROR_DURING_COMMIT
COMMIT;
--disconnect con1

--connection default
--let $assert_text= 'There is a 8 in tab'
--let $assert_cond= [SELECT COUNT(*) AS count FROM tab WHERE tab.c1 = 8, count, 1] = 1
--source include/assert.inc

--connection con2
--reap;
--disconnect con2

--connection default
SELECT c1 FROM tab;

DROP TABLE tab;

--source include/wait_until_count_sessions.inc
