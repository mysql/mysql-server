#
# WL#6965: Truncate UNDO logs.
#

# This test uses debug insertion points.
--source include/have_debug.inc

# Valgrind would complain about memory leaks when we crash on purpose.
--source include/not_valgrind.inc
# Avoid CrashReporter popup on Mac
--source include/not_crashrep.inc
--source include/big_test.inc

################################################################################
# Test-case will test following scenarios.
#
# 1. Different Crash Scenario.
#    a. before log-checkpoint.
#    b. after checkpoint before ddl log.
#    c. after ddl log before truncate.
#    d. after truncate before ddl log is removed.
#    e. after truncate is complete (including ddl log removal).
#
################################################################################

#-----------------------------------------------------------------------------
#
# create test-bed
#
let SEARCH_FILE = $MYSQLTEST_VARDIR/log/mysqld.1.err;
--let $_server_id= `SELECT @@server_id`
--let $_expect_file_name= $MYSQLTEST_VARDIR/tmp/mysqld.$_server_id.expect

#
delimiter |;
CREATE PROCEDURE populate_t1()
BEGIN
        DECLARE i INT DEFAULT 1;
        while (i <= 40000) DO
                insert into t1 values (i, 'a', 'b');
                SET i = i + 1;
        END WHILE;
END |
delimiter ;|

#-----------------------------------------------------------------------------
#
# 1. Different Crash Scenario.
#    a. before log-checkpoint.
#    b. after checkpoint before ddl log.
#    c. after ddl log before truncate.
#    d. after truncate before ddl log is removed.
#    e. after truncate is complete (including ddl log removal).
#
let $debug_point="+d,ib_undo_trunc_before_checkpoint";
let SEARCH_PATTERN = ib_undo_trunc_before_checkpoint;
--source suite/innodb_undo/include/undo_log_trunc_recv.inc
#
#
let $debug_point="+d,ib_undo_trunc_before_ddl_log_start";
let SEARCH_PATTERN = ib_undo_trunc_before_ddl_log_start;
--source suite/innodb_undo/include/undo_log_trunc_recv.inc
#
#
let $debug_point="+d,ib_undo_trunc_before_truncate";
let SEARCH_PATTERN = ib_undo_trunc_before_truncate;
--source suite/innodb_undo/include/undo_log_trunc_recv.inc
#
#
let $debug_point="+d,ib_undo_trunc_before_ddl_log_end";
let SEARCH_PATTERN = ib_undo_trunc_before_ddl_log_end;
--source suite/innodb_undo/include/undo_log_trunc_recv.inc

--disable_query_log
call mtr.add_suppression("Header page consists of zero bytes in datafile");
call mtr.add_suppression("Datafile '.*' is corrupted. Cannot determine the space ID from the first 64 pages");
call mtr.add_suppression("Ignoring.*undo_002.*invalid tablespace ID in the header");
--enable_query_log
#
#
let $debug_point="+d,ib_undo_trunc_trunc_done";
let SEARCH_PATTERN = ib_undo_trunc_trunc_done;
--source suite/innodb_undo/include/undo_log_trunc_recv.inc

#-----------------------------------------------------------------------------
#
# remove test-bed
#
drop PROCEDURE populate_t1;

