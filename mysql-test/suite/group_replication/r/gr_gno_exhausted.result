include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]
[connection server1]
SET SESSION sql_log_bin= 0;
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;
call mtr.add_suppression("Impossible to generate Global Transaction Identifier: the integer component reached the maximal value. Restart the group with a new group_replication_group_name.");
call mtr.add_suppression("Error at event handling! Got error: 1");
call mtr.add_suppression("Fatal error during execution on the Applier process of Group Replication. The server will now leave the group.");
call mtr.add_suppression("The server was automatically set into read only mode after an error was detected.");
call mtr.add_suppression("The member is leaving a group without being on one.");
call mtr.add_suppression("The member is already leaving or joining a group.");
call mtr.add_suppression("Unable to ensure the execution of group transactions received during recovery.");
call mtr.add_suppression("Fatal error during the incremental recovery process of Group Replication. The server will leave the group.");
call mtr.add_suppression("Skipping leave operation: concurrent attempt to leave the group is on-going.");
call mtr.add_suppression("Skipping leave operation: member already left the group.");
SET SESSION sql_log_bin= 1;
[connection server2]
SET SESSION sql_log_bin= 0;
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;
call mtr.add_suppression("Impossible to generate Global Transaction Identifier: the integer component reached the maximal value. Restart the group with a new group_replication_group_name.");
call mtr.add_suppression("Error at event handling! Got error: 1");
call mtr.add_suppression("Fatal error during execution on the Applier process of Group Replication. The server will now leave the group.");
call mtr.add_suppression("The server was automatically set into read only mode after an error was detected.");
call mtr.add_suppression("All donors left. Aborting group replication incremental recovery.");
call mtr.add_suppression("Fatal error during the incremental recovery process of Group Replication. The server will leave the group.");
call mtr.add_suppression("The member is leaving a group without being on one.");
call mtr.add_suppression("The member is already leaving or joining a group.");
call mtr.add_suppression("Skipping leave operation: concurrent attempt to leave the group is on-going.");
call mtr.add_suppression("Skipping leave operation: member already left the group.");
SET SESSION sql_log_bin= 1;

############################################################
# 1. Validate that transactions are aborted on local member
#    and remote members move to ERROR state when group GNOs
#    are exhausted.
[connection server1]
SET GLOBAL GTID_PURGED= "c234f752-1ee4-11e6-adee-00212844d44e:1-9223372036854775804";
include/assert.inc [GTID_EXECUTED must be UUID:1-9223372036854775804]
include/start_and_bootstrap_group_replication.inc
include/assert.inc [GTID_EXECUTED must be UUID:1-9223372036854775805]
[connection server2]
SET GLOBAL GTID_PURGED= "c234f752-1ee4-11e6-adee-00212844d44e:1-9223372036854775804";
include/assert.inc [GTID_EXECUTED must be UUID:1-9223372036854775804]
include/start_group_replication.inc
include/assert.inc [GTID_EXECUTED must be UUID:1-9223372036854775806]
[connection server1]
INSERT INTO t1 VALUES (1);
ERROR 40000: Plugin instructed the server to rollback the current transaction.
[connection server2]
include/gr_wait_for_member_state.inc
include/stop_group_replication.inc
[connection server1]
include/stop_group_replication.inc

############################################################
# 2. Validate that member start moves to ERROR state when
#    group GNOs are exhausted.
RESET MASTER;
SET GLOBAL GTID_PURGED= "c234f752-1ee4-11e6-adee-00212844d44e:1-9223372036854775806";
include/assert.inc [GTID_EXECUTED must be UUID:1-9223372036854775806]
include/start_group_replication.inc
include/stop_group_replication.inc
############################################################
# 3. Validate that member moves to ERROR state when group
#    GNOs are exhausted on view change log.
[connection server1]
RESET MASTER;
SET GLOBAL GTID_PURGED= "c234f752-1ee4-11e6-adee-00212844d44e:1-9223372036854775805";
include/assert.inc [GTID_EXECUTED must be UUID:1-9223372036854775805]
include/start_and_bootstrap_group_replication.inc
include/assert.inc [GTID_EXECUTED must be UUID:1-9223372036854775806]
[connection server2]
RESET MASTER;
SET GLOBAL GTID_PURGED= "c234f752-1ee4-11e6-adee-00212844d44e:1-9223372036854775805";
include/assert.inc [GTID_EXECUTED must be UUID:1-9223372036854775805]
include/start_group_replication.inc
include/stop_group_replication.inc
[connection server1]
include/gr_wait_for_member_state.inc
include/stop_group_replication.inc

############################################################
# 4. Clean up.
[connection server1]
SET SESSION sql_log_bin= 0;
DROP TABLE t1;
SET SESSION sql_log_bin= 1;
[connection server2]
SET SESSION sql_log_bin= 0;
DROP TABLE t1;
SET SESSION sql_log_bin= 1;
include/group_replication_end.inc
