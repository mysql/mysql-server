include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]

############################################################
# 1. Install clone plugin on server1.
#    Commit some data and then purge all binary logs.
#    Bootstrap a group on server1.
[connection server1]
INSTALL PLUGIN clone SONAME 'CLONE_PLUGIN';
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);
INSERT INTO t1 VALUES (2);
SET sql_log_bin = 0;
include/gtid_utils.inc
SET sql_log_bin = 1;
FLUSH BINARY LOGS;
PURGE BINARY LOGS TO 'CURRENT_BINLOG_FILE';
include/assert.inc [GTID_PURGED must be equal to GTID_EXECUTED]
include/start_and_bootstrap_group_replication.inc

#####################################################################
# 2. Install clone plugin on server2.
#    Restart server with a monitoring process (mysqld_safe) if needed
[connection server2]
INSTALL PLUGIN clone SONAME 'CLONE_PLUGIN';
include/spawn_monitoring_process.inc

#####################################################################
# 3. Start GR, clone must be executed since recovery
#    from binary logs is not possible.
#    As a test variation, do not start on boot after cloning
START GROUP_REPLICATION;
include/rpl_reconnect.inc
include/start_group_replication.inc
include/assert.inc [Clone status must be completed]
include/diff_tables.inc [server1:test.t1, server2:test.t1]

############################################################
# 4. Cleanup.
[connection server2]
RESET PERSIST IF EXISTS group_replication_group_name;
RESET PERSIST IF EXISTS group_replication_local_address;
RESET PERSIST IF EXISTS group_replication_group_seeds;
RESET PERSIST IF EXISTS group_replication_communication_stack;
DROP TABLE t1;
include/gtid_utils_end.inc
include/rpl_sync.inc
set session sql_log_bin=0;
call mtr.add_suppression("This member will start distributed recovery using clone. It is due to no ONLINE member has the missing data for recovering in its binary logs.");
call mtr.add_suppression("Clone removing all user data for provisioning: Started");
call mtr.add_suppression("Clone removing all user data for provisioning: Finished");
set session sql_log_bin=1;
include/clean_monitoring_process.inc
include/group_replication_end.inc
