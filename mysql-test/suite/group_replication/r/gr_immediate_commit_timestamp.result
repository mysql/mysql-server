include/group_replication.inc [rpl_server_count=4]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]
############################################################
# 1. Start GR on S1 & S2
[connection server1]
include/start_and_bootstrap_group_replication.inc
[connection server2]
include/start_group_replication.inc
############################################################
# 2. Add some data to S1 and S4
[connection server1]
CREATE TABLE test.t1 (c1 INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;
include/rpl_sync.inc
[connection server4]
CREATE TABLE test.t2 (c1 INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;
############################################################
# 3. Create and start new channel ch1_3: S3(REPLICA), S1(SOURCE)
[connection server3]
CHANGE REPLICATION SOURCE TO SOURCE_HOST='localhost', SOURCE_USER='root', SOURCE_PORT=SERVER_1_PORT for channel 'ch1_3';
Warnings:
Note	1759	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	1760	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
include/start_slave.inc [FOR CHANNEL 'ch1_3']
[connection server1]
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'ch1_3']
############################################################
# 4. Assert IMMEDIATE_COMMIT_TIMESTAMP is correct on S2 and S3.
#    On S1 transaction `CREATE TABLE test.t1 (c1 INT NOT NULL PRIMARY KEY) ENGINE=InnoDB`
#    is committed through a client session, as such it is not queued on
#    S1 `group_replication_applier` relay log.
[connection server2]
include/assert.inc ['LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP is not 0.']
include/assert.inc ['LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP = LAST_QUEUED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP.']
[connection server3]
include/assert.inc ['LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP is not 0.']
include/assert.inc ['LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP is greater then LAST_QUEUED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP.']
############################################################
# 5. Run a transaction while complete setup is ON.
[connection server2]
INSERT INTO test.t1 values (1);
include/rpl_sync.inc
[connection server1]
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'ch1_3']
############################################################
# 6. Assert IMMEDIATE_COMMIT_TIMESTAMP is correct on S1 and S3.
#    On S2 transaction `INSERT INTO test.t1 values (1)`
#    is committed through a client session, as such it is not queued on
#    S2 `group_replication_applier` relay log.
[connection server1]
include/assert.inc ['LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP is not 0.']
include/assert.inc ['LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP = LAST_QUEUED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP.']
[connection server3]
include/assert.inc ['LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP is not 0.']
include/assert.inc ['LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP is greater then LAST_QUEUED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP.']
############################################################
# 7. Create and start new channel ch4_1: server1(REPLICA), server4(SOURCE)
#    Existing transactions will be replicated.
[connection server1]
CHANGE REPLICATION SOURCE TO SOURCE_HOST='localhost', SOURCE_USER='root', SOURCE_PORT=SERVER_4_PORT for channel 'ch4_1';
Warnings:
Note	1759	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	1760	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
include/start_slave.inc [FOR CHANNEL 'ch4_1']
[connection server4]
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'ch4_1']
[connection server1]
include/sync_slave_sql_with_master.inc [FOR CHANNEL 'ch1_3']
############################################################
# 8. Assert IMMEDIATE_COMMIT_TIMESTAMP is correct on S2 and S3.
#    On S1 transaction `CREATE TABLE test.t2 (c1 INT NOT NULL PRIMARY KEY) ENGINE=InnoDB`
#    is committed through channel `ch4_1`, as such it is not queued on
#    S1 `group_replication_applier` relay log.
[connection server2]
include/assert.inc ['LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP is not 0.']
include/assert.inc ['LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP is greater then LAST_QUEUED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP.']
[connection server3]
include/assert.inc ['LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP is not 0.']
include/assert.inc ['LAST_QUEUED_TRANSACTION_IMMEDIATE_COMMIT_TIMESTAMP is greater then LAST_QUEUED_TRANSACTION_ORIGINAL_COMMIT_TIMESTAMP.']
############################################################
# 9. Clean Up
[connection server3]
STOP REPLICA FOR CHANNEL 'ch1_3';
RESET REPLICA ALL FOR CHANNEL 'ch1_3';
DROP TABLE test.t1;
DROP TABLE test.t2;
[connection server1]
DROP TABLE test.t1;
DROP TABLE test.t2;
STOP REPLICA FOR CHANNEL 'ch4_1';
RESET REPLICA ALL FOR CHANNEL 'ch4_1';
[connection server4]
DROP TABLE test.t2;
include/group_replication_end.inc
