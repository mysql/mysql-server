include/group_replication.inc [rpl_server_count=3]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]
#
# Create a table for testing on server 1
#
[connection server1]
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;
include/rpl_sync.inc
[connection server2]
include/assert.inc [Server 2 has 4 transaction belonging to the group]
[connection server3]
include/assert.inc [Server 3 has 4 transaction belonging to the group]
#
# Step 1: Block the applier on server 2.
#
[connection server2]
SET @@GLOBAL.DEBUG='+d,block_applier_updates';
#
# Step 2: Insert some transaction and remove server 3
#
[connection server1]
INSERT INTO t1 VALUES (1);
INSERT INTO t1 VALUES (2);
include/sync_slave_sql_with_master.inc
include/assert.inc [Server 3 has 6 transaction belonging to the group]
include/stop_group_replication.inc
#
# Step 3: Insert more transactions.
# Assert that server 2 applied none
#
[connection server1]
INSERT INTO t1 VALUES (3);
INSERT INTO t1 VALUES (4);
[connection server2]
include/assert.inc [Server 2 has only 4 applied transactions.]
#
# Step 4: Remove server 1
#
[connection server1]
include/stop_group_replication.inc
#
# Step 5: Try add server 3 back to the group.
# Server 3 has more executed GTIDs, but server 2 has also retrieved GTIDs.
#
[connection server2]
include/assert.inc [Server 2 has only 4 applied transactions.]
[connection server3]
include/assert.inc [Server 3 has 6 applied transactions.]
SET GLOBAL group_replication_group_name= "3d4bc080-ec58-11e5-a837-0800200c9a66";
START GROUP_REPLICATION;
# Resume server 2 applier
[connection server2]
SET DEBUG_SYNC = "now WAIT_FOR applier_read_blocked";
SET @@GLOBAL.DEBUG='-d,block_applier_updates';
SET DEBUG_SYNC = "now SIGNAL resume_applier_read";
[connection server3]
include/gr_wait_for_member_state.inc
#
# Step 6: Cleanup
#
[connection server2]
SET DEBUG_SYNC= 'RESET';
[connection server1]
include/start_group_replication.inc
DROP TABLE t1;
include/group_replication_end.inc
