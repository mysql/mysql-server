
#########################################################################
# 0) Setup group of 2 members (M1 and M2) but only start GR on M2.
#########################################################################

include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]
[connection server1]
SET sql_log_bin = 0;
CREATE TABLE t1 (a INT PRIMARY KEY);
INSERT INTO t1 VALUES (1);
SET sql_log_bin = 1;
[connection server2]
include/start_and_bootstrap_group_replication.inc
[connection server1]
SET sql_log_bin = 0;
call mtr.add_suppression("read failed");
call mtr.add_suppression("Slave SQL for channel 'group_replication_recovery': Error 'Table 't1'*");
call mtr.add_suppression("Slave SQL for channel 'group_replication_recovery': Worker [0-9] failed executing transaction*");
call mtr.add_suppression("Slave SQL for channel 'group_replication_recovery': ... The slave coordinator and worker threads are stopped,*");
call mtr.add_suppression("Slave: Table 't1' already exists Error_code:*");
call mtr.add_suppression("Maximum number of retries when trying to connect to a donor reached. Aborting group replication incremental recovery.");
call mtr.add_suppression("Fatal error during the incremental recovery process of Group Replication. The server will leave the group.");
call mtr.add_suppression("The server was automatically set into read only mode after an error was detected.");
call mtr.add_suppression("Skipping leave operation: concurrent attempt to leave the group is on-going.");
call mtr.add_suppression("The plugin encountered a critical error and will abort: Fatal error in the recovery module of Group Replication.");
call mtr.add_suppression("Error while starting the group replication incremental recovery receiver/applier threads");
SET sql_log_bin = 1;

#########################################################################
# 1) Force error during the catch-up phase of M1.
#########################################################################

[connection server2]
CREATE TABLE t1 (a INT PRIMARY KEY);
[connection server1]
include/start_group_replication.inc

#########################################################################
# 1.1) Verify that M1 goes into ERROR state and to super_read_only mode.
#########################################################################

include/gr_wait_for_member_state.inc
[connection server1]
include/assert.inc [super_read_only should be enabled]
[connection server2]
include/rpl_gr_wait_for_number_of_members.inc

#########################################################################
# 2) Set group_replication_exit_state_action to ABORT_SERVER on M1.
#########################################################################

[connection server1]
include/stop_group_replication.inc
SET @@GLOBAL.group_replication_exit_state_action = ABORT_SERVER;

#########################################################################
# 3) Force another error during the catch-up phase of M1.
#########################################################################

include/start_group_replication.inc

#########################################################################
# 3.1) Verify that M1 aborted.
#########################################################################

[connection server2]
include/rpl_gr_wait_for_number_of_members.inc
include/assert.inc [Member 1 should have aborted]

#########################################################################
# 4) Relaunch M1 and join the group.
#########################################################################

[connection server1]
include/rpl_reconnect.inc
[connection server1]
SET SESSION sql_log_bin= 0;
DROP TABLE t1;
SET SESSION sql_log_bin= 1;
RESET MASTER;
SET @@global.group_replication_group_seeds="GROUP_SEEDS_SERVER1";
SET @@global.group_replication_local_address="LOCAL_ADDRESS_SERVER1";
include/start_group_replication.inc
include/rpl_gr_wait_for_number_of_members.inc

#########################################################################
# 5) Cleanup.
#########################################################################

DROP TABLE t1;
include/group_replication_end.inc
