include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]

# 1. With both the members ONLINE. On M1 create a table
[connection server1]
CREATE TABLE test.t1 (a INT PRIMARY KEY);
include/rpl_sync.inc

# 2. Set a DEBUG point so transactions hang at the before commit hook on M2
#    Execute a transaction on M1
[connection server2]
SET @debug_save= @@GLOBAL.DEBUG;
SET @@GLOBAL.DEBUG='+d,group_replication_before_commit_hook_wait';
[connection server1]
INSERT INTO t1 VALUES (1);
[connection server2]

# 3. Try to stop the GR applier thread on M2, it should block.
STOP SLAVE SQL_THREAD FOR CHANNEL "group_replication_applier";;
[connection server_2]

# 4. Signal to continue_commit. The stop shall continue.
SET DEBUG_SYNC='now SIGNAL continue_commit';
SET @@GLOBAL.DEBUG= @debug_save;
[connection server2]

# 5. Cleanup
include/gr_start_applier_sql_thread.inc
START SLAVE SQL_THREAD FOR CHANNEL "group_replication_applier";
DROP TABLE t1;
include/group_replication_end.inc
