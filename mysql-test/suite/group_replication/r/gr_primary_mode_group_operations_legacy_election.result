include/group_replication.inc [rpl_server_count=3]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]

# 1. Bootstrap group replication on server1 with 8.0.12 version.
set session sql_log_bin=0;
call mtr.add_suppression("The function 'group_replication_switch_to_multi_primary_mode' failed. The group has a member with a version that does not support group coordinated operations.");
set session sql_log_bin=1;
SET @debug1_save= @@GLOBAL.DEBUG;
SET @@GLOBAL.DEBUG= '+d,group_replication_legacy_election_version';
include/start_and_bootstrap_group_replication.inc

# 2. Configure server2 with 8.0.12 version, and start group replication
[connection server2]
set session sql_log_bin=0;
call mtr.add_suppression("Error while executing a group configuration operation: The group has a member with a version that does not support group coordinated operations.");
set session sql_log_bin=1;
SET @debug2_save= @@GLOBAL.DEBUG;
SET @@GLOBAL.DEBUG= '+d,group_replication_legacy_election_version';
include/start_group_replication.inc

# 3. Start group replication on server3 with a higher weight
[connection server3]
SET GLOBAL group_replication_member_weight= 90;
set session sql_log_bin=0;
call mtr.add_suppression("Member version is read compatible with the group.");
set session sql_log_bin=1;
include/start_group_replication.inc

# 4. Stop group replication on server1 to force election of a new primary
[connection server1]
include/stop_group_replication.inc

# 5. Check server3 is the primary and server2 the secondary
[connection server3]
include/gr_assert_primary_member.inc
[connection server2]
include/gr_assert_secondary_member.inc

# 6. Increase the weight on server2
SET GLOBAL group_replication_member_weight= 95;

# 7. Start group replication on server1
[connection server1]
include/start_group_replication.inc

# 8. Stop group replication on server3 to force election of a new primary
[connection server3]
include/stop_group_replication.inc

# 9. Check server2 is the primary and server1 the secondary
[connection server2]
include/gr_assert_primary_member.inc
[connection server1]
include/gr_assert_secondary_member.inc

# 10. Check the messages logged were for legacy elections.
include/assert_grep.inc [Found the messages for two elections]

# 11. Check also that an action cannot be executed
#     when a member with an older version is present.
SELECT group_replication_switch_to_multi_primary_mode();
ERROR HY000: The function 'group_replication_switch_to_multi_primary_mode' failed. The group has a member with a version that does not support group coordinated operations.

# 12. Cleanup
SET @@GLOBAL.DEBUG= @debug1_save;
[connection server2]
include/stop_group_replication.inc
SET @@GLOBAL.DEBUG= @debug2_save;
SET @@GLOBAL.group_replication_member_weight= DEFAULT;
[connection server3]
SET @@GLOBAL.group_replication_member_weight= DEFAULT;
include/group_replication_end.inc
