include/group_replication.inc [rpl_server_count=3]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]
#
# Start a group with 2 members and some data but no replication user
#
include/start_and_bootstrap_group_replication.inc
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);
#
# Add some extra data on server 2 and then start group replication
# Create a replication user so recovery can connect
#
include/start_group_replication.inc
#
# On member 3:
# Set the number of recovery retries and check its value
# Set the recovery reconnection interval and check its value
#
SET SESSION sql_log_bin= 0;
call mtr.add_suppression("There was an error when connecting to the donor*");
call mtr.add_suppression("Slave I/O for channel 'group_replication_recovery': Master command COM_REGISTER_SLAVE failed*");
call mtr.add_suppression("Slave I/O thread couldn't register on master*");
call mtr.add_suppression("For details please check performance_schema.replication_connection_status table and error log messages of Slave I/O for channel group_replication_recovery.");
SET SESSION sql_log_bin= 1;
SET @debug_save_rec_int= @@GLOBAL.group_replication_recovery_reconnect_interval;
SET @debug_save_retries= @@GLOBAL.group_replication_recovery_retry_count;
SET GLOBAL group_replication_recovery_reconnect_interval= NULL;
ERROR 42000: Incorrect argument type to variable 'group_replication_recovery_reconnect_interval'
SET GLOBAL group_replication_recovery_reconnect_interval= "a";
ERROR 42000: Incorrect argument type to variable 'group_replication_recovery_reconnect_interval'
SET GLOBAL group_replication_recovery_reconnect_interval= 1.2;
ERROR 42000: Incorrect argument type to variable 'group_replication_recovery_reconnect_interval'
SET GLOBAL group_replication_recovery_retry_count= NULL;
ERROR 42000: Incorrect argument type to variable 'group_replication_recovery_retry_count'
SET GLOBAL group_replication_recovery_retry_count= "a";
ERROR 42000: Incorrect argument type to variable 'group_replication_recovery_retry_count'
SET GLOBAL group_replication_recovery_retry_count= 1.2;
ERROR 42000: Incorrect argument type to variable 'group_replication_recovery_retry_count'
SET GLOBAL group_replication_recovery_reconnect_interval= -1;
include/assert.inc [The value for group_replication_recovery_reconnect_interval should be 0]
SET GLOBAL group_replication_recovery_reconnect_interval= 31536001;
include/assert.inc [The value for group_replication_recovery_reconnect_interval should be 31536000]
SET GLOBAL group_replication_recovery_retry_count= -1;
include/assert.inc [The value for group_replication_recovery_retry_count should be 0]
SET GLOBAL group_replication_recovery_retry_count= 31536001;
include/assert.inc [The value for group_replication_recovery_retry_count should be 31536000]
SET GLOBAL group_replication_recovery_retry_count= 3;
include/assert.inc [The value of the recovery retry count should be 3]
SET GLOBAL group_replication_recovery_reconnect_interval= 60;
include/assert.inc [The value of the recovery reconnection interval should be 60 sec]
#
# On member 3:
# Set the recovery user and pass so it can't connect to any of the donors
# After 10 second it should still be recovering, as the process is sleeping
#
SET SESSION sql_log_bin= 0;
CREATE USER "recovery_user" IDENTIFIED BY "recovery_password";
GRANT GROUP_REPLICATION_STREAM ON *.* TO "recovery_user"@'%';;
FLUSH PRIVILEGES;
SET SESSION sql_log_bin= 1;
SET SESSION sql_log_bin= 0;
CREATE USER "recovery_user" IDENTIFIED BY "recovery_password";
GRANT GROUP_REPLICATION_STREAM ON *.* TO "recovery_user"@'%';;
FLUSH PRIVILEGES;
SET SESSION sql_log_bin= 1;
SET SESSION sql_log_bin= 0;
CREATE USER "recovery_user" IDENTIFIED BY "recovery_password";
GRANT GROUP_REPLICATION_STREAM ON *.* TO "recovery_user"@'%';;
FLUSH PRIVILEGES;
SET SESSION sql_log_bin= 1;
CHANGE REPLICATION SOURCE TO SOURCE_USER="recovery_user", SOURCE_PASSWORD="recovery_password" FOR CHANNEL 'group_replication_recovery';
SET GLOBAL group_replication_group_name= "c827dcd0-2646-11e5-867f-0800200c9a66";;
START GROUP_REPLICATION;
include/gr_wait_for_member_state.inc
#
# Create the recovery user on server 1 and server 2
# The joiner should now connect to server 1 or 2 when failing over.
#
SET SESSION sql_log_bin= 0;
GRANT REPLICATION SLAVE ON *.* TO "recovery_user";
FLUSH PRIVILEGES;
SET SESSION sql_log_bin= 1;
SET SESSION sql_log_bin= 0;
GRANT REPLICATION SLAVE ON *.* TO "recovery_user";
FLUSH PRIVILEGES;
SET SESSION sql_log_bin= 1;
# After a minute, the node should failover on the last try and recover
include/gr_wait_for_member_state.inc
include/assert.inc [On the recovered member, the table should exist and have 1 elements]
#
# Cleaning up
#
SET @@GLOBAL.group_replication_recovery_reconnect_interval= @debug_save_rec_int;
SET @@GLOBAL.group_replication_recovery_retry_count= @debug_save_retries;
SET SESSION sql_log_bin= 0;
DROP USER "recovery_user";
SET SESSION sql_log_bin= 1;
DROP TABLE t1;
SET SESSION sql_log_bin= 0;
DROP USER "recovery_user";
SET SESSION sql_log_bin= 1;
SET SESSION sql_log_bin= 0;
DROP USER "recovery_user";
SET SESSION sql_log_bin= 1;
include/group_replication_end.inc
