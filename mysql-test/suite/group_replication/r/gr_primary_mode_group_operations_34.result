include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]

# 1. Use the debug point "group_replication_block_group_action_stop" on server 1
SET @@GLOBAL.DEBUG= '+d,group_replication_block_group_action_stop';

# 2. Start a change to single primary mode on server 1
SELECT group_replication_switch_to_single_primary_mode("MEMBER1_UUID");

# 3. Wait for the stage to be: Primary Switch: waiting for operation to
#    complete on all members
[connection server2]

# 4. Kill the query
[connection server_1]
SET DEBUG_SYNC = "now WAIT_FOR signal.action_stopping";
KILL QUERY CONNECTION_ID;

# 5. Unblock the debug point with "signal.action_stop_continue"
SET DEBUG_SYNC= "now SIGNAL signal.action_stop_continue";

# 6. Check the action returns and it says: Despite being killed, the
#    operation still completed successfully.
[connection server1]
group_replication_switch_to_single_primary_mode("MEMBER1_UUID")
Mode switched to single-primary successfully. Despite being killed, the operation was still completed.
include/gr_assert_primary_member.inc
[connection server2]
include/gr_assert_secondary_member.inc

# 7. Cleanup
[connection server1]
SET @@GLOBAL.DEBUG= '-d,group_replication_block_group_action_stop';
include/group_replication_end.inc
