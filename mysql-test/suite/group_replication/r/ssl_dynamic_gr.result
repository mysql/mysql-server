include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]
server1
################## FR8: GR do not follow SSL changes
# Save the defaults
SET @orig_ssl_ca= @@global.ssl_ca;
SET @orig_ssl_cert= @@global.ssl_cert;
SET @orig_ssl_key= @@global.ssl_key;
SET @orig_group_replication_recovery_ssl_ca= @@global.group_replication_recovery_ssl_ca;
SET @orig_group_replication_recovery_ssl_cert= @@global.group_replication_recovery_ssl_cert;
SET @orig_group_replication_recovery_ssl_key= @@global.group_replication_recovery_ssl_key;
# setting new values for ssl_cert, ssl_key and ssl_ca
SET GLOBAL ssl_cert = "MYSQL_TEST_DIR/std_data/server-cert-sha512.pem";
SET GLOBAL ssl_key = "MYSQL_TEST_DIR/std_data/server-key-sha512.pem";
SET GLOBAL ssl_ca = "MYSQL_TEST_DIR/std_data/ca-sha512.pem";
ALTER INSTANCE RELOAD TLS;
# Check that GR variables are not altered
SELECT @@global.group_replication_recovery_ssl_ca = @orig_group_replication_recovery_ssl_ca,
@@global.group_replication_recovery_ssl_cert = @orig_group_replication_recovery_ssl_cert,
@@global.group_replication_recovery_ssl_key = @orig_group_replication_recovery_ssl_key;
@@global.group_replication_recovery_ssl_ca = @orig_group_replication_recovery_ssl_ca	1
@@global.group_replication_recovery_ssl_cert = @orig_group_replication_recovery_ssl_cert	1
@@global.group_replication_recovery_ssl_key = @orig_group_replication_recovery_ssl_key	1
# cleanup
SET GLOBAL ssl_cert = @orig_ssl_cert;
SET GLOBAL ssl_key = @orig_ssl_key;
SET GLOBAL ssl_ca = @orig_ssl_ca;
ALTER INSTANCE RELOAD TLS;
include/group_replication_end.inc
