include/group_replication.inc [rpl_server_count=3]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]

# 1. Start GR on M1(primary) and M2(secondary)

[connection server1]
include/start_and_bootstrap_group_replication.inc
[connection server2]
include/start_group_replication.inc
[connection server3]
SET SESSION sql_log_bin = 0;
call mtr.add_suppression("The master's UUID has changed, although this should not happen unless you have changed it manually. The old UUID was.*");
call mtr.add_suppression("The source.*for channel.*has joined the group.*and so added its entry into replication_asynchronous_connection_failover table");
call mtr.add_suppression("The group .* for the channel .* has been removed, and so removed its entry from replication_asynchronous_connection_failover_managed and all the group members from replication_asynchronous_connection_failover table.");
call mtr.add_suppression("The group .* for the channel .* has been added, and so added its entry in replication_asynchronous_connection_failover_managed and source to replication_asynchronous_connection_failover table.");
SET SESSION sql_log_bin = 1;

# 2. Add asynchronous connection failover servers and
#    verify that they are inserted successfully in
#    performance_schema.replication_asynchronous_connection_failover.

[connection server1]
[connection server3]
SELECT asynchronous_connection_failover_add_managed('ch1_3', 'GroupReplication', 'GROUP_NAME', '127.0.0.1', SERVER_MYPORT_1, '', 70, 60);;
asynchronous_connection_failover_add_managed('ch1_3', 'GroupReplication', 'GROUP_NAME', '127.0.0.1', SERVER_MYPORT_1, '', 70, 60)
The UDF asynchronous_connection_failover_add_managed() executed successfully.
include/assert.inc ['There is one row in performance_schema.replication_asynchronous_connection_failover']

# 3. Create and start new channel ch1_3: M3(replica), M1(source)
#    and verify channel ch1_3 IO and SQL THREADS are ON.

[connection server3]
CHANGE REPLICATION SOURCE TO SOURCE_HOST='127.0.0.1', SOURCE_USER='root', SOURCE_AUTO_POSITION=1, SOURCE_CONNECTION_AUTO_FAILOVER=1, SOURCE_PORT=SERVER_1_PORT, SOURCE_CONNECT_RETRY=1, SOURCE_RETRY_COUNT=2 for channel 'ch1_3';
Warnings:
Note	1759	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	1760	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
include/start_slave.inc [FOR CHANNEL 'ch1_3']
include/assert.inc [Verify channel ch1_3 IO_THREAD is ON]
include/assert.inc [Verify channel ch1_3 SQL_THREAD is ON]

# 4. Verify 2 senders are added automatically to
#    replication_asynchronous_connection_failover table.

[connection server3]
include/assert.inc ['Connected to server1 now.']

# 5. Make M2 primary.

[connection server1]
SELECT group_replication_set_as_primary("MEMBER2_UUID");
group_replication_set_as_primary("MEMBER2_UUID")
Primary server switched to: MEMBER2_UUID

# 6. Verify M2 is new source with higher weight in
#    performance_schema.replication_asynchronous_connection_failover

[connection server3]

# 7. Switch to multi primary mode.

[connection server2]
SELECT group_replication_switch_to_multi_primary_mode();
group_replication_switch_to_multi_primary_mode()
Mode switched to multi-primary successfully.

# 8. Verify M1 and M2 both have same primary_weight.

[connection server3]

# 9. Switch to single primary mode with M1 as primary.

[connection server2]
SELECT group_replication_switch_to_single_primary_mode("MEMBER1_UUID");
group_replication_switch_to_single_primary_mode("MEMBER1_UUID")
Mode switched to single-primary successfully.

# 10. Verify M1 has higher weight and M2 has lower weight.
#     Verify M1 is new source.

[connection server3]

# 11. Cleanup.

[connection server3]
include/stop_slave.inc [FOR CHANNEL 'ch1_3']
include/rpl_reset_slave.inc
SELECT asynchronous_connection_failover_delete_managed('ch1_3', 'GROUP_NAME');
asynchronous_connection_failover_delete_managed('ch1_3', 'GROUP_NAME')
The UDF asynchronous_connection_failover_delete_managed() executed successfully.
CHANGE REPLICATION SOURCE TO SOURCE_HOST='127.0.0.1', SOURCE_USER='root', SOURCE_PORT=SERVER_1_PORT FOR CHANNEL 'ch1_3';
Warnings:
Note	1759	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	1760	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
include/group_replication_end.inc
