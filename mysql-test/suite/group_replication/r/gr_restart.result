############################################################
# 1. Start servers, on which server2 has applier stopped so
# that all remote transactions are only queued on relay log.
# Execute some transactions on server1.
include/start_and_bootstrap_group_replication.inc
set session sql_log_bin=0;
call mtr.add_suppression("The member lost contact with a majority of the members in the group. Until the network is restored.*");
call mtr.add_suppression("The member resumed contact with a majority of the members in the group.*");
set session sql_log_bin=1;
SET @debug_saved= @@GLOBAL.DEBUG;
include/start_group_replication.inc
STOP SLAVE SQL_THREAD FOR CHANNEL "group_replication_applier";
include/rpl_gr_wait_for_number_of_members.inc
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);

#####################################################################
# 2. Restart server2 and verify that certifier sequence number is set
# from relay log certified transactions and view change transactions
# restart:--group_replication_local_address=GROUP_REPLICATION_LOCAL_ADDRESS --group_replication_group_seeds=GROUP_REPLICATION_GROUP_SEEDS
SET @@GLOBAL.DEBUG= '+d,certifier_assert_next_seqno_equal_5';
include/start_group_replication.inc
SET @@GLOBAL.DEBUG= @debug_saved;
############################################################
# 3. Insert must fail with duplicate entry.
INSERT INTO t1 VALUES (1);
ERROR 23000: Duplicate entry '1' for key 'PRIMARY'
INSERT INTO t1 VALUES (2);

############################################################
# 4. Kill server2 again and verify that certifier sequence
# number is set from GTID_EXECUTED.
# Kill and restart:--group_replication_local_address=GROUP_REPLICATION_LOCAL_ADDRESS --group_replication_group_seeds=GROUP_REPLICATION_GROUP_SEEDS
[connection server2]
[connection server1]
include/gr_wait_for_member_state.inc
include/rpl_gr_wait_for_number_of_members.inc
[connection server2]
SET @@GLOBAL.DEBUG= '+d,certifier_assert_next_seqno_equal_7';
include/start_group_replication.inc
SET @@GLOBAL.DEBUG= @debug_saved;

############################################################
# 5. Shutdown.
include/rpl_gr_wait_for_number_of_members.inc
DROP TABLE t1;
include/sync_slave_sql_with_master.inc
include/stop_group_replication.inc
RESET SLAVE ALL FOR CHANNEL "group_replication_applier";
RESET MASTER;
include/stop_group_replication.inc
RESET SLAVE ALL FOR CHANNEL "group_replication_applier";
RESET MASTER;
