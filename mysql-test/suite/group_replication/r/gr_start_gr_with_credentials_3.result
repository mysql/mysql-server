include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]

# 1. Bootstrap M1. And create new users.
[connection server1]
INSTALL PLUGIN test_plugin_server SONAME 'PLUGIN_AUTH';
include/start_and_bootstrap_group_replication.inc
SET SQL_LOG_BIN=0;
CREATE USER 'regular_user_p' IDENTIFIED BY '012345678901234567890123456789ab';
CREATE USER 'regular_user_wp' IDENTIFIED BY '';
CREATE USER 'plug_user_p' IDENTIFIED WITH 'test_plugin_server' AS 'proxy_user_p';
CREATE USER 'plug_user_wp' IDENTIFIED WITH 'test_plugin_server' AS 'proxy_user_wp';
CREATE USER 'proxy_user_p' IDENTIFIED BY 'password';
CREATE USER 'proxy_user_wp' IDENTIFIED BY '';
GRANT REPLICATION SLAVE ON *.* TO "regular_user_p";
GRANT REPLICATION SLAVE ON *.* TO "regular_user_wp";
GRANT ALL PRIVILEGES ON *.* TO 'proxy_user_p';
GRANT ALL PRIVILEGES ON *.* TO 'proxy_user_wp';
GRANT PROXY ON 'proxy_user_p' to 'plug_user_p';
GRANT PROXY ON 'proxy_user_wp' to 'plug_user_wp';
GRANT REPLICATION SLAVE ON *.* TO 'plug_user_p';
GRANT REPLICATION SLAVE ON *.* TO 'plug_user_wp';
SET SQL_LOG_BIN=1;

# 2. Reset recovery interval to 1 and count to 2 for M2.
[connection server2]
INSTALL PLUGIN test_plugin_server SONAME 'PLUGIN_AUTH';
SET @saved_group_replication_recovery_reconnect_interval = @@GLOBAL.group_replication_recovery_reconnect_interval;
SET @saved_gr_recovery_retry_count = @@GLOBAL.group_replication_recovery_retry_count;
SET @old_log_output= @@log_output;
SET GLOBAL log_output= 'TABLE,FILE';
SET GLOBAL group_replication_recovery_reconnect_interval= 1;
SET GLOBAL group_replication_recovery_retry_count= 2;
SET GLOBAL group_replication_group_name= "GROUP_REPLICATION_GROUP_NAME";
RESET SLAVE ALL FOR CHANNEL 'group_replication_recovery';
Warnings:
Warning	1287	'RESET SLAVE' is deprecated and will be removed in a future release. Please use RESET REPLICA instead

# 3. Test empty USER is not accepted by START GR.
#    Test username displayed is correct in ps table.
SET GLOBAL super_read_only= FALSE;
SET SQL_LOG_BIN=0;
TRUNCATE mysql.general_log;
SET SQL_LOG_BIN=1;
START GROUP_REPLICATION USER='';
ERROR HY000: The START GROUP_REPLICATION command failed since the username provided for recovery channel is empty.
include/assert.inc [Command is not logged.]
SET GLOBAL super_read_only= FALSE;
SET SQL_LOG_BIN=0;
TRUNCATE mysql.general_log;
SET SQL_LOG_BIN=1;
START GROUP_REPLICATION USER;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1
include/assert.inc [Command is not logged.]

# 3. Test password limits.
SET GLOBAL super_read_only= FALSE;
SET SQL_LOG_BIN=0;
TRUNCATE mysql.general_log;
SET SQL_LOG_BIN=1;
START GROUP_REPLICATION USER='regular_user_p' , PASSWORD='012345678901234567890123456789abc';
ERROR HY000: The START GROUP_REPLICATION command failed since the password provided for the recovery channel exceeds the maximum length of 32 characters.
include/assert.inc [Command is not logged.]
SET GLOBAL super_read_only= FALSE;
SET SQL_LOG_BIN=0;
TRUNCATE mysql.general_log;
SET SQL_LOG_BIN=1;
[connection server1]
SET @@GLOBAL.DEBUG='+d,block_applier_updates';
[connection server2]
START GROUP_REPLICATION USER='regular_user_p' , PASSWORD='012345678901234567890123456789ab';
include/assert.inc [User name displayed is of supplied in command.]
[connection server1]
SET DEBUG_SYNC = "now WAIT_FOR applier_read_blocked";
SET @@GLOBAL.DEBUG='-d,block_applier_updates';
SET DEBUG_SYNC = "now SIGNAL resume_applier_read";
[connection server2]
include/gr_wait_for_member_state.inc
[connection server1]
SET DEBUG_SYNC= 'RESET';
[connection server2]
include/assert.inc [User name displayed is empty.]
include/stop_group_replication.inc
include/assert.inc [Password is not logged.]
include/assert.inc [Password is logged as secret.]

# 4. Test credentials without USER are not accepted.
SET GLOBAL super_read_only= FALSE;
SET SQL_LOG_BIN=0;
TRUNCATE mysql.general_log;
SET SQL_LOG_BIN=1;
START GROUP_REPLICATION PASSWORD='wrong';
ERROR HY000: The START GROUP_REPLICATION command failed since the USER option was not provided with PASSWORD for recovery channel.
include/assert.inc [Password is not logged.]
include/assert.inc [Password is logged as secret.]
SET GLOBAL super_read_only= FALSE;
SET SQL_LOG_BIN=0;
TRUNCATE mysql.general_log;
SET SQL_LOG_BIN=1;
START GROUP_REPLICATION USER='',PASSWORD='wrong';
ERROR HY000: The START GROUP_REPLICATION command failed since the username provided for recovery channel is empty.
include/assert.inc [Command is not logged.]

# 5. Test DEFAULT_AUTH without USER.
#    Credentials are not set in CHANGE MASTER so START GR fails.
SET GLOBAL super_read_only= FALSE;
SET SQL_LOG_BIN=0;
TRUNCATE mysql.general_log;
SET SQL_LOG_BIN=1;
START GROUP_REPLICATION DEFAULT_AUTH='auth_test_plugin';
include/gr_wait_for_member_state.inc
include/stop_group_replication.inc
include/assert.inc [User is not logged.]
include/assert.inc [Password is not logged.]
include/assert.inc [Quote is not present before DEFAULT_AUTH.]

# 6. Set credentials in CHANGE MASTER.
#    Pass only DEFAULT_AUTH in START GR.
#    Credentials are picked from CHANGE MASTER.
CHANGE REPLICATION SOURCE TO SOURCE_USER='plug_user_p' , SOURCE_PASSWORD='proxy_user_p' FOR CHANNEL 'group_replication_recovery';
Warnings:
Note	1759	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	1760	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
SET GLOBAL super_read_only= FALSE;
SET SQL_LOG_BIN=0;
TRUNCATE mysql.general_log;
SET SQL_LOG_BIN=1;
START GROUP_REPLICATION DEFAULT_AUTH='auth_test_plugin';
include/gr_wait_for_member_state.inc
include/stop_group_replication.inc
include/assert.inc [User is not logged.]
include/assert.inc [Password is not logged.]
include/assert.inc [Quote is not present before DEFAULT_AUTH.]
START GROUP_REPLICATION DEFAULT_AUTH='wrong';
include/gr_wait_for_member_state.inc
include/stop_group_replication.inc

# 7. Cleanup.
CHANGE REPLICATION SOURCE TO SOURCE_USER='root' , SOURCE_PASSWORD='' FOR CHANNEL 'group_replication_recovery';
Warnings:
Note	1759	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	1760	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
SET SESSION sql_log_bin = 0;
call mtr.add_suppression("Slave I/O for channel 'group_replication_recovery': Fatal error: Invalid .* username when attempting to connect to the master server.*");
call mtr.add_suppression("There was an error when connecting to the donor server. Please check that group_replication_recovery channel credentials and all MEMBER_HOST column values of performance_schema.replication_group_members table are correct and DNS resolvable.");
call mtr.add_suppression("For details please check performance_schema.replication_connection_status table and error log messages of Slave I/O for channel group_replication_recovery.");
call mtr.add_suppression("Maximum number of retries when trying to connect to a donor reached. Aborting group replication incremental recovery.");
call mtr.add_suppression("Fatal error during the incremental recovery process of Group Replication. The server will leave the group.");
call mtr.add_suppression("The server was automatically set into read only mode after an error was detected.");
call mtr.add_suppression("Skipping leave operation: concurrent attempt to leave the group is on-going.");
call mtr.add_suppression("The server was automatically set into read only mode after an error was detected.");
SET SESSION sql_log_bin = 1;
SET @@GLOBAL.group_replication_recovery_reconnect_interval = @saved_group_replication_recovery_reconnect_interval;
SET @@GLOBAL.group_replication_recovery_retry_count = @saved_gr_recovery_retry_count;
SET GLOBAL log_output= @old_log_output;
UNINSTALL PLUGIN test_plugin_server;
[connection server1]
SET SQL_LOG_BIN=0;
DROP USER 'regular_user_p';
DROP USER 'regular_user_wp';
DROP USER 'plug_user_p';
DROP USER 'plug_user_wp';
DROP USER 'proxy_user_p';
DROP USER 'proxy_user_wp';
SET SQL_LOG_BIN=1;
UNINSTALL PLUGIN test_plugin_server;
include/group_replication_end.inc
[connection server2]
TRUNCATE mysql.general_log;
