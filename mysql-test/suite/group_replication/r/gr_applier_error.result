include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]
#
# Step-1: Initial setup (create table on both servers)
#
[connection server_1]
CREATE TABLE t1(i INT PRIMARY KEY);
include/rpl_sync.inc
#
# Step-2: Insert a tuple on server2 directly without writing
#         into binlog.
#
[connection server_2]
SET sql_log_bin=0;
INSERT INTO t1 values (1);
#
# Step-3: Add error suppressions which are required
#         for the test to pass.
#
CALL mtr.add_suppression("Could not execute Write_rows event on table test.t1");
CALL mtr.add_suppression("The applier thread execution was aborted. Unable to process more transactions, this member will now leave the group.");
CALL mtr.add_suppression("Fatal error during execution on the Applier process of Group Replication. The server will now leave the group.");
CALL mtr.add_suppression("The server was automatically set into read only mode after an error was detected.");
CALL mtr.add_suppression("Skipping leave operation: concurrent attempt to leave the group is on-going.");
CALL mtr.add_suppression("The slave coordinator and worker threads are stopped");
SET sql_log_bin=1;
#
# Step-4: Insert a tuple on server1
#
[connection server_1]
INSERT INTO t1 VALUES (1);
#
# Step-5: sync will fail because the same tuple exists on server2
#         (insert on server2 at step-2).
#
[connection server_2]
include/gr_wait_for_member_state.inc
#
# Step-6: Grep for the expected error in server log.
#
include/assert_grep.inc [Found the expected error in group_replication_applier channel.]
#
# Step-7: Cleanup (drop table on both servers)
#
[connection server_1]
DROP TABLE t1;
# Step-7.2: Server_2 entered into 'read_only' mode due to the above error.
#           Sync the above 'drop table' wont work.
#           Reset the slave and 'DROP' the table manually.
[connection server_2]
include/stop_group_replication.inc
RESET SLAVE ALL FOR CHANNEL "group_replication_applier";
DROP TABLE t1;
include/group_replication_end.inc
