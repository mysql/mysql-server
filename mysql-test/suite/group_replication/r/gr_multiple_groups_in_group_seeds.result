include/group_replication.inc [rpl_server_count=3]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]
#
# 1. Bootstrap start GR on M1 and M2.
#
[connection server1]
include/start_and_bootstrap_group_replication.inc
set session sql_log_bin=0;
call mtr.add_suppression("The request to add .*:[0-9]* to the group has been rejected because it is aimed at another group");
call mtr.add_suppression("The request to remove .*:[0-9]* from the group has been rejected because it is aimed at another group");
set session sql_log_bin=1;
[connection server2]
include/start_and_bootstrap_group_replication.inc
set session sql_log_bin=0;
call mtr.add_suppression("The request to add .*:[0-9]* to the group has been rejected because it is aimed at another group");
call mtr.add_suppression("The request to remove .*:[0-9]* from the group has been rejected because it is aimed at another group");
set session sql_log_bin=1;
#
# GROUP#1 is b0000000-7fb8-11e6-9f35-ac56a84b7f00
# GROUP#2 is b1111111-7fb8-11e6-9f35-ac56a84b7f11
#
#
# 2. Test new server (M3) joining the group.
# a) Have group_seeds as 'M1_LA, M2_LA' and group_name: GROUP#1.
#    Expect SUCCESS.
[connection server3]
SET GLOBAL GROUP_REPLICATION_GROUP_SEEDS= "M1_LA, M2_LA";
SET GLOBAL GROUP_REPLICATION_GROUP_NAME= "b0000000-7fb8-11e6-9f35-ac56a84b7f00";
START GROUP_REPLICATION;
include/gr_wait_for_member_state.inc
include/assert.inc [b0000000-7fb8-11e6-9f35-ac56a84b7f00: There are two members in the group.]
include/stop_group_replication.inc
#
# b) Have group_seeds as 'M2_LA, M1_LA' and group_name: GROUP#1.
#    Expect SUCCESS.
#
SET GLOBAL GROUP_REPLICATION_GROUP_SEEDS= "M2_LA, M1_LA";
START GROUP_REPLICATION;
include/gr_wait_for_member_state.inc
include/assert.inc [b0000000-7fb8-11e6-9f35-ac56a84b7f00: There are two members in the group.]
include/stop_group_replication.inc
RESET MASTER;
#
# c) Have group_seeds as 'M1_LA, M2_LA' and group_name: GROUP#2.
#    Expect SUCCESS.
#
SET GLOBAL GROUP_REPLICATION_GROUP_SEEDS= "M1_LA, M2_LA";
SET GLOBAL GROUP_REPLICATION_GROUP_NAME= "b1111111-7fb8-11e6-9f35-ac56a84b7f11";
START GROUP_REPLICATION;
include/gr_wait_for_member_state.inc
include/assert.inc [b1111111-7fb8-11e6-9f35-ac56a84b7f11: There are two members in the group.]
include/stop_group_replication.inc
#
# d) Have group_seeds as 'M2_LA, M1_LA' and group_name: GROUP#2.
#    Expect SUCCESS.
#
SET GLOBAL GROUP_REPLICATION_GROUP_SEEDS= "M2_LA, M1_LA";
START GROUP_REPLICATION;
include/gr_wait_for_member_state.inc
include/assert.inc [b1111111-7fb8-11e6-9f35-ac56a84b7f11: There are two members in the group.]
#
# 3. Clean up.
#
set session sql_log_bin=0;
call mtr.add_suppression("read failed");
set session sql_log_bin=1;
include/stop_group_replication.inc
RESET MASTER;
[connection server2]
include/stop_group_replication.inc
RESET MASTER;
[connection server1]
include/stop_group_replication.inc
RESET MASTER;
include/group_replication_end.inc
