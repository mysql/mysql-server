include/group_replication.inc [rpl_server_count=3]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]

############################################################
# 1. Install clone plugin on server1.
[connection server1]
INSTALL PLUGIN clone SONAME 'CLONE_PLUGIN';

############################################################
# 2. Bootstrap server1 and add some data
include/start_and_bootstrap_group_replication.inc
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);
INSERT INTO t1 VALUES (2);

#################################################################
# 3. Install the clone plugin and start GR on server3
[connection server3]
INSTALL PLUGIN clone SONAME 'CLONE_PLUGIN';
include/start_group_replication.inc

#######################################################################
# 4. Restart server 2 with a monitoring process (mysqld_safe) if needed
[connection server2]
SET PERSIST group_replication_enforce_update_everywhere_checks= OFF;
SET PERSIST group_replication_single_primary_mode= ON;
include/spawn_monitoring_process.inc
############################################################
# 5. Install the clone plugin on server 2
#    Setup the server so group replication starts on boot
INSTALL PLUGIN clone SONAME 'CLONE_PLUGIN';

############################################################
# 6. Start group replication on server 2
#    Set a debug point so it blocks before clone.
SET GLOBAL group_replication_clone_threshold= 1;
SET @@GLOBAL.DEBUG='+d,gr_clone_process_before_execution';
START GROUP_REPLICATION;
SET DEBUG_SYNC = 'now WAIT_FOR signal.gr_clone_thd_paused';

############################################################
# 7. Stop the current primary member forcing an election
#    Check all states are correct
[connection server1]
include/stop_group_replication.inc
[connection server2]
include/rpl_gr_wait_for_number_of_members.inc
[connection server3]
include/rpl_gr_wait_for_number_of_members.inc
include/gr_assert_primary_member.inc

############################################################
# 8. Unblock clone.
#    Check everything is fine after restart
[connection server2]
SET DEBUG_SYNC = 'now SIGNAL signal.gr_clone_thd_continue';
SET @@GLOBAL.DEBUG = '-d,gr_clone_process_before_execution';
include/rpl_reconnect.inc
include/gr_wait_for_member_state.inc
include/assert.inc [Clone must be completed]

############################################################
# 9. Start the stopped server
#    Check data consistency
[connection server1]
include/start_group_replication.inc
include/diff_tables.inc [server1:test.t1, server2:test.t1, server3:test.t1]

############################################################
# 10. Cleanup
[connection server2]
SET DEBUG_SYNC = 'RESET';
SET GLOBAL group_replication_clone_threshold= 9223372036854775807;
RESET PERSIST IF EXISTS group_replication_enforce_update_everywhere_checks;
RESET PERSIST IF EXISTS group_replication_single_primary_mode;
RESET PERSIST IF EXISTS group_replication_group_name;
RESET PERSIST IF EXISTS group_replication_local_address;
RESET PERSIST IF EXISTS group_replication_group_seeds;
RESET PERSIST IF EXISTS group_replication_start_on_boot;
SET GLOBAL read_only= FALSE;
set session sql_log_bin=0;
call mtr.add_suppression("Due to the number of missing transactions being higher than the configured threshold of 1, this member will start distributed recovery using clone.");
call mtr.add_suppression("Plugin group_replication reported: 'Internal query:  CLONE INSTANCE FROM \"root\"@127.0.0.1:[0-9]+ IDENTIFIED BY \"\\*\\*\\*\\*\\*\" REQUIRE NO SSL; result in error. Error number: 1317'");
call mtr.add_suppression("There was an issue when cloning from another server: Error number: 1317 Error message: Query execution was interrupted'");
call mtr.add_suppression("Clone removing all user data for provisioning: Started");
call mtr.add_suppression("Clone removing all user data for provisioning: Finished");
set session sql_log_bin=1;
include/clean_monitoring_process.inc
include/group_replication_end.inc
