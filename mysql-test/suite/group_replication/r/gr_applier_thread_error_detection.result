include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]
#
# Create a table replicated to the group
#
[connection server1]
SET SESSION sql_log_bin= 0;
call mtr.add_suppression("Slave SQL for channel 'group_replication_applier': Could not execute Write_rows event on table test.t1;*");
call mtr.add_suppression("The applier thread execution was aborted. Unable to process more transactions, this member will now leave the group.");
call mtr.add_suppression("Slave SQL for channel 'group_replication_applier': Worker .* failed executing transaction .*; Could not execute Write_rows event on table test.t1; Duplicate entry '1' for key 't1.PRIMARY'.*");
call mtr.add_suppression("Slave SQL for channel 'group_replication_applier': ... The slave coordinator and worker threads are stopped.*");
call mtr.add_suppression("Fatal error during execution on the Applier process of Group Replication. The server will now leave the group.");
call mtr.add_suppression("The member is leaving a group without being on one");
call mtr.add_suppression("The server was automatically set into read only mode after an error was detected.");
call mtr.add_suppression("The member is already leaving or joining a group.");
call mtr.add_suppression("Error leaving the group");
call mtr.add_suppression("Skipping leave operation: concurrent attempt to leave the group is on-going.");
SET SESSION sql_log_bin= 1;
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;
include/rpl_sync.inc
#
# Insert a row on server 1 assuring it is not replicated
#
[connection server1]
SET SESSION sql_log_bin= 0;
INSERT INTO t1 VALUES (1);
SET SESSION sql_log_bin= 1;
#
# Insert the same row on server 2
#
[connection server2]
INSERT INTO t1 VALUES (1);
#
# Server 1 should error out and leave the group
# The member state should be ERROR
#
[connection server1]
include/gr_wait_for_member_state.inc
[connection server2]
include/rpl_gr_wait_for_number_of_members.inc
#
# After the stop, the state goes to OFFLINE
#
[connection server1]
include/stop_group_replication.inc
include/gr_wait_for_member_state.inc
#
# Clean
#
SET SESSION sql_log_bin= 0;
DELETE FROM t1 WHERE c1=1;
SET SESSION sql_log_bin= 1;
include/start_group_replication.inc
DROP TABLE t1;
include/group_replication_end.inc
