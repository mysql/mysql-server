include/have_replication_observers_example_plugin.inc
include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]

# 1. Load plugin replication observers example on server1
include/install_replication_observers_example.inc

# 2. Load plugin replication observers example on server2
[connection server2]
include/install_replication_observers_example.inc

# 3. Enable debug point that causes a failure on recv subscriber
# Adding debug point 'gr_message_service_fail_recv' to @@GLOBAL.debug

# 4. Execute UDF that will transmit tag and message over GR send service
SELECT group_replication_service_message_send("tag", "Server2 sent a message");
group_replication_service_message_send("tag", "Server2 sent a message")
The tag and message was sent to the group.
include/gr_wait_for_member_state.inc

# 5. Assert server2 logged error when failed notification on recv service
include/assert_grep.inc [Server 2 logged failure to notify recv service.]

# 6. Assert server1 received message transmitted by GR message delivery
include/assert_grep.inc [Server 1 received message from server 2.]

# 7. Assert server2 do not received any message and is read only
[connection server2]
include/assert_grep.inc [Server 2 received 0 messages.]
include/assert_and_disable_read_only.inc

# 8. Cleanup
# Removing debug point 'gr_message_service_fail_recv' from @@GLOBAL.debug
include/uninstall_replication_observers_example.inc
[connection server1]
include/uninstall_replication_observers_example.inc
include/group_replication_end.inc
