include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]

############################################################
# 1. Configure a replication channel to replicate from server1
[connection server2]
CHANGE REPLICATION SOURCE TO SOURCE_HOST='127.0.0.1', SOURCE_USER='root', SOURCE_AUTO_POSITION=1, SOURCE_PORT=SERVER_1_PORT;
Warnings:
Note	1759	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	1760	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.

############################################################
# 2. Restart the server with GR configured to start together with
#    server, and set --skip_slave_start=0.
[connection server2]
# restart:--group_replication_group_name=GROUP_REPLICATION_GROUP_NAME --group_replication_local_address=GROUP_REPLICATION_LOCAL_ADDRESS --group_replication_group_seeds=GROUP_REPLICATION_GROUP_SEEDS --group_replication_bootstrap_group=1 --group_replication_start_on_boot=1  --group_replication_single_primary_mode=1 --group_replication_enforce_update_everywhere_checks=0 --skip_slave_start=0

############################################################
# 3. Wait until server is up.
#    Check that GR and replication channel are working.
include/rpl_reconnect.inc
[connection server2]
include/gr_wait_for_member_state.inc
include/gr_assert_primary_member.inc
include/wait_for_slave_to_start.inc

############################################################
# 4. Write something on server1 and read it on server2.
[connection server1]
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY);
INSERT INTO t1 VALUES (1);
include/sync_slave_sql_with_master.inc
[connection server2]
include/assert.inc ['There is one row in t1']

############################################################
# 5. Clean up.
[connection server1]
DROP TABLE t1;
include/sync_slave_sql_with_master.inc
include/group_replication_end.inc
