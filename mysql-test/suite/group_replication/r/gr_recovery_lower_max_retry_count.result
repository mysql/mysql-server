include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]

# 1. Bootstrap start a group on M1.

[connection server1]
include/start_and_bootstrap_group_replication.inc

# 2. Setup environment to fail donor connection and start GR on M2.
#    Set DEBUG on M2 to block donor connection attempt when count reaches 3.
#    Verify M2 is in recovery state.

[connection server2]
SET @debug_save= @@GLOBAL.DEBUG;
SET @recovery_reconnect_interval_save= @@GLOBAL.GROUP_REPLICATION_RECOVERY_RECONNECT_INTERVAL;
SET @recovery_retry_count_save= @@GLOBAL.group_replication_recovery_retry_count;
CHANGE MASTER TO MASTER_USER="user_does_not_exist" FOR CHANNEL "group_replication_recovery";
SET SESSION sql_log_bin = 0;
call mtr.add_suppression("Maximum number of retries when trying to connect to a donor reached. Aborting group replication incremental recovery.");
call mtr.add_suppression("Fatal error during the incremental recovery process of Group Replication. The server will leave the group.");
call mtr.add_suppression("Skipping leave operation: concurrent attempt to leave the group is on-going.");
SET SESSION sql_log_bin = 1;
SET @@GLOBAL.DEBUG='+d,gr_reset_max_connection_attempts_to_donors';
SET GLOBAL group_replication_recovery_reconnect_interval= 2;
include/start_group_replication.inc

# 3. Reset group_replication_recovery_retry_count to 2.
#    Signal donor connection attempt to continue.

SET DEBUG_SYNC= "now WAIT_FOR signal.connection_attempt_3";
SET GLOBAL group_replication_recovery_retry_count= 2;
SET DEBUG_SYNC= "now SIGNAL signal.reset_recovery_retry_count_done";

# 4. Verification.

include/gr_wait_for_member_state.inc
include/assert_grep.inc [3 donor connections attempts were made.]
include/assert_grep.inc [Post change of group_replication_recovery_retry_count, 4th donor connection attempt was not made.]
include/assert_grep.inc [Recovery process aborted.]

# 5. Clean up.

SET @@GLOBAL.DEBUG= @debug_save;
SET @@GLOBAL.GROUP_REPLICATION_RECOVERY_RECONNECT_INTERVAL= @recovery_reconnect_interval_save;
SET @@GLOBAL.group_replication_recovery_retry_count= @recovery_retry_count_save;
include/group_replication_end.inc
