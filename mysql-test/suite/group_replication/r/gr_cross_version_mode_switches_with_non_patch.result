include/group_replication.inc [rpl_server_count=3]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]

# 1. Bootstrap M1 with 8.0.15 version.
#    Start GR on M2 with higher minor version and member weight 70.
#    Start GR on M3 with higher major version and member weight 90.

SET @debug1_save= @@GLOBAL.DEBUG;
SET @@GLOBAL.DEBUG= 'd,group_replication_legacy_election_version2';
SET SESSION sql_log_bin=0;
call mtr.add_suppression("Error while executing a group configuration operation: Error processing configuration start message: The appointed primary member has a major version that is greater than the one of some of the members in the group.");
SET SESSION sql_log_bin=1;
include/start_and_bootstrap_group_replication.inc
[connection server2]
SET @debug2_save= @@GLOBAL.DEBUG;
SET @@GLOBAL.DEBUG= 'd,group_replication_compatibility_higher_minor_version';
SET @member_weight2_save= @@GLOBAL.group_replication_member_weight;
SET GLOBAL group_replication_member_weight= 70;
SET SESSION sql_log_bin=0;
call mtr.add_suppression("Member version is read compatible with the group.");
call mtr.add_suppression("Error while executing a group configuration operation: Error processing configuration start message: The appointed primary member has a major version that is greater than the one of some of the members in the group.");
SET SESSION sql_log_bin=1;
include/start_group_replication.inc
[connection server3]
SET @debug3_save= @@GLOBAL.DEBUG;
SET @@GLOBAL.DEBUG= 'd,group_replication_compatibility_higher_major_version';
SET @member_weight3_save= @@GLOBAL.group_replication_member_weight;
SET GLOBAL group_replication_member_weight= 90;
SET SESSION sql_log_bin=0;
call mtr.add_suppression("Member version is read compatible with the group.");
call mtr.add_suppression("The function 'group_replication_switch_to_single_primary_mode' failed. Error processing configuration start message: The appointed primary member has a major version that is greater than the one of some of the members in the group.");
call mtr.add_suppression("The function 'group_replication_set_as_primary' failed. Error processing configuration start message: The appointed primary member has a major version that is greater than the one of some of the members in the group.");
SET SESSION sql_log_bin=1;
include/start_group_replication.inc

# 2. Switch to single primary mode giving M3 server_uuid.
#    Operation fails since M3 major version is higher.

SELECT group_replication_switch_to_single_primary_mode("MEMBER_UUID");;
ERROR HY000: The function 'group_replication_switch_to_single_primary_mode' failed. Error processing configuration start message: The appointed primary member has a major version that is greater than the one of some of the members in the group.
include/gr_assert_mpm_consistency.inc

# 3. Switch to single primary mode.
#    Due to presence of version 8.0.15 in group, patch and minor version are
#    not considered. M2 becomes primary due to higher member weight.

SELECT group_replication_switch_to_single_primary_mode();
group_replication_switch_to_single_primary_mode()
Mode switched to single-primary successfully.
include/gr_assert_spm_consistency.inc

# 4. Change primary to M3, UDF fails due to major version.

SELECT group_replication_set_as_primary("MEMBER_UUID");;
ERROR HY000: The function 'group_replication_set_as_primary' failed. Error processing configuration start message: The appointed primary member has a major version that is greater than the one of some of the members in the group.
include/gr_assert_spm_consistency.inc

# 5. Reset member weight on M2 and switch to multi primary mode.
#    Switch to single primary mode providing UUID of M2.
#    Due to presence of version 8.0.15 in group, patch version is not considered.
#    M2 becomes primary successfully.
#    Change primary to M1. M1 becomes primary successfully.

[connection server2]
SET @@GLOBAL.group_replication_member_weight = @member_weight2_save;
SELECT group_replication_switch_to_multi_primary_mode();
group_replication_switch_to_multi_primary_mode()
Mode switched to multi-primary successfully.
include/gr_assert_mpm_consistency.inc
SELECT group_replication_switch_to_single_primary_mode("MEMBER_UUID");;
group_replication_switch_to_single_primary_mode("MEMBER_UUID")
Mode switched to single-primary successfully.
include/gr_assert_spm_consistency.inc
SELECT group_replication_set_as_primary("MEMBER_UUID");;
group_replication_set_as_primary("MEMBER_UUID")
Primary server switched to: MEMBER_UUID
include/gr_assert_spm_consistency.inc

# 6. Switch to multi primary mode.
#    Switch to single primary mode without giving UUID.
#    Due to presence of version 8.0.15 in group, patch version is not considered.
#    Lowest server_uuid will become next primary.

SELECT group_replication_switch_to_multi_primary_mode();
group_replication_switch_to_multi_primary_mode()
Mode switched to multi-primary successfully.
include/gr_assert_mpm_consistency.inc
SELECT group_replication_switch_to_single_primary_mode();
group_replication_switch_to_single_primary_mode()
Mode switched to single-primary successfully.
include/gr_assert_spm_consistency.inc

# 7. Cleanup.

[connection server3]
SELECT group_replication_switch_to_multi_primary_mode();
group_replication_switch_to_multi_primary_mode()
Mode switched to multi-primary successfully.
include/gr_assert_mpm_consistency.inc
SET @@GLOBAL.DEBUG= @debug3_save;
SET @@GLOBAL.group_replication_member_weight = @member_weight3_save;
include/stop_group_replication.inc
[connection server2]
SET @@GLOBAL.DEBUG= @debug2_save;
SET @@GLOBAL.group_replication_member_weight = @member_weight2_save;
include/stop_group_replication.inc
[connection server1]
SET @@GLOBAL.DEBUG= @debug1_save;
include/stop_group_replication.inc
include/group_replication_end.inc
