include/group_replication.inc [rpl_server_count=3]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]

############################################################
# 01. Create a table on the group.
[connection server1]
SET SESSION sql_log_bin=0;
call mtr.add_suppression("Due to a plugin error, some transactions were unable to be certified and will now rollback.");
call mtr.add_suppression("Error while waiting for conflict detection procedure to finish on session .*");
call mtr.add_suppression("Run function 'before_commit' in plugin 'group_replication' failed");
SET SESSION sql_log_bin=1;
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY);

############################################################
# 02. Make server3 block before send its prepare message. This
#     will allow us to deterministically to remove server1 from
#     the group while others are waiting for server3 acknowledge.
[connection server3]
SET @@GLOBAL.DEBUG= '+d,group_replication_wait_before_message_send_after_applier_prepare';

############################################################
# 03. Execute T1 on server1.
[connection server1]
INSERT INTO t1 VALUES (1);

############################################################
# 04. Wait until T1 is prepared on server3.
[connection server3]
SET DEBUG_SYNC= "now WAIT_FOR signal.after_before_message_send_after_applier_prepare_waiting";

############################################################
# 05. Remove server1 from the group.
[connection server_1]
include/stop_group_replication.inc

############################################################
# 06. Wait until server1 is removed from the group.
#     Make server3 do send its prepare message.
[connection server3]
include/rpl_gr_wait_for_number_of_members.inc
SET DEBUG_SYNC= 'now SIGNAL signal.after_before_message_send_after_applier_prepare_continue';
SET @@GLOBAL.DEBUG= '-d,group_replication_wait_before_message_send_after_applier_prepare';

############################################################
# 07. Validate data.
[connection server1]
ERROR HY000: Error on observer while running replication hook 'before_commit'.
include/assert.inc ['There are no values in table t1']
[connection server2]
include/assert.inc ['There is 1 value in table t1']
[connection server3]
include/assert.inc ['There is 1 value in table t1']
include/diff_tables.inc [server2:t1, server3:t1]

############################################################
# 08. Clean up.
[connection server1]
SET SESSION sql_log_bin=0;
DROP TABLE t1;
SET SESSION sql_log_bin=1;
[connection server3]
DROP TABLE t1;
include/group_replication_end.inc
