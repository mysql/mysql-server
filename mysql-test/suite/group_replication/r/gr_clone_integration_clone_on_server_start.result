include/group_replication.inc [rpl_server_count=3]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]

############################################################
# 1. Install clone plugin on server1.
[connection server1]
INSTALL PLUGIN clone SONAME 'CLONE_PLUGIN';

############################################################
# 2. Bootstrap server1 and add some data
include/start_and_bootstrap_group_replication.inc
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);
INSERT INTO t1 VALUES (2);

#######################################################################
# 3. Restart server 2 with a monitoring process (mysqld_safe) if needed
#    Remove the default channel from server1 to server2
[connection server2]
RESET SLAVE ALL;
Warnings:
Warning	1287	'RESET SLAVE' is deprecated and will be removed in a future release. Please use RESET REPLICA instead
include/spawn_monitoring_process.inc

############################################################
# 4. Setup the server so group replication starts on boot
#    Install the Clone plugin
CHANGE REPLICATION SOURCE TO SOURCE_USER="root" FOR CHANNEL "group_replication_recovery";
Warnings:
Note	1759	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	1760	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
INSTALL PLUGIN clone SONAME 'CLONE_PLUGIN';

############################################################
# 5. Create a new channel from server 3 into server 2
CHANGE REPLICATION SOURCE TO SOURCE_HOST='localhost', SOURCE_USER='root', SOURCE_PORT=SERVER_3_PORT for channel 'ch3_2';
Warnings:
Note	1759	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	1760	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.

############################################################
# 6. Restart the server making it use clone on start
#    Check that clone goes ok
SET PERSIST group_replication_clone_threshold= 1;
RESTART;
include/rpl_reconnect.inc
[connection server2]
include/gr_wait_for_member_state.inc
include/assert.inc [Clone must be completed]
include/diff_tables.inc [server1:test.t1 ,server2:test.t1]

############################################################
# 7. Check the channel threads failed to start due to clone
include/assert_grep.inc [The applier thread for channel ch3_2 failed to start]
include/assert_grep.inc [The IO thread for channel ch3_2 failed to start]

############################################################
# 8. Cleanup
RESET PERSIST IF EXISTS group_replication_group_name;
RESET PERSIST IF EXISTS group_replication_local_address;
RESET PERSIST IF EXISTS group_replication_group_seeds;
RESET PERSIST IF EXISTS group_replication_start_on_boot;
RESET PERSIST IF EXISTS group_replication_clone_threshold;
RESET PERSIST IF EXISTS group_replication_communication_stack;
SET GLOBAL group_replication_clone_threshold= 9223372036854775807;
DROP TABLE t1;
include/rpl_sync.inc
set session sql_log_bin=0;
call mtr.add_suppression("This member will start distributed recovery using clone. It is due to the number of missing transactions being higher than the configured threshold of*");
call mtr.add_suppression("The 'slave IO' thread of channel 'ch3_2' will error out as the server will attempt to clone another server");
call mtr.add_suppression("The 'slave applier' thread of channel 'ch3_2' will error out as the server will attempt to clone another server");
call mtr.add_suppression("Run function 'thread_start' in plugin 'group_replication' failed");
call mtr.add_suppression("Run function 'applier_start' in plugin 'group_replication' failed");
call mtr.add_suppression("Slave I/O for channel 'ch3_2': Fatal error: Failed to run 'thread_start' hook, Error_code: MY-013117");
call mtr.add_suppression("Slave SQL for channel 'ch3_2': Fatal error: Failed to run 'applier_start' hook, Error_code: MY-013117");
call mtr.add_suppression("Clone removing all user data for provisioning: Started");
call mtr.add_suppression("Clone removing all user data for provisioning: Finished");
set session sql_log_bin=1;
UNINSTALL PLUGIN clone;
include/clean_monitoring_process.inc
SET GLOBAL group_replication_start_on_boot= START_ON_BOOT_VALUE;
[connection server1]
UNINSTALL PLUGIN clone;
include/group_replication_end.inc
