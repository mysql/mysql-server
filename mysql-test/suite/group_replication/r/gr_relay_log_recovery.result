include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]
[connection server1]
SET SESSION sql_log_bin= 0;
call mtr.add_suppression("Relay log recovery on channel with GTID_ONLY=1.*");
call mtr.add_suppression("Slave SQL for channel 'group_replication_applier': ... The slave coordinator and worker threads are stopped,*");
call mtr.add_suppression("The applier thread execution was aborted. Unable to process more transactions, this member will now leave the group.");
call mtr.add_suppression("Fatal error during execution on the Applier process of Group Replication. The server will now leave the group.");
call mtr.add_suppression("Skipping leave operation: concurrent attempt to leave the group is on-going.");
include/gtid_utils.inc
SET SESSION sql_log_bin= 1;
# This will not generate error during relay log recovery on restart as relay log for group_replication channels are ignored.
# restart:--group_replication_local_address=GROUP_REPLICATION_LOCAL_ADDRESS --group_replication_group_seeds=GROUP_REPLICATION_GROUP_SEEDS --relay-log-recovery=1
#No server crash here on starting group replication.
include/rpl_reconnect.inc
include/start_group_replication.inc
# Asserting that the successful start group_replication does not purge relay logs.
include/assert.inc [RECEIVED_GTID must be similar to the one before restart as the relay logs are not purged.]
# This restart will not generate any error as relay-log-recovery is OFF.
# restart:--group_replication_local_address=GROUP_REPLICATION_LOCAL_ADDRESS --group_replication_group_seeds=GROUP_REPLICATION_GROUP_SEEDS --relay-log-recovery=0
#No server crash here on starting group replication.
include/rpl_reconnect.inc
include/start_group_replication.inc
# Asserting that the successful start group_replication does not purge relay logs.
include/assert.inc [RECEIVED_GTID must be similar to the one before restart as the relay logs are not purged.]
# Check that there are two members in the group currently.
include/rpl_gr_wait_for_number_of_members.inc
[connection server1]
# Adding some data to see if replication is working fine.
CREATE TABLE t1 (i INT PRIMARY KEY NOT NULL);
INSERT INTO t1 VALUES(1);
include/rpl_sync.inc
# Checking the data in the two servers. It should be same.
include/diff_tables.inc [server1:test.t1, server2:test.t1]
# Cleanup
[connection server1]
SET SESSION sql_log_bin= 0;
include/gtid_utils_end.inc
SET SESSION sql_log_bin= 1;
DROP TABLE t1;
include/group_replication_end.inc
