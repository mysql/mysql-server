include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]

# 1. Save pid from server1 to be able to freeze it
SET SESSION sql_log_bin = 0;
CREATE TABLE pid_table(pid_no INT PRIMARY KEY);
LOAD DATA LOCAL INFILE 'pid_file' INTO TABLE pid_table;
DROP TABLE pid_table;
SET SESSION sql_log_bin = 1;

# 2. Create table t1
CREATE TABLE test.t1 (a INT PRIMARY KEY);
include/rpl_sync.inc

# 3. Lock table t1 on server2 to block action
[connection server2]
LOCK TABLE t1 READ;

# 4. Server1 insert value on t1
[connection server1]
INSERT INTO t1 VALUES (1);

# 5. Execute action switch to single primary mode
SELECT group_replication_switch_to_single_primary_mode("MEMBER1_UUID");
[connection server_1]

# 6. Freeze server1 sending a SIGSTOP signal
[connection server_1]

# 7. Wait server1 is UNREACHABLE
[connection server2]
include/gr_wait_for_member_state.inc

# 8. Unlock table to action continue
UNLOCK TABLES;

# 9. Send signal to server continue its process
[connection server_1]

# 10. The action is successful
[connection server1]
group_replication_switch_to_single_primary_mode("MEMBER1_UUID")
Mode switched to single-primary successfully.

# 11. Wait that server2 terminate execution of primary election
[connection server2]

# 12. Assert primary and secondary role of members
include/gr_assert_secondary_member.inc
[connection server1]
include/gr_assert_primary_member.inc

# 13. Cleanup
DROP TABLE t1;
include/group_replication_end.inc
