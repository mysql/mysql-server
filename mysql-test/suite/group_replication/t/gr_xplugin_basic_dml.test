##############################################################################
#
# This test checks the basic functionality of group replication plugin along
# with mysqlx plugin.
#
# NOTE : All queries will be run through mysqlx plugin using mysqlxtest.
#
# Steps involved in this test :
# 0. This test requires 3 servers.
# 1. Start 3 servers loaded with both mysqlx and group replication plugin.
# 2. Start group replication on server1 as bootstrap server for the group.
# 3. Start group replication on other two servers as non bootstrap server.
# 4. Wait until all three servers come online.
# 5. Perform ddl and dml operations on all the three servers.
#    a) server1 : Create table T1 and perform ddl on T1.
#    b) server2 : Create table T2 and perform ddl on T1 & T2.
#    c) server3 : Create table T3 and perform ddl on T1,T2 & T3.
# 6. Assert for values on three tables from different servers.
# 7. Stop group replication on all the servers through mysqlx.
# 8. uninstall mysqlx plugin on all servers.
# 9. clean-up
##############################################################################

--source include/big_test.inc
--source include/have_mysqlx_plugin.inc
--source include/have_group_replication_plugin_base.inc

# This initial setup starts three servers with all the prerequisites required
# for GR to start

--source include/have_group_replication_plugin.inc
--let $rpl_skip_group_replication_start= 1
--let $rpl_server_count= 3
--source include/group_replication.inc

# Install Mysqlx plugin on all servers.

--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--source include/xplugin_wait_for_interfaces.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc
--source include/xplugin_wait_for_interfaces.inc

--let $rpl_connection_name= server3
--source include/rpl_connection.inc
--source include/xplugin_wait_for_interfaces.inc

# File for starting GR through X-protocol
# Bootstrap-server
--write_file $MYSQL_TMP_DIR/bootstrap_server.tmp
-->sql
SET GLOBAL GROUP_REPLICATION_GROUP_NAME = 'aaaaaaaa-dddd-aaaa-aaaa-aaaaaaaaaaaa';
SET GLOBAL GROUP_REPLICATION_BOOTSTRAP_GROUP=1;
START GROUP_REPLICATION;
SET GLOBAL GROUP_REPLICATION_BOOTSTRAP_GROUP=0;
-->endsql
EOF

# Temp file for starting group replication as non bootstrap server.
--write_file $MYSQL_TMP_DIR/non_bootstrap_server.tmp
-->sql
SET GLOBAL GROUP_REPLICATION_GROUP_NAME = 'aaaaaaaa-dddd-aaaa-aaaa-aaaaaaaaaaaa';
CHANGE MASTER TO MASTER_USER='root' FOR CHANNEL 'group_replication_recovery';
START GROUP_REPLICATION;
-->endsql
EOF

# Starting GR on all the servers through mysqlx
--echo Starting GR on server 1
--exec $MYSQLXTEST --ssl-cipher='DHE-RSA-AES256-SHA' -u root --port=$MASTER_X_MYPORT_1 --file=$MYSQL_TMP_DIR/bootstrap_server.tmp 2>&1
--echo Starting GR on server 2
--exec $MYSQLXTEST --ssl-cipher='DHE-RSA-AES256-SHA' -u root --port=$MASTER_X_MYPORT_2 --file=$MYSQL_TMP_DIR/non_bootstrap_server.tmp 2>&1
--echo Starting GR on server 3
--exec $MYSQLXTEST --ssl-cipher='DHE-RSA-AES256-SHA' -u root --port=$MASTER_X_MYPORT_3 --file=$MYSQL_TMP_DIR/non_bootstrap_server.tmp 2>&1

--echo Waiting for GR members to come online.
--let $wait_condition=SELECT COUNT(*)=3 FROM performance_schema.replication_group_members where MEMBER_STATE="ONLINE"
--source include/wait_condition.inc

# Temp file for performing ddl and dml on server1

--write_file $MYSQL_TMP_DIR/ddl_dml_on_server1.tmp
-->sql
USE test;
CREATE TABLE T1 (C1 INT PRIMARY KEY, C2 INT );
INSERT INTO T1 VALUES (1,12);
INSERT INTO T1 VALUES (2,1234);
INSERT INTO T1 VALUES (3,98765);
UPDATE T1 SET C2 = C2 - 98765;
DELETE FROM T1 WHERE C2 = 0;
-->endsql
EOF

--exec $MYSQLXTEST --ssl-cipher='DHE-RSA-AES256-SHA' -u root --port=$MASTER_X_MYPORT_1 --file=$MYSQL_TMP_DIR/ddl_dml_on_server1.tmp 2>&1

# Wait for synchronization between the nodes.

--source include/rpl_sync.inc

# Temp file for performing ddl and dml on server2

--write_file $MYSQL_TMP_DIR/ddl_dml_on_server2.tmp
-->sql
USE test;
CREATE TABLE T2 (C1 CHAR(20) PRIMARY KEY, C2 INT );
INSERT INTO T2 VALUES ('ABC',23);
UPDATE T2 SET C2 = C2 + 27;
INSERT INTO T1 VALUES (4,34);
INSERT INTO T2 VALUES ('ABCDEF',23);
INSERT INTO T1 VALUES (5,1234);
INSERT INTO T2 VALUES ('ABCDEFGHIJ',23);
DELETE FROM T2 WHERE C1 = 'ABC';
-->endsql
EOF

--exec $MYSQLXTEST --ssl-cipher='DHE-RSA-AES256-SHA' -u root --port=$MASTER_X_MYPORT_2 --file=$MYSQL_TMP_DIR/ddl_dml_on_server2.tmp 2>&1

# Wait for synchronization between the nodes.

--source include/rpl_sync.inc

# Temp file for performing ddl and dml on server3

--write_file $MYSQL_TMP_DIR/ddl_dml_on_server3.tmp
-->sql
USE test;
CREATE TABLE T3 (C1 INT PRIMARY KEY, C2 VARCHAR(20) );
DELETE FROM T1;
INSERT INTO T1 VALUES (1,12345);
INSERT INTO T3 VALUES (1,'1234');
INSERT INTO T2 VALUES ('1234',1234);
INSERT INTO T1 VALUES (7,98765);
INSERT INTO T2 VALUES ('XYZ',23);
UPDATE T2 SET C1 = 'ABC' WHERE C1 ='XYZ';
INSERT INTO T3 VALUES (2,'23');
INSERT INTO T3 VALUES (3,'234');
DELETE FROM T3 WHERE C1 > 0;
-->endsql
EOF

--exec $MYSQLXTEST --ssl-cipher='DHE-RSA-AES256-SHA' -u root --port=$MASTER_X_MYPORT_3 --file=$MYSQL_TMP_DIR/ddl_dml_on_server3.tmp 2>&1

# Wait for synchronization between the nodes.

--source include/rpl_sync.inc

# Asserts for values on each table.

--write_file $MYSQL_TMP_DIR/assert.tmp

-->echo Checking the Value on T1
-->wait_for 12345	SELECT C2 FROM test.T1 WHERE C1=1

-->echo Checking the row_count on T2
-->wait_for 23	SELECT C2 FROM test.T2 WHERE C1="ABC"
EOF

--exec $MYSQLXTEST --ssl-cipher='DHE-RSA-AES256-SHA' -u root --port=$MASTER_X_MYPORT_3 --file=$MYSQL_TMP_DIR/assert.tmp 2>&1

--let $wait_condition=SELECT COUNT(*)=0 FROM test.T3
--source include/wait_condition.inc

# Temp for droping tables in a group.
--write_file $MYSQL_TMP_DIR/delete_tables.tmp
-->sql
USE test;
DROP TABLE T1;
DROP TABLE T2;
DROP TABLE T3;
-->endsql
EOF

# Deleting tables.
--exec $MYSQLXTEST --ssl-cipher='DHE-RSA-AES256-SHA' -u root --port=$MASTER_X_MYPORT_3 --file=$MYSQL_TMP_DIR/delete_tables.tmp 2>&1
--source include/rpl_sync.inc

# Creating temp file to stop GR.
--write_file $MYSQL_TMP_DIR/stop_group_replication.tmp
-->stmtsql STOP GROUP_REPLICATION;
-->recvresult
EOF

# Stopping GR on all the servers
--echo Stopping GR on server 1
--exec $MYSQLXTEST --ssl-cipher='DHE-RSA-AES256-SHA' -u root --port=$MASTER_X_MYPORT_1 --file=$MYSQL_TMP_DIR/stop_group_replication.tmp 2>&1
--echo Stopping GR on server 2
--exec $MYSQLXTEST --ssl-cipher='DHE-RSA-AES256-SHA' -u root --port=$MASTER_X_MYPORT_2 --file=$MYSQL_TMP_DIR/stop_group_replication.tmp 2>&1
--echo Stopping GR on server 3
--exec $MYSQLXTEST --ssl-cipher='DHE-RSA-AES256-SHA' -u root --port=$MASTER_X_MYPORT_3 --file=$MYSQL_TMP_DIR/stop_group_replication.tmp 2>&1

# Uninstall mysqlx on all servers
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--let $group_replication_member_state= OFFLINE
--source include/gr_wait_for_member_state.inc
--source include/assert_and_disable_read_only.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc
--let $group_replication_member_state= OFFLINE
--source include/gr_wait_for_member_state.inc
--source include/assert_and_disable_read_only.inc

--let $rpl_connection_name= server3
--source include/rpl_connection.inc
--let $group_replication_member_state= OFFLINE
--source include/gr_wait_for_member_state.inc
--source include/assert_and_disable_read_only.inc

# clean-up
--remove_file $MYSQL_TMP_DIR/bootstrap_server.tmp
--remove_file $MYSQL_TMP_DIR/non_bootstrap_server.tmp
--remove_file $MYSQL_TMP_DIR/ddl_dml_on_server1.tmp
--remove_file $MYSQL_TMP_DIR/ddl_dml_on_server2.tmp
--remove_file $MYSQL_TMP_DIR/ddl_dml_on_server3.tmp
--remove_file $MYSQL_TMP_DIR/delete_tables.tmp
--remove_file $MYSQL_TMP_DIR/assert.tmp
--remove_file $MYSQL_TMP_DIR/stop_group_replication.tmp

--source include/group_replication_end.inc
