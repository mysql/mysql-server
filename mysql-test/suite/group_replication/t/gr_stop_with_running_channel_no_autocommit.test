################################################################################
# Validate Group Replication can be stopped when replication channels are
# running and autocommit is disabled.
#
# Test:
#   0. This test requires 2 servers:
#        server1: group member
#        server2: single server
#   1. Deploy a group on server1.
#   2. Configure a channel on server1 that replicates from
#      server2.
#   3. Stop Group Replication on server1 with autocommit disabled.
#   4. Assert that no transaction was logged due to
#      STOP GROUP_REPLICATION;
#   5. Clean up.
###############################################################################
--source include/have_group_replication_plugin.inc
--let $rpl_skip_group_replication_start= 1
--source include/group_replication.inc


--echo
--echo ############################################################
--echo # 1. Deploy a group on server1.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--source include/start_and_bootstrap_group_replication.inc


--echo
--echo ############################################################
--echo # 2. Configure a channel on server1 that replicates from
--echo #    server2.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--replace_result $SERVER_MYPORT_2 SERVER_2_PORT
--eval CHANGE REPLICATION SOURCE TO SOURCE_HOST='127.0.0.1', SOURCE_USER='root', SOURCE_PORT=$SERVER_MYPORT_2, SOURCE_AUTO_POSITION=1 FOR CHANNEL 'ch1'

--let $rpl_channel_name='ch1'
--source include/start_slave.inc


--echo
--echo ############################################################
--echo # 3. Stop Group Replication on server1 with autocommit disabled.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
SET @saved_autocommit = @@SESSION.autocommit;
SET @@SESSION.autocommit = 0;

STOP GROUP_REPLICATION;
COMMIT;


--echo
--echo ############################################################
--echo # 4. Assert that no transaction was logged due to
--echo #    STOP GROUP_REPLICATION;
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--let $group_replication_member_state = OFFLINE
--source include/gr_wait_for_member_state.inc

--let $expected_gtid_set= "$group_replication_group_name:1"
--let $assert_text= STOP GROUP_REPLICATION did not generate a GTID
--let $assert_cond= "[SELECT @@GLOBAL.GTID_EXECUTED]" = $expected_gtid_set
--source include/assert.inc

--let $vcle_seq= Gtid # Query/BEGIN # View_change # Query/COMMIT
# View change (s1 bootstrap)
--let $event_sequence= $vcle_seq
--source include/assert_binlog_events.inc


--echo
--echo ############################################################
--echo # 5. Clean up.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
SET @@SESSION.autocommit = @saved_autocommit;

--let $rpl_channel_name='ch1'
--let $rpl_multi_source= 1
--let $rpl_reset_slave_all= 1
--source include/rpl_reset_slave.inc
--let $rpl_channel_name=
--let $rpl_multi_source=

--source include/group_replication_end.inc
