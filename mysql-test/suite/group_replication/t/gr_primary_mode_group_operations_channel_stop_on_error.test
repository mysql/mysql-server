###############################################################################
# When a member also running asynchronous replication channel goes into
# ERROR state upon execution of a group coordinated action like the
# group_replication_switch_to_single_primary_mode() UDF:
# - The IO and SQL slave thread of asynchronous replication channel should
#   not be in running state.
# - In the ERROR state, upon executing `STOP GROUP_REPLICATION` it should
#   not hit ASSERTION `!is_set()' on the Diagnostic area methods.
#
#
# Test:
#   0. The test requires two servers: M1 and M2.
#   1. Start server1 and bootstrap group.
#   2. Start Group Replication on server2.
#   3. Create and start new channel ch2_1: server1(slave), server2(master)
#   4. Stop the applier on server1 Group Replication and
#      on server2 execute an action to switch to
#      single primary mode with server1 as primary.
#      Server 1 shall error out.
#   5. Confirm server1 is in ERROR state.
#   6. Confirm server1 Slave IO and SQL thread are not running.
#   7. Stop Group Replication.
#   8. Cleanup.
#
###############################################################################

--source include/have_group_replication_plugin.inc
--let $rpl_skip_group_replication_start= 1
--source include/group_replication.inc

--echo
--echo # 1. Start server1 and bootstrap group.

SET SESSION sql_log_bin= 0;
call mtr.add_suppression("'There was an issue on the primary election process: Could not wait for the execution of remote transactions. The member will now leave the group.'");
call mtr.add_suppression("'A configuration change was killed in this member. The member will now leave the group as its configuration may have diverged.'");
call mtr.add_suppression("'The server was automatically set into read only mode after an error was detected.'");
call mtr.add_suppression("'Error while executing a group configuration operation: A critical error occurred during the local execution of this action.*");
call mtr.add_suppression("'Skipping leave operation: concurrent attempt to leave the group is on-going.'");
SET SESSION sql_log_bin= 1;

--source include/start_and_bootstrap_group_replication.inc


--echo
--echo # 2. Start Group Replication on server2.

--let $rpl_connection_name= server2
--source include/rpl_connection.inc
--source include/start_group_replication.inc


--echo
--echo # 3. Create and start new channel ch2_1: server1(slave), server2(master)

--let $rpl_connection_name= server1
--source include/rpl_connection.inc

--let $server1_uuid= query_get_value(SELECT @@SERVER_UUID, @@SERVER_UUID, 1)

--replace_result $SERVER_MYPORT_2 SERVER_2_PORT
--eval CHANGE MASTER TO MASTER_HOST='127.0.0.1', MASTER_USER='root', MASTER_PORT=$SERVER_MYPORT_2 for channel 'ch2_1'

--let $rpl_channel_name= 'ch2_1'
--source include/start_slave.inc
--let $rpl_channel_name=


--echo
--echo # 4. Stop the applier on server1 Group Replication and
--echo #    on server2 execute an action to switch to
--echo #    single primary mode with server1 as primary.
--echo #    Server 1 shall error out.

--source include/gr_stop_applier_sql_thread.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc
--replace_result $server1_uuid MEMBER1_UUID
--eval SELECT group_replication_switch_to_single_primary_mode("$server1_uuid")


--echo
--echo # 5. Confirm server1 is in ERROR state.

--let $rpl_connection_name= server1
--source include/rpl_connection.inc

--let $group_replication_member_state= ERROR
--source include/gr_wait_for_member_state.inc


--echo
--echo # 6. Confirm server1 Slave IO and SQL thread are not running.

--let $slave_param= Slave_IO_Running
--let $slave_param_value= No
--source include/check_slave_param.inc

--let $slave_param= Slave_SQL_Running
--let $slave_param_value= No
--source include/check_slave_param.inc


--echo
--echo # 7. Stop Group Replication.
--source include/stop_group_replication.inc

--echo
--echo # 8. Cleanup

RESET SLAVE ALL FOR CHANNEL 'ch2_1';

--let $rpl_group_replication_single_primary_mode=1
--let $rpl_group_replication_reset_persistent_vars=1
--source include/group_replication_end.inc
