################################################################################
## This test proves that group replication does not start on server when it's
## lower_case_table_names does not match with the group.
##
## Test:
## 0.  This test requires 2 members.
## 1.  Verify lower_case_table_names cannot be set while server is
##     running and start GR on server-1.
## 2.  Store variables of server-2 for restart.
## 3.  Test GR does not start on server when lower_case_table_names
##     does not match.
## 3A. Test GR does not start on boot when lower_case_table_names
##     does not match.
## 3B. Test GR does not start with command when lower_case_table_names
##     does not match.
## 4.  Cleanup.
################################################################################

--source include/big_test.inc
--source include/have_debug_sync.inc
--source include/have_group_replication_plugin.inc
--let $rpl_skip_group_replication_start= 1
--source include/group_replication.inc
--source include/force_restart.inc

--let $allow_rpl_inited=1

--echo
--echo ## 1.  Verify lower_case_table_names cannot be set while server is
--echo ##     running and start GR on server-1.
--echo
--let $rpl_connection_name= server1
--source include/rpl_connection.inc

## Verify lower_case_table_names cannot be set while server is running.
## This make sures we do not need to test variable changes while GR is running.
--error ER_INCORRECT_GLOBAL_LOCAL_VAR
SET GLOBAL lower_case_table_names= 1;

--source include/start_and_bootstrap_group_replication.inc

--echo
--echo ## 2.  Store variables of server-2 for restart.
--echo
--let $rpl_connection_name= server2
--source include/rpl_connection.inc

--let $_group_replication_local_address= `SELECT @@GLOBAL.group_replication_local_address`
--let $_group_replication_group_seeds= `SELECT @@GLOBAL.group_replication_group_seeds`
--let $_group_replication_comm_stack= `SELECT @@GLOBAL.group_replication_communication_stack`

set session sql_log_bin=0;
call mtr.add_suppression("The member is configured with a lower_case_table_names option value .*");
call mtr.add_suppression("lower_case_table_names was set to 2, .*");
set session sql_log_bin=1;

--echo
<<<<<<< HEAD:mysql-test/suite/group_replication/t/gr_lower_case_table_names_different.test
--echo ## 3A. Test GR does not start on boot when lower_case_table_names
<<<<<<< HEAD
--echo ##     does not match. And verifies only one member is shown in the
--echo ##     group as the join failed.
=======
=======
--echo ## 3A. Test GR start with command when lower_case_table_names matches.
>>>>>>> pr/231
--echo
--source include/start_group_replication.inc

<<<<<<< HEAD
--let $restart_parameters=restart:--group_replication_start_on_boot=1 --group_replication_local_address=$_group_replication_local_address --group_replication_group_seeds=$_group_replication_group_seeds --group_replication_group_name=$group_replication_group_name --group_replication_communication_stack=$_group_replication_comm_stack --lower_case_table_names=2 --loose-debug="+d,group_replication_wait_before_leave_on_error"
--replace_result $group_replication_group_name GROUP_REPLICATION_GROUP_NAME $_group_replication_local_address GROUP_REPLICATION_LOCAL_ADDRESS $_group_replication_group_seeds GROUP_REPLICATION_GROUP_SEEDS $_group_replication_comm_stack GROUP_REPLICATION_COMMUNICATION_STACK
=======
--let $assert_text= 'Assert server-1 and server-2 are ONLINE'
--let $assert_cond= "[SELECT COUNT(*) from performance_schema.replication_group_members WHERE MEMBER_STATE=\"ONLINE\"]" = 2
--source include/assert.inc

--echo
--echo ## 3B. Test GR start on boot when lower_case_table_names matches.
--echo
--let $_group_replication_group_whitelist= `SELECT @@GLOBAL.group_replication_ip_whitelist`
--let $restart_parameters=restart:--group_replication_start_on_boot=1 --group_replication_local_address=$_group_replication_local_address --group_replication_group_seeds=$_group_replication_group_seeds --group_replication_group_name=$group_replication_group_name --lower_case_table_names=1 --group_replication_ip_whitelist=$_group_replication_group_whitelist
--replace_result $group_replication_group_name GROUP_REPLICATION_GROUP_NAME $_group_replication_local_address GROUP_REPLICATION_LOCAL_ADDRESS $_group_replication_group_seeds GROUP_REPLICATION_GROUP_SEEDS $_group_replication_group_whitelist GROUP_REPLICATION_GROUP_WHITELIST
>>>>>>> pr/231
--source include/restart_mysqld.inc

#Needed as we are not using rpl_restart_server.inc
--let $rpl_server_number= 2
--source include/rpl_reconnect.inc

<<<<<<< HEAD
# Wait for the debug sync to be reached.
SET DEBUG_SYNC= "now WAIT_FOR signal.wait_leave_process";

--let $assert_text= 'Assert group has one member'
--let $assert_cond= "[SELECT COUNT(*) from performance_schema.replication_group_members]" = 1
--source include/assert.inc

--let $assert_text= 'Assert server-2 is OFFLINE'
--let $assert_cond= "[SELECT COUNT(*) from performance_schema.replication_group_members WHERE MEMBER_STATE=\"OFFLINE\"]" = 1
--source include/assert.inc

# now unblock debug sync point
SET DEBUG_SYNC= "now SIGNAL signal.continue_leave_process";
=======
--let $wait_condition= SELECT COUNT(*) = 2 FROM performance_schema.replication_group_members WHERE MEMBER_STATE="ONLINE"
--source include/wait_condition.inc

--echo
--echo ## 4A. Test GR does not start on boot when lower_case_table_names
>>>>>>> upstream/cluster-7.6:rapid/plugin/group_replication/tests/mtr/t/gr_lower_case_table_names.test
--echo ##     does not match.
--echo

--let $restart_parameters=restart:--group_replication_start_on_boot=1 --group_replication_local_address=$_group_replication_local_address --group_replication_group_seeds=$_group_replication_group_seeds --group_replication_group_name=$group_replication_group_name --lower_case_table_names=2 --group_replication_ip_whitelist=$_group_replication_group_whitelist
--replace_result $group_replication_group_name GROUP_REPLICATION_GROUP_NAME $_group_replication_local_address GROUP_REPLICATION_LOCAL_ADDRESS $_group_replication_group_seeds GROUP_REPLICATION_GROUP_SEEDS $_group_replication_group_whitelist GROUP_REPLICATION_GROUP_WHITELIST
--source include/restart_mysqld.inc

#Needed as we are not using rpl_restart_server.inc
--let $rpl_server_number= 2
--source include/rpl_reconnect.inc

<<<<<<< HEAD:mysql-test/suite/group_replication/t/gr_lower_case_table_names_different.test
## Wait for server-2 to join group, needed to get group lower_case_table_names
--let $group_replication_number_of_members=2
--source include/gr_wait_for_number_of_members.inc

=======
>>>>>>> upstream/cluster-7.6:rapid/plugin/group_replication/tests/mtr/t/gr_lower_case_table_names.test
--let $wait_condition= SELECT COUNT(*) = 1 FROM performance_schema.replication_group_members WHERE MEMBER_STATE="OFFLINE"
--source include/wait_condition.inc
>>>>>>> pr/231

--echo
--echo ## 3B. Test GR does not start with command when lower_case_table_names
--echo ##     does not match.
--echo

--error ER_GROUP_REPLICATION_CONFIGURATION
START GROUP_REPLICATION;

--let $assert_file= $MYSQLTEST_VARDIR/log/mysqld.2.err
--let $assert_text = Found the expected error about lower_case_table_names
--let $assert_select = The member is configured with a lower_case_table_names option value
--let $assert_count = 2
--source include/assert_grep.inc

--let $assert_text= 'Assert server-2 is OFFLINE'
--let $assert_cond= "[SELECT COUNT(*) from performance_schema.replication_group_members WHERE MEMBER_STATE=\"OFFLINE\"]" = 1
--source include/assert.inc

--echo
--echo ## 4.  Cleanup.
--echo

--source include/group_replication_end.inc
