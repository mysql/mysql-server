################################################################################
# This test verifies that server reports warnings upon start for persisted group
# replication variables, if plugin is not loaded. Later post installation,
# variable_source is shown as PERSISTED.
#
# Test:
# 0. The test requires one server.
# 1. Persist configuration on server1. Uninstall group replication plugin.
# 2. Restart server1 without plugin-load, it must NOT bootstrap the group.
#    Verify proper warnings are generated.
# 3. Install plugin and verify that variable_source is shown as PERSISTED and
#    group is bootstrapped.
# 4. Restart server1 with plugin-load. Verify group is bootstrapped.
# 5. Clean up.
################################################################################
--source include/big_test.inc
--source include/force_restart.inc
--source include/have_group_replication_plugin.inc
--let $rpl_skip_group_replication_start= 1
--source include/group_replication.inc

--echo
--echo ############################################################
--echo # 1. Persist configuration on server1. Uninstall plugin.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc

--replace_result $group_replication_group_name GROUP_REPLICATION_GROUP_NAME
--eval SET PERSIST group_replication_group_name= "$group_replication_group_name"
--eval SET PERSIST group_replication_group_seeds= @@GLOBAL.group_replication_group_seeds
--eval SET PERSIST group_replication_local_address= @@GLOBAL.group_replication_local_address
SET PERSIST group_replication_start_on_boot= ON;
SET PERSIST group_replication_bootstrap_group= ON;

--let $assert_text= 'Expect 5 persisted variables.'
--let $assert_cond= [SELECT COUNT(*) as count FROM performance_schema.persisted_variables, count, 1] = 5
--source include/assert.inc

--source include/uninstall_group_replication_plugin.inc


--echo
--echo ############################################################
--echo # 2. Restart server1 without plugin-load, it must NOT
--echo #    bootstrap the group. Verify warnings are generated.
SET SESSION sql_log_bin= 0;
call mtr.add_suppression("unknown variable 'loose_group_replication");
SET SESSION sql_log_bin= 1;

--let $allow_rpl_inited= 1
--let $restart_parameters="restart: --plugin-load="
--source include/restart_mysqld.inc
--let $rpl_server_number= 1
--source include/rpl_reconnect.inc

--echo
--let $assert_text= 'There must be NO variable shown as persisted in variables_info table.'
--let $assert_cond= [SELECT COUNT(*) as count FROM performance_schema.variables_info WHERE variable_source="PERSISTED", count, 1] = 0
--source include/assert.inc

--echo
--let $grep_file= $MYSQLTEST_VARDIR/tmp/gr_persisted_variables_without_plugin.err
--let $grep_pattern= unknown variable 'loose_group_replication_
--let $grep_output= print_count
--source include/grep_pattern.inc

--echo
--echo ############################################################
--echo # 3. Install plugin and verify that variable_source is shown
--echo #    as PERSISTED and group is bootstrapped.
--source include/install_group_replication_plugin.inc

--let $group_replication_member_state= ONLINE
--source include/gr_wait_for_member_state.inc

--let $assert_text= 'Expect 5 persisted variables shown as PERSISTED in variables_info table.'
--let $assert_cond= [SELECT COUNT(*) as count FROM performance_schema.variables_info WHERE variable_source="PERSISTED", count, 1] = 5
--source include/assert.inc

--let $assert_text= 'Expect 5 persisted variables with matching persisted and global values.'
--let $assert_cond= [SELECT COUNT(*) as count FROM performance_schema.variables_info vi JOIN performance_schema.persisted_variables pv JOIN performance_schema.global_variables gv ON vi.variable_name=pv.variable_name AND vi.variable_name=gv.variable_name AND pv.variable_value=gv.variable_value WHERE vi.variable_source="PERSISTED", count, 1] = 5
--source include/assert.inc

--source include/uninstall_group_replication_plugin.inc

--echo
--echo ############################################################
--echo # 4. Restart server again with plugin-load. Verify group is
--echo #    bootstrapped.
--let $allow_rpl_inited= 1
--let $restart_parameters=
--source include/restart_mysqld.inc
--let $rpl_server_number= 1
--source include/rpl_reconnect.inc
--let $MYSQLD_DATADIR= `select @@datadir;`

--let $group_replication_member_state= ONLINE
--source include/gr_wait_for_member_state.inc

--let $assert_text= 'Expect 5 persisted variables shown as PERSISTED in variables_info table.'
--let $assert_cond= [SELECT COUNT(*) as count FROM performance_schema.variables_info WHERE variable_source="PERSISTED", count, 1] = 5
--source include/assert.inc

--let $assert_text= 'Expect 5 persisted variables with matching persisted and global values.'
--let $assert_cond= [SELECT COUNT(*) as count FROM performance_schema.variables_info vi JOIN performance_schema.persisted_variables pv JOIN performance_schema.global_variables gv ON vi.variable_name=pv.variable_name AND vi.variable_name=gv.variable_name AND pv.variable_value=gv.variable_value WHERE vi.variable_source="PERSISTED", count, 1] = 5
--source include/assert.inc


--echo
--echo ############################################################
--echo # 5. Clean up.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
RESET PERSIST;
--remove_file $MYSQLD_DATADIR/mysqld-auto.cnf
SET GLOBAL group_replication_start_on_boot= OFF;
SET GLOBAL group_replication_bootstrap_group= OFF;

--let $assert_text= 'There must be 0 persisted variables.'
--let $assert_cond= [SELECT COUNT(*) as count FROM performance_schema.persisted_variables, count, 1] = 0
--source include/assert.inc

--source include/group_replication_end.inc
