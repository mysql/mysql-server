###############################################################################
#
# group_replication_exit_state_action sysvar specifies which action is taken by
# a server once it has involuntarily left the group. Currently there are only
# two actions: either the server continues running but with super_read_only
# enabled (READ_ONLY) or it aborts (ABORT_SERVER).
#
# This test shall verify that the correct exit state action is executed when
# an error occurs upon joining the group (in this case, when the
# transaction_write_set_extraction value on a joining member differs from
# the group).
#
# Test:
# 0) Setup group of 2 members (M1 and M2).
# 1) Relaunch M2 with a different hash algorithm from M1.
# 2) M2 super_read_only mode shall be OFF and in OFFLINE state
#    (since it failed to join the group).
# 3) Relaunch M2 with a different hash algorithm from M1 and with
#    exit_state_action set to ABORT_SERVER.
# 4) M2 super_read_only mode shall be OFF and in OFFLINE state
#    (since it failed to join the group).
# 5) Restart M2 again without group_replication_start_on_boot enabled. The
#    server should start normally and be able to join the group.
# 6) Cleanup.
#
################################################################################
--source include/have_debug_sync.inc
--source include/big_test.inc
--source include/have_group_replication_plugin.inc

--echo
--echo #########################################################################
--echo # 0) Setup group of 2 members (M1 and M2).
--echo #########################################################################
--echo
--let $rpl_skip_group_replication_start = 1
--source include/group_replication.inc
--source include/start_and_bootstrap_group_replication.inc
--let $group_hash_algorithm = `SELECT @@GLOBAL.transaction_write_set_extraction`

--let $rpl_connection_name= server2
--source include/rpl_connection.inc

--echo
--echo #########################################################################
--echo # 1) Relaunch M2 with a different hash algorithm from M1.
--echo #########################################################################
--echo
--let $rpl_connection_name= server2
--source include/rpl_connection.inc
# Save all the context we'll need during the test
--let $error_file = $MYSQLTEST_VARDIR/tmp/gr_exit_state_action_on_join_wrong_hash_algorithm.2.err
--let $local_address_server2= `SELECT @@GLOBAL.group_replication_local_address`
--let $group_seeds_server2= `SELECT @@GLOBAL.group_replication_group_seeds`

# Choose a hash algorithm that clashes with the group
--let $hash_algorithm = XXHASH64
if ($group_hash_algorithm == 'XXHASH64')
{
  --let $hash_algorithm = MURMUR32
}

# Restart the server with group_replication_start_on_boot enabled
--let $allow_rpl_inited = 1
--let $restart_parameters=restart:--group_replication_local_address=$local_address_server2 --group_replication_group_seeds=$group_seeds_server2 --group-replication-group-name=$group_replication_group_name --group_replication_start_on_boot=1 --transaction-write-set-extraction=$hash_algorithm --loose-debug="+d,group_replication_wait_before_leave_on_error"
--replace_result $local_address_server2 GROUP_REPLICATION_LOCAL_ADDRESS $group_seeds_server2 GROUP_REPLICATION_GROUP_SEEDS $group_replication_group_name GROUP_REPLICATION_GROUP_NAME $hash_algorithm HASH_ALGORITHM
--source include/restart_mysqld.inc

# Reestablish the connection to the server
--let $rpl_server_number= 2
--source include/rpl_reconnect.inc

--echo
--echo #########################################################################
--echo # 2) M2 super_read_only mode shall be OFF and in OFFLINE state
--echo #    (since it failed to join the group).
--echo #########################################################################
--echo
--let $rpl_connection_name= server2
--source include/rpl_connection.inc

# Wait for the debug sync to be reached.
SET DEBUG_SYNC= "now WAIT_FOR signal.wait_leave_process";
# now unblock debug sync point
SET DEBUG_SYNC= "now SIGNAL signal.continue_leave_process";

# Wait for the member to realize that it couldn't join the group
--let $member2_uuid = `SELECT @@GLOBAL.server_uuid`
--let $group_replication_member_state = OFFLINE
--let $group_replication_member_id = $member2_uuid
--source include/gr_wait_for_member_state.inc
# Verify that super_read_only mode is reverted to its original value
--let $wait_condition= SELECT @@GLOBAL.super_read_only = '0'
--source include/wait_condition.inc
# Verify that the expected error occurred
--let $assert_file = $error_file
--let $assert_text = GR reported that it has an incompatible option with the group (as expected)
--let $assert_select = The member is configured with a transaction-write-set-extraction option value .+ different from the group
--let $assert_count = 1
--source include/assert_grep.inc
# Verify that member 2 didn't join the group
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--let $group_replication_number_of_members = 1
--source include/gr_wait_for_number_of_members.inc

--echo
--echo #########################################################################
--echo # 3) Relaunch M2 with a different hash algorithm from M1 and with
--echo # exit_state_action set to ABORT_SERVER.
--echo #########################################################################
--echo
--let $rpl_connection_name= server2
--source include/rpl_connection.inc
# Restart the server again with group_replication_start_on_boot enabled and with
# group_replication_exit_state_action set to ABORT_SERVER
--let $allow_rpl_inited = 1
--let $restart_parameters=restart:--group_replication_local_address=$local_address_server2 --group_replication_group_seeds=$group_seeds_server2 --group-replication-group-name=$group_replication_group_name --group_replication_start_on_boot=1 --transaction-write-set-extraction=$hash_algorithm --group_replication_exit_state_action=ABORT_SERVER
--replace_result $local_address_server2 GROUP_REPLICATION_LOCAL_ADDRESS $group_seeds_server2 GROUP_REPLICATION_GROUP_SEEDS $group_replication_group_name GROUP_REPLICATION_GROUP_NAME $hash_algorithm HASH_ALGORITHM
--source include/restart_mysqld.inc

--echo
--echo #########################################################################
--echo # 4) M2 super_read_only mode shall be OFF and in OFFLINE state
--echo #    (since it failed to join the group).
--echo #########################################################################
--echo
# Wait for server 1 to see that server 2 didn't join
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--let $group_replication_number_of_members = 1
--source include/gr_wait_for_number_of_members.inc
--let $rpl_server_number= 2
--source include/rpl_reconnect.inc
--let $rpl_connection_name= server2
--source include/rpl_connection.inc

# Verify that super_read_only mode is reverted to its original value
--let $wait_condition= SELECT @@GLOBAL.super_read_only = '0'
--source include/wait_condition.inc

--let $assert_file = $error_file
--let $assert_text = GR reported that it has an incompatible option with the group (as expected)
--let $assert_select = The member is configured with a transaction-write-set-extraction option value .+ different from the group
--let $assert_count = 2
--source include/assert_grep.inc

--echo
--echo #########################################################################
--echo # 5) Restart M2 again without group_replication_start_on_boot enabled.
--echo # The server should start normally and be able to join the group.
--echo #########################################################################
--echo
# Restart server 2 again, now with group_replication_start_on_boot disabled
--let $allow_rpl_inited=1
--let $restart_parameters=restart:--group_replication_local_address=$local_address_server2 --group_replication_group_seeds=$group_seeds_server2 --group-replication-group-name=$group_replication_group_name
--replace_result $local_address_server2 GROUP_REPLICATION_LOCAL_ADDRESS $group_seeds_server2 GROUP_REPLICATION_GROUP_SEEDS $group_replication_group_name GROUP_REPLICATION_GROUP_NAME $hash_algorithm HASH_ALGORITHM
--source include/restart_mysqld.inc
--let $rpl_server_number= 2
--source include/rpl_reconnect.inc
# Start GR on server 2 and verify that the group stabilizes itself
--source include/start_group_replication.inc
--let $group_replication_number_of_members = 2
--source include/gr_wait_for_number_of_members.inc
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--let $group_replication_number_of_members = 2
--source include/gr_wait_for_number_of_members.inc

--echo
--echo #########################################################################
--echo # 6) Cleanup.
--echo #########################################################################
--echo
--source include/group_replication_end.inc

