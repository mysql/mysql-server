################################################################################
# Validate that group_replication_consistency= 'AFTER' only engage ONLINE members.
#
# Test:
# 00. The test requires three servers: M1, M2 and M3.
# 01. Create a table on server1 without log into the binlog.
#     Bootstrap the group.
#     Execute transaction T1.
# 02. Create a table on server2 without log into the binlog.
#     Join the group.
# 03. Create a table on server3 without log into the binlog.
#     Lock the table to block a future update.
#     Join the group.
# 04. Execute transaction T2.
#     Since server3 is RECOVERING it will not be engaged on
#     the AFTER consistency, only server 1 and 2 will participate.
# 05. Validate data.
# 06. Resume recovery on server3.
#     Validate that all servers have the same data.
# 07. Clean up.
################################################################################
--source include/have_group_replication_plugin.inc
--let $rpl_server_count= 3
--let $rpl_skip_group_replication_start= 1
--source include/group_replication.inc

--echo
--echo ############################################################
--echo # 01. Create a table on server1 without log into the binlog.
--echo #     Bootstrap the group.
--echo #     Execute transaction T1.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
SET SESSION sql_log_bin= 0;
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY);
SET SESSION sql_log_bin= 1;

--source include/start_and_bootstrap_group_replication.inc
# T1
INSERT INTO t1 VALUES (1);


--echo
--echo ############################################################
--echo # 02. Create a table on server2 without log into the binlog.
--echo #     Join the group.
--let $rpl_connection_name= server2
--source include/rpl_connection.inc
SET SESSION sql_log_bin= 0;
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY);
SET SESSION sql_log_bin= 1;

--source include/start_group_replication.inc


--echo
--echo ############################################################
--echo # 03. Create a table on server3 without log into the binlog.
--echo #     Lock the table to block a future update.
--echo #     Join the group.
--let $rpl_connection_name= server_3
--source include/rpl_connection.inc
SET SESSION sql_log_bin= 0;
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY);
SET SESSION sql_log_bin= 1;

LOCK table t1 READ;

--let $rpl_connection_name= server3
--source include/rpl_connection.inc
--let $group_replication_start_member_state= RECOVERING
--source include/start_group_replication.inc


--echo
--echo ############################################################
--echo # 04. Execute transaction T2.
--echo #     Since server3 is RECOVERING it will not be engaged on
--echo #     the AFTER consistency, only server 1 and 2 will participate.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
# T2
INSERT INTO t1 VALUES (2);


--echo
--echo ############################################################
--echo # 05. Validate data.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--let $assert_text= 'There is 1 value in table t1'
--let $assert_cond= [SELECT COUNT(*) AS count FROM t1 WHERE c1=1, count, 1] = 1
--source include/assert.inc
--let $assert_text= 'There is 2 value in table t1'
--let $assert_cond= [SELECT COUNT(*) AS count FROM t1 WHERE c1=2, count, 1] = 1
--source include/assert.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc
--let $assert_text= 'There is 1 value in table t1'
--let $assert_cond= [SELECT COUNT(*) AS count FROM t1 WHERE c1=1, count, 1] = 1
--source include/assert.inc
--let $assert_text= 'There is 2 value in table t1'
--let $assert_cond= [SELECT COUNT(*) AS count FROM t1 WHERE c1=2, count, 1] = 1
--source include/assert.inc

--let $rpl_connection_name= server3
--source include/rpl_connection.inc
--let $assert_text= 'There is no 1 value in table t1'
--let $assert_cond= [SELECT COUNT(*) AS count FROM t1 WHERE c1=1, count, 1] = 0
--source include/assert.inc
--let $assert_text= 'There is no 2 value in table t1'
--let $assert_cond= [SELECT COUNT(*) AS count FROM t1 WHERE c1=2, count, 1] = 0
--source include/assert.inc


--echo
--echo ############################################################
--echo # 06. Resume recovery on server3.
--echo #     Validate that all servers have the same data.
--let $rpl_connection_name= server_3
--source include/rpl_connection.inc
UNLOCK TABLES;

--let $group_replication_member_state= ONLINE
--source include/gr_wait_for_member_state.inc

# Needed since server3 was not considered on T2.
--source include/rpl_sync.inc
--let $diff_tables=server1:t1, server2:t1, server3:t1
--source include/diff_tables.inc


--echo
--echo ############################################################
--echo # 07. Clean up.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
DROP TABLE t1;

--source include/group_replication_end.inc
