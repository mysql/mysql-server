#
# Validate that Group Replication SSL mode works properly with TLS v1.3 when
# a valid configuration is set at server runtime.
#
# Steps:
# 0. Configure members to use encryption and save defaults.
# 1. 3 members group with OpenSSL 1.1.1
#    Verify that it is possible to join a node which has TLS version 1.3
#    and lower versions to a group which doesn't have this version.
#    No --tls-ciphersuites
#    server1: --tls-version='TLSv1,TLSv1.1,TLSv1.2'
#    server2: --tls-version='TLSv1,TLSv1.1,TLSv1.2'
#    server3: --tls-version='TLSv1,TLSv1.1,TLSv1.2,TLSv1.3'
#    Outcome: group will work.
# 2. 2 members group with OpenSSL 1.1.1
#    Verify that it is possible to start group replication when :
#      * TLS version is 1.3
#      * A TLS ciphersuite compatible with this version is enabled
#    --tls-version='TLSv1.3'
#    --tls-ciphersuites='TLS_AES_128_CCM_SHA256' (disabled by default)
#    Outcome: group will work.
# 3. 3 members group with OpenSSL 1.1.1
#    Verify that it is possible to start group replication when:
#      * TLS version is 1.3
#      * Intersection of the allowed TLS chipersuites is non empty and valid.
#    --tls-version='TLSv1.3'
#    server1: --tls-ciphersuites='TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384'
#    server2: --tls-ciphersuites='TLS_AES_256_GCM_SHA384:TLS_AES_128_CCM_SHA256'
#    server3: --tls-ciphersuites='TLS_AES_128_CCM_8_SHA256: TLS_AES_256_GCM_SHA384'
#    Outcome: group will work.
# 4. 3 members group with OpenSSL 1.1.1
#    Verify that is is possible to join a node to a group when:
#      * List of TLS version of the group includes v1.3 and lower versions
#      * TLS chipersuites of the node is compatible  with the group,
#         therefore TLS v1.3 is supported
#      * SLL cipher of the node is incompatible with the group, therefore
#         TLS versions lower than 1.3 are not supported
#    --tls-version='TLSv1,TLSv1.1,TLSv1.2,TLSv1.3'
#    server1: --tls-ciphersuites='TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384'
#    server1: --ssl-cipher='AES256-SHA:AES256-SHA256'
#    server2: --tls-ciphersuites='TLS_AES_256_GCM_SHA384:TLS_AES_128_CCM_SHA256'
#    server2: --ssl-cipher='CAMELLIA256-SHA'
#    server3: --tls-ciphersuites='TLS_AES_256_GCM_SHA384'
#    server3: --ssl-cipher='CAMELLIA128-SHA'
#    Outcome: group will work.
# 5. Clean up.
#


--source include/big_test.inc
--source include/have_tlsv13.inc
--source include/have_group_replication_plugin.inc
--let $rpl_server_count= 3
--source include/force_restart.inc
--let $rpl_skip_group_replication_start= 1
--source include/group_replication.inc


--echo
--echo ############################################################
--echo # 0. Configure members to use encryption and save defaults.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
SET @tls_version_save= @@GLOBAL.tls_version;
SET @tls_ciphersuites_save= @@GLOBAL.tls_ciphersuites;
SET @ssl_cipher_save= @@GLOBAL.ssl_cipher;
SET @group_replication_ssl_mode_save= @@GLOBAL.group_replication_ssl_mode;
SET @@GLOBAL.group_replication_ssl_mode= REQUIRED;

--let $rpl_connection_name= server2
--source include/rpl_connection.inc
SET @tls_version_save= @@GLOBAL.tls_version;
SET @tls_ciphersuites_save= @@GLOBAL.tls_ciphersuites;
SET @ssl_cipher_save= @@GLOBAL.ssl_cipher;
SET @group_replication_ssl_mode_save= @@GLOBAL.group_replication_ssl_mode;
SET @@GLOBAL.group_replication_ssl_mode= REQUIRED;

SET SESSION sql_log_bin= 0;
call mtr.add_suppression("\\[GCS\\] Error connecting to all peers. Member join failed. Local port:*");
call mtr.add_suppression("\\[GCS\\] The member was unable to join the group.*");
call mtr.add_suppression("Timeout on wait for view after joining group");
call mtr.add_suppression("Error connecting to the local group communication engine instance");
SET SESSION sql_log_bin= 1;

--let $rpl_connection_name= server3
--source include/rpl_connection.inc
SET @tls_version_save= @@GLOBAL.tls_version;
SET @tls_ciphersuites_save= @@GLOBAL.tls_ciphersuites;
SET @ssl_cipher_save= @@GLOBAL.ssl_cipher;
SET @group_replication_ssl_mode_save= @@GLOBAL.group_replication_ssl_mode;
SET @@GLOBAL.group_replication_ssl_mode= REQUIRED;

SET SESSION sql_log_bin= 0;
call mtr.add_suppression("\\[GCS\\] Error connecting to all peers. Member join failed. Local port:*");
call mtr.add_suppression("\\[GCS\\] The member was unable to join the group.*");
call mtr.add_suppression("Timeout on wait for view after joining group");
call mtr.add_suppression("Error connecting to the local group communication engine instance");
SET SESSION sql_log_bin= 1;


--echo
--echo ############################################################
--echo # 1. 3 members group with OpenSSL 1.1.1
--echo #    Verify that it is possible to join a node which has TLS version 1.3
--echo #    and lower versions to a group which doesn't have this version.
--echo #    No --tls-ciphersuites
--echo #    server1: --tls-version='TLSv1,TLSv1.1,TLSv1.2'
--echo #    server2: --tls-version='TLSv1,TLSv1.1,TLSv1.2'
--echo #    server3: --tls-version='TLSv1,TLSv1.1,TLSv1.2,TLSv1.3'
--echo #    Outcome: group will work.


--let $rpl_connection_name= server1
--source include/rpl_connection.inc

SET @@GLOBAL.tls_version= 'TLSv1,TLSv1.1,TLSv1.2';
ALTER INSTANCE RELOAD TLS;
--source include/start_and_bootstrap_group_replication.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc

SET @@GLOBAL.tls_version= 'TLSv1,TLSv1.1,TLSv1.2';
ALTER INSTANCE RELOAD TLS;
--source include/start_group_replication.inc

--let $rpl_connection_name= server3
--source include/rpl_connection.inc

SET @@GLOBAL.tls_version= 'TLSv1,TLSv1.1,TLSv1.2,TLSv1.3';
ALTER INSTANCE RELOAD TLS;
--source include/start_group_replication.inc

--let $group_replication_number_of_members= 3
--source include/gr_wait_for_number_of_members.inc

--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--source include/stop_group_replication.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc
--source include/stop_group_replication.inc

--let $rpl_connection_name= server3
--source include/rpl_connection.inc
--source include/stop_group_replication.inc


--echo
--echo ############################################################
--echo # 2. 2 members group with OpenSSL 1.1.1
--echo #    Verify that it is possible to start group replication when :
--echo #      * TLS version is 1.3
--echo #      * A TLS ciphersuite compatible with this version is enabled
--echo #    --tls-version='TLSv1.3'
--echo #    --tls-ciphersuites='TLS_AES_128_CCM_SHA256' (disabled by default)
--echo #    Outcome: group will work.


--let $rpl_connection_name= server1
--source include/rpl_connection.inc

SET @@GLOBAL.tls_version= 'TLSv1.3';
SET @@GLOBAL.tls_ciphersuites= 'TLS_AES_128_CCM_SHA256';
ALTER INSTANCE RELOAD TLS;
--source include/start_and_bootstrap_group_replication.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc

SET @@GLOBAL.tls_version= 'TLSv1.3';
SET @@GLOBAL.tls_ciphersuites= 'TLS_AES_128_CCM_SHA256';
ALTER INSTANCE RELOAD TLS;
--source include/start_group_replication.inc

--let $group_replication_number_of_members= 2
--source include/gr_wait_for_number_of_members.inc

--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--source include/stop_group_replication.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc
--source include/stop_group_replication.inc


--echo
--echo ############################################################
--echo # 3. 3 members group with OpenSSL 1.1.1
--echo #    Verify that it is possible to start group replication when:
--echo #      * TLS version is 1.3
--echo #      * Intersection of the allowed TLS chipersuites is non empty and valid.
--echo #    --tls-version='TLSv1.3'
--echo #    server1: --tls-ciphersuites='TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384'
--echo #    server2: --tls-ciphersuites='TLS_AES_256_GCM_SHA384:TLS_AES_128_CCM_SHA256'
--echo #    server3: --tls-ciphersuites='TLS_AES_128_CCM_8_SHA256: TLS_AES_256_GCM_SHA384'
--echo #    Outcome: group will work.


--let $rpl_connection_name= server1
--source include/rpl_connection.inc

SET @@GLOBAL.tls_version= 'TLSv1.3';
SET @@GLOBAL.tls_ciphersuites= 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384';
ALTER INSTANCE RELOAD TLS;
--source include/start_and_bootstrap_group_replication.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc

SET @@GLOBAL.tls_version= 'TLSv1.3';
SET @@GLOBAL.tls_ciphersuites= 'TLS_AES_256_GCM_SHA384:TLS_AES_128_CCM_SHA256';
ALTER INSTANCE RELOAD TLS;
--source include/start_group_replication.inc

--let $rpl_connection_name= server3
--source include/rpl_connection.inc

SET @@GLOBAL.tls_version= 'TLSv1.3';
SET @@GLOBAL.tls_ciphersuites= 'TLS_AES_128_CCM_8_SHA256: TLS_AES_256_GCM_SHA384';
ALTER INSTANCE RELOAD TLS;
--source include/start_group_replication.inc

--let $group_replication_number_of_members= 3
--source include/gr_wait_for_number_of_members.inc

--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--source include/stop_group_replication.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc
--source include/stop_group_replication.inc

--let $rpl_connection_name= server3
--source include/rpl_connection.inc
--source include/stop_group_replication.inc


--echo
--echo ############################################################
--echo # 4. 3 members group with OpenSSL 1.1.1
--echo #    Verify that is is possible to join a node to a group when:
--echo #      * List of TLS version of the group includes v1.3 and lower versions
--echo #      * TLS chipersuites of the node is compatible  with the group,
--echo #         therefore TLS v1.3 is supported
--echo #      * SLL cipher of the node is incompatible with the group, therefore
--echo #         TLS versions lower than 1.3 are not supported
--echo #    --tls-version='TLSv1,TLSv1.1,TLSv1.2,TLSv1.3'
--echo #    server1: --tls-ciphersuites='TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384'
--echo #    server1: --ssl-cipher='AES256-SHA:AES256-SHA256'
--echo #    server2: --tls-ciphersuites='TLS_AES_256_GCM_SHA384:TLS_AES_128_CCM_SHA256'
--echo #    server2: --ssl-cipher='CAMELLIA256-SHA'
--echo #    server3: --tls-ciphersuites='TLS_AES_256_GCM_SHA384'
--echo #    server3: --ssl-cipher='CAMELLIA128-SHA'
--echo #    Outcome: group will work.

--let $rpl_connection_name= server1
--source include/rpl_connection.inc

SET @@GLOBAL.tls_version= 'TLSv1,TLSv1.1,TLSv1.2,TLSv1.3';
SET @@GLOBAL.ssl_cipher= 'AES256-SHA:AES256-SHA256';
SET @@GLOBAL.tls_ciphersuites= 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384';
ALTER INSTANCE RELOAD TLS;
--source include/start_and_bootstrap_group_replication.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc

SET @@GLOBAL.tls_version= 'TLSv1,TLSv1.1,TLSv1.2,TLSv1.3';
SET @@GLOBAL.ssl_cipher= 'CAMELLIA256-SHA';
SET @@GLOBAL.tls_ciphersuites  ='TLS_AES_256_GCM_SHA384:TLS_AES_128_CCM_SHA256';
ALTER INSTANCE RELOAD TLS;
--source include/start_group_replication.inc

--let $rpl_connection_name= server3
--source include/rpl_connection.inc

SET @@GLOBAL.tls_version= 'TLSv1,TLSv1.1,TLSv1.2,TLSv1.3';
SET @@GLOBAL.ssl_cipher = 'CAMELLIA128-SHA';
SET @@GLOBAL.tls_ciphersuites = 'TLS_AES_256_GCM_SHA384';
ALTER INSTANCE RELOAD TLS;
--source include/start_group_replication.inc

--let $group_replication_number_of_members= 3
--source include/gr_wait_for_number_of_members.inc

--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--source include/stop_group_replication.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc
--source include/stop_group_replication.inc

--let $rpl_connection_name= server3
--source include/rpl_connection.inc
--source include/stop_group_replication.inc


--echo
--echo ############################################################
--echo # 5. Clean up.

--let $rpl_connection_name= server1
--source include/rpl_connection.inc
SET @@GLOBAL.group_replication_ssl_mode= @group_replication_ssl_mode_save;
SET @@GLOBAL.tls_version= @tls_version_save;
SET @@GLOBAL.tls_ciphersuites= @tls_ciphersuites_save;
SET @@GLOBAL.ssl_cipher = @ssl_cipher_save;
ALTER INSTANCE RELOAD TLS;

--let $rpl_connection_name= server2
--source include/rpl_connection.inc
SET @@GLOBAL.group_replication_ssl_mode= @group_replication_ssl_mode_save;
SET @@GLOBAL.tls_version= @tls_version_save;
SET @@GLOBAL.tls_ciphersuites= @tls_ciphersuites_save;
SET @@GLOBAL.ssl_cipher = @ssl_cipher_save;
ALTER INSTANCE RELOAD TLS;

--let $rpl_connection_name= server3
--source include/rpl_connection.inc
SET @@GLOBAL.group_replication_ssl_mode= @group_replication_ssl_mode_save;
SET @@GLOBAL.tls_version= @tls_version_save;
SET @@GLOBAL.tls_ciphersuites = @tls_ciphersuites_save;
SET @@GLOBAL.ssl_cipher = @ssl_cipher_save;
ALTER INSTANCE RELOAD TLS;

--source include/group_replication_end.inc
