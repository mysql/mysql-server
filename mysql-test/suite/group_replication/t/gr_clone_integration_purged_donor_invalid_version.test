################################################################################
# Validate that when a member joins a group, and it is missing data that was
# purged from group binary logs, the joiner member will proceed by cloning a
# a group member. Since server2 is from a higher major version than the
# donor, cloning will not be possible and the joiner will error out.
#
# Test:
# 0. The test requires two servers: M1 and M2.
# 1. Install clone plugin on server1.
#    Commit some data and then purge all binary logs.
#    Bootstrap a group on server1.
# 2. Install clone plugin on server2.
#    Start GR, cloning is the option chosen as recovery
#    from binary logs is not possible.
#    But this server is from a higher major version than the donor,
#    so cloning is not possible and the joiner will error out.
# 3. Cleanup
#

--source include/have_debug.inc
--source include/have_clone_plugin.inc
--source include/have_group_replication_plugin.inc
--let $rpl_skip_group_replication_start= 1
--source include/group_replication.inc

# Validate plugins
--let plugins = CLONE_PLUGIN,GROUP_REPLICATION
--source include/check_plugin_dir.inc

--echo
--echo ############################################################
--echo # 1. Install clone plugin on server1.
--echo #    Commit some data and then purge all binary logs.
--echo #    Bootstrap a group on server1.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc

# Install the clone plugin
--replace_result $CLONE_PLUGIN CLONE_PLUGIN
--eval INSTALL PLUGIN clone SONAME '$CLONE_PLUGIN'

# Add some data for recovery
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);
INSERT INTO t1 VALUES (2);

# Purge binary logs.
SET sql_log_bin = 0;
--source include/gtid_utils.inc
SET sql_log_bin = 1;

FLUSH BINARY LOGS;
--let $server_binlog_file_cur= query_get_value(SHOW MASTER STATUS, File, 1)
--replace_result $server_binlog_file_cur CURRENT_BINLOG_FILE
--eval PURGE BINARY LOGS TO '$server_binlog_file_cur'

--let $assert_text = GTID_PURGED must be equal to GTID_EXECUTED
--let $assert_cond = GTID_IS_EQUAL(@@GLOBAL.GTID_PURGED, @@GLOBAL.GTID_EXECUTED)
--source include/assert.inc

--source include/start_and_bootstrap_group_replication.inc

--echo
--echo ############################################################
--echo # 2. Install clone plugin on server2.
--echo #    Start GR, cloning is the option chosen as recovery
--echo #    from binary logs is not possible.
--echo #    But this server is from a higher major version than the donor,
--echo #    so cloning is not possible and the joiner will error out.

# Install the clone plugin
--let $rpl_connection_name= server2
--source include/rpl_connection.inc

--replace_result $CLONE_PLUGIN CLONE_PLUGIN
--eval INSTALL PLUGIN clone SONAME '$CLONE_PLUGIN'

# Cause the member to broadcast and compare himself using a higher version
SET @@GLOBAL.DEBUG= '+d,group_replication_compatibility_higher_major_version';

--let $group_replication_start_member_state= ERROR
--source include/start_group_replication.inc

--source include/stop_group_replication.inc

--echo
--echo ############################################################
--echo # 3. Cleanup.
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
DROP TABLE t1;
--source include/gtid_utils_end.inc

UNINSTALL PLUGIN clone;

--let $rpl_connection_name= server2
--source include/rpl_connection.inc
SET @@GLOBAL.DEBUG= '-d,group_replication_compatibility_higher_major_version';

UNINSTALL PLUGIN clone;

SET SESSION sql_log_bin=0;
call mtr.add_suppression("No valid or ONLINE members exist to get the missing data from the group. For cloning check if donors of the same version and with clone plugin installed exist. For incremental recovery check.*");
call mtr.add_suppression("Skipping leave operation: concurrent attempt to leave the group is on-going.");
call mtr.add_suppression("Member version is read compatible with the group.");
call mtr.add_suppression("The server was automatically set into read only mode after an error was detected.");
SET SESSION sql_log_bin=1;

--source include/group_replication_end.inc
