################################################################################
# The test to check group_replication_set_as_primary() UDF functionality with
# timeout option from both primary and secondary members.
#
# Test:
# 0. The test requires two servers: M1 and M2.
# 1. Start group in single primary mode.
#    Server1 will be primary and server 2 secondary.
# 2. Run UDF group_replication_set_as_primary from server2.
# 2.A. Promote server2 as a new primary.
# 2.B. Promote server1 as a new primary.
# 3. Run UDF group_replication_set_as_primary from server1.
# 3.A. Make server2 primary from server1(present primary).
# 3.B. Make server1 primary from server1(present secondary).
# 4. Cleanup.
################################################################################

--source include/have_group_replication_plugin.inc
--let $rpl_skip_group_replication_start= 1
--let $rpl_group_replication_single_primary_mode=1
--source include/group_replication.inc

--echo
--echo # 1. Start group in single primary mode.
--echo #    Server1 will be primary and server 2 secondary.

--let $server1_uuid= query_get_value(SELECT @@SERVER_UUID, @@SERVER_UUID, 1)
--source include/start_and_bootstrap_group_replication.inc

--let $rpl_connection_name= server2
--source include/rpl_connection.inc

--let $server2_uuid= query_get_value(SELECT @@SERVER_UUID, @@SERVER_UUID, 1)
--source include/start_group_replication.inc

--echo
--echo # 2. Run UDF group_replication_set_as_primary from server2.
--echo # 2.A. Promote server2 as a new primary.

--let $_begin= `SELECT UNIX_TIMESTAMP()`
--replace_result $server2_uuid SERVER2_UUID
--eval SELECT group_replication_set_as_primary("$server2_uuid", 600)

--let $_end= `SELECT UNIX_TIMESTAMP()`
--let $_delta= `SELECT $_end - $_begin`
--let $assert_text = Time elapsed must be less than the timeout
--let $assert_cond = $_delta < 600
--source include/assert.inc

--source include/gr_assert_primary_member.inc
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--source include/gr_assert_secondary_member.inc


--echo
--echo # 2.B. Promote server1 as a new primary.

--let $rpl_connection_name= server2
--source include/rpl_connection.inc

--let $_begin= `SELECT UNIX_TIMESTAMP()`
--replace_result $server1_uuid SERVER1_UUID
--eval SELECT group_replication_set_as_primary("$server1_uuid", 600)

--let $_end= `SELECT UNIX_TIMESTAMP()`
--let $_delta= `SELECT $_end - $_begin`
--let $assert_text = Time elapsed must be less than the timeout
--let $assert_cond = $_delta < 600
--source include/assert.inc

--source include/gr_assert_secondary_member.inc
--let $rpl_connection_name= server1
--source include/rpl_connection.inc
--source include/gr_assert_primary_member.inc

--echo
--echo # 3. Run UDF group_replication_set_as_primary from server1.
--echo # 3.A. Make server2 primary from server1(present primary).

--let $rpl_connection_name= server1
--source include/rpl_connection.inc

--let $_begin= `SELECT UNIX_TIMESTAMP()`
--replace_result $server2_uuid SERVER2_UUID
--eval SELECT group_replication_set_as_primary("$server2_uuid", 600)

--let $_end= `SELECT UNIX_TIMESTAMP()`
--let $_delta= `SELECT $_end - $_begin`
--let $assert_text = Time elapsed must be less than the timeout
--let $assert_cond = $_delta < 600
--source include/assert.inc

--source include/gr_assert_secondary_member.inc
--let $rpl_connection_name= server2
--source include/rpl_connection.inc
--source include/gr_assert_primary_member.inc

--echo
--echo # 3.B. Make server1 primary from server1(present secondary).

--let $rpl_connection_name= server1
--source include/rpl_connection.inc

--let $_begin= `SELECT UNIX_TIMESTAMP()`
--replace_result $server1_uuid SERVER1_UUID
--eval SELECT group_replication_set_as_primary("$server1_uuid", 600)

--let $_end= `SELECT UNIX_TIMESTAMP()`
--let $_delta= `SELECT $_end - $_begin`
--let $assert_text = Time elapsed must be less than the timeout
--let $assert_cond = $_delta < 600
--source include/assert.inc

--source include/gr_assert_primary_member.inc
--let $rpl_connection_name= server2
--source include/rpl_connection.inc
--source include/gr_assert_secondary_member.inc

--echo
--echo # 4. Cleanup.

--source include/group_replication_end.inc
