set default_storage_engine=innodb;
# ----------------------------------------------------------------------
# Test of aggregate function GROUP_CONCAT
# ----------------------------------------------------------------------
create table t2(j json);
insert into t2 values (json_array(ST_GeomFromText('LineString(0 0, 1 1, 2 2)')));
select group_concat(j order by j) from t2;
group_concat(j order by j)
[{"type": "LineString", "coordinates": [[0, 0], [1, 1], [2, 2]]}]
drop table t2;
create table t (c varchar(20));
insert into t values ('\\');
select char_length(c) from t;
char_length(c)
1
insert into t values (X'0C');
select sum(char_length(c)) from t;
sum(char_length(c))
2
insert into t values ('"');
select sum(char_length(c)) from t;
sum(char_length(c))
3
insert into t values ('\a');
select sum(char_length(c)) from t;
sum(char_length(c))
4
insert into t values ('\b');
select sum(char_length(c)) from t;
sum(char_length(c))
5
insert into t values ('\t');
select sum(char_length(c)) from t;
sum(char_length(c))
6
insert into t values ('\n');
select sum(char_length(c)) from t;
sum(char_length(c))
7
insert into t values ('\r');
select sum(char_length(c)) from t;
sum(char_length(c))
8
insert into t values (X'10');
select sum(char_length(c)) from t;
sum(char_length(c))
9
select group_concat(c order by c) from t;
group_concat(c order by c)
,	,
,,,,",a,\
select char_length(group_concat(c)) from t;
char_length(group_concat(c))
17
select json_quote(group_concat(c order by c)) from t;
json_quote(group_concat(c order by c))
"\b,\t,\n,\f,\r,\u0010,\",a,\\"
select char_length(json_quote(group_concat(c))) from t;
char_length(json_quote(group_concat(c)))
31
select convert(group_concat(c) using utf8mb4) =
json_unquote(group_concat(c)) as should_be_equal from t;
should_be_equal
1
delete from t;
alter table t add column (j json);
insert into t values (NULL, NULL);
select json_quote(c), json_quote(j) from t;
json_quote(c)	json_quote(j)
NULL	NULL
select json_unquote(c), json_unquote(j) from t;
json_unquote(c)	json_unquote(j)
NULL	NULL
drop table t;
create table t(j json, c varchar(20));
show create table t;
Table	Create Table
t	CREATE TABLE `t` (
  `j` json DEFAULT NULL,
  `c` varchar(20) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1
insert into t values (cast('[1,2,3]' as json), '[a,b,c]');
insert into t values (cast(7 as json), '7'),  (cast(2 as json), '2');
insert into t values (cast(7 as json), '7'),  (cast(2 as json), '2');
select group_concat(j), group_concat(distinct j), group_concat(c) from t;
group_concat(j)	group_concat(distinct j)	group_concat(c)
[1, 2, 3],7,2,7,2	[1, 2, 3],7,2	[a,b,c],7,2,7,2
select group_concat(j order by j), group_concat(distinct j order by j), group_concat(c order by c) from t;
group_concat(j order by j)	group_concat(distinct j order by j)	group_concat(c order by c)
[1, 2, 3],2,2,7,7	[1, 2, 3],2,7	2,2,7,7,[a,b,c]
insert into t values (NULL, NULL);
select group_concat(j), group_concat(distinct j), group_concat(c) from t;
group_concat(j)	group_concat(distinct j)	group_concat(c)
[1, 2, 3],7,2,7,2	[1, 2, 3],7,2	[a,b,c],7,2,7,2
drop table t;
