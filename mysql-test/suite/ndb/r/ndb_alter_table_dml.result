create table parent(a int primary key, b int, key(b)) engine=ndb
comment="NDB_TABLE=PARTITION_BALANCE=FOR_RP_BY_LDM";
create table child(a int primary key, b int) engine=ndb
comment="NDB_TABLE=PARTITION_BALANCE=FOR_RP_BY_LDM";
insert into parent values (1,1), (2,2), (3,3), (4,4);
insert into parent select a+4, b+4 from parent;
insert into parent select a+8, b+8 from parent;
insert into parent select a+16, b+16 from parent;
insert into parent select a+32, b+32 from parent;
insert into parent select a+64, b+64 from parent;
insert into parent select a+128, b+128 from parent;
insert into parent select a+256, b+256 from parent;
insert into parent select a+512, b+512 from parent;
insert into parent select a+1024, b+1024 from parent;
insert into parent select a+2048, b+2048 from parent;
insert into parent select a+4096, b+4096 from parent;
insert into child select * from parent;
set ndb_join_pushdown = false;
explain
select count(*)
from parent join child
on (parent.b = child.a)
where parent.b > 5;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	parent	p0,p1,p2,p3,p4,p5,p6,p7	range	b	b	5	NULL	819	100.00	Using pushed condition ((`test`.`parent`.`b` > 5) and (`test`.`parent`.`b` is not null)); Using MRR
1	SIMPLE	child	p0,p1,p2,p3,p4,p5,p6,p7	eq_ref	PRIMARY	PRIMARY	4	test.parent.b	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select count(0) AS `count(*)` from `test`.`parent` join `test`.`child` where ((`test`.`child`.`a` = `test`.`parent`.`b`) and (`test`.`parent`.`b` > 5))
Starting engines...
call queryload(10);
call queryload(10);
call queryload(10);
call queryload(10);
Beginning alter table child  partition by key(a) partitions 4;
alter table child  partition by key(a) partitions 4;
Completed.
Ending test. Droping table parent
drop table parent;
drop table child;
drop procedure queryload;
