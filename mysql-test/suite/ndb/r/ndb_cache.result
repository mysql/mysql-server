drop table if exists t1;
set GLOBAL query_cache_type=on;
set GLOBAL query_cache_size=1355776;
reset query cache;
flush status;
CREATE TABLE t1 ( pk int not null primary key,
a int, b int not null, c varchar(20)) ENGINE=ndbcluster;
insert into t1 value (1, 2, 3, 'First row');
select * from t1;
pk	a	b	c
1	2	3	First row
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	1
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	1
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	0
select * from t1;
pk	a	b	c
1	2	3	First row
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	1
update t1 set a=3 where pk=1;
select * from t1;
pk	a	b	c
1	3	3	First row
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	2
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	1
insert into t1 value (2, 7, 8, 'Second row');
insert into t1 value (4, 5, 6, 'Fourth row');
select * from t1 order by pk;
pk	a	b	c
1	3	3	First row
2	7	8	Second row
4	5	6	Fourth row
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	3
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	1
select * from t1 order by pk;
pk	a	b	c
1	3	3	First row
2	7	8	Second row
4	5	6	Fourth row
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	2
select * from t1 where b=3;
pk	a	b	c
1	3	3	First row
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	2
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	2
select * from t1 where b=3;
pk	a	b	c
1	3	3	First row
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	3
delete from t1 where c='Fourth row';
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	0
select * from t1 where b=3;
pk	a	b	c
1	3	3	First row
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	3
use test;
select * from t1 order by pk;
pk	a	b	c
1	3	3	First row
2	7	8	Second row
select * from t1 where b=3;
pk	a	b	c
1	3	3	First row
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	4
update t1 set a=4 where b=3;
use test;
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	0
select * from t1 order by pk desc;
pk	a	b	c
2	7	8	Second row
1	4	3	First row
select * from t1 order by pk desc;
pk	a	b	c
2	7	8	Second row
1	4	3	First row
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	7
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	5
select * from t1 order by pk desc;
pk	a	b	c
2	7	8	Second row
1	4	3	First row
select * from t1 order by pk desc;
pk	a	b	c
2	7	8	Second row
1	4	3	First row
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	1
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	7
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	7
begin;
update t1 set a=5 where pk=1;
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	0
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	7
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	7
select * from t1 order by pk desc;
pk	a	b	c
2	7	8	Second row
1	4	3	First row
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	1
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	8
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	7
commit;
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	1
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	8
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	7
select * from t1 order by pk desc;
pk	a	b	c
2	7	8	Second row
1	5	3	First row
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	9
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	7
select * from t1 order by pk desc;
pk	a	b	c
2	7	8	Second row
1	5	3	First row
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	1
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	9
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	8
drop table t1;
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	0
reset query cache;
flush status;
create table t1 (a int primary key,
b text,
c int,
key(c))
engine=ndb;
insert into t1 values (1,'Alexandra', 1), (2,'Palace', 2);
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	0
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	0
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	0
show status like "Qcache_not_cached";
Variable_name	Value
Qcache_not_cached	0
select * from t1 order by a;
a	b	c
1	Alexandra	1
2	Palace	2
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	1
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	1
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	0
show status like "Qcache_not_cached";
Variable_name	Value
Qcache_not_cached	0
select * from t1 order by a;
a	b	c
1	Alexandra	1
2	Palace	2
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	1
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	1
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	1
show status like "Qcache_not_cached";
Variable_name	Value
Qcache_not_cached	0
select * from t1 force index(c) where c < 2 order by c;
a	b	c
1	Alexandra	1
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	2
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	2
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	1
show status like "Qcache_not_cached";
Variable_name	Value
Qcache_not_cached	0
select * from t1 force index(c) where c < 2 order by c;
a	b	c
1	Alexandra	1
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	2
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	2
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	2
show status like "Qcache_not_cached";
Variable_name	Value
Qcache_not_cached	0
drop table t1;
CREATE LOGFILE GROUP lfg
ADD UNDOFILE 'myundo.log'
INITIAL_SIZE 16M
UNDO_BUFFER_SIZE = 1M
ENGINE=NDB;
CREATE TABLESPACE tbsp
ADD DATAFILE 'mydatafile.fil'
USE LOGFILE GROUP lfg
INITIAL_SIZE 12M
ENGINE=NDB;
create table t1 (a int primary key,
b text,
c int,
key(c))
storage disk tablespace tbsp engine ndb;
insert into t1 values (1,'Alexandra', 1), (2,'Palace', 2);
reset query cache;
flush status;
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	0
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	0
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	0
show status like "Qcache_not_cached";
Variable_name	Value
Qcache_not_cached	0
select * from t1 order by a;
a	b	c
1	Alexandra	1
2	Palace	2
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	1
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	1
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	0
show status like "Qcache_not_cached";
Variable_name	Value
Qcache_not_cached	0
select * from t1 order by a;
a	b	c
1	Alexandra	1
2	Palace	2
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	1
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	1
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	1
show status like "Qcache_not_cached";
Variable_name	Value
Qcache_not_cached	0
select * from t1 force index (c) where c < 2 order by c;
a	b	c
1	Alexandra	1
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	2
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	2
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	1
show status like "Qcache_not_cached";
Variable_name	Value
Qcache_not_cached	0
select * from t1 force index (c) where c < 2 order by c;
a	b	c
1	Alexandra	1
show status like "Qcache_queries_in_cache";
Variable_name	Value
Qcache_queries_in_cache	2
show status like "Qcache_inserts";
Variable_name	Value
Qcache_inserts	2
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	2
show status like "Qcache_not_cached";
Variable_name	Value
Qcache_not_cached	0
drop table t1;
alter tablespace tbsp drop datafile 'mydatafile.fil' engine ndb;
drop tablespace tbsp engine ndb;
drop logfile group lfg engine ndb;
reset query cache;
flush status;
pk	a	b	c
1	2	3	First row
pk	a	b	c
1	2	3	First row
pk	a	b	c
1	2	3	First row
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	1
#Setup the tables
create table t1(
a int unique key,
b int unique key,
c int
)engine ndb;
create table t2(
a int unique key,
b int unique key,
foreign key fk1(a) references t1(a) on update cascade,
foreign key fk2(b) references t1(b) on delete cascade
)engine ndb;
create table t3(
a int,
b int,
foreign key fk3(a) references t2(a) on update set null on delete set null,
foreign key fk4(b) references t2(b) on update set null on delete set null
)engine ndb;
insert into t1 values (1, 1, 1), (2, 4, 4), (3, 9, 9), (4, 16, 1);
insert into t2 values (1, 1), (2, 4), (3, 9);
insert into t3 values (2, 4), (3, 9);
alter table t1 add foreign key fk5(c) references t2(b) on delete set null;
begin;
#following gets stored in cache
select * from t1 order by 1;
a	b	c
1	1	1
2	4	4
3	9	9
4	16	1
select * from t2 order by a;
a	b
1	1
2	4
3	9
select * from t3 order by a;
a	b
2	4
3	9
#update t1 and check if t2/t3 recent values are shown
update t1 set a = 50 where a = 1;
#these should not be fetched from query cache now
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	1
select * from t1 order by 1;
a	b	c
2	4	4
3	9	9
4	16	1
50	1	1
select * from t2 order by a;
a	b
2	4
3	9
50	1
select * from t3 order by a;
a	b
2	4
3	9
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	1
rollback;
begin;
select * from t1 order by a;
a	b	c
1	1	1
2	4	4
3	9	9
4	16	1
select * from t2 order by a;
a	b
1	1
2	4
3	9
select * from t3 order by a;
a	b
2	4
3	9
#check if query cache invalidation works with delete
delete from t2 where b = 9;
#do not fetch from query cache
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	3
select * from t1 order by a;
a	b	c
1	1	1
2	4	4
3	9	NULL
4	16	1
select * from t2 order by a;
a	b
1	1
2	4
select * from t3 order by a;
a	b
NULL	NULL
2	4
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	3
rollback;
begin;
select * from t1 order by a;
a	b	c
1	1	1
2	4	4
3	9	9
4	16	1
select * from t2 order by a;
a	b
1	1
2	4
3	9
select * from t3 order by a;
a	b
2	4
3	9
#check if query cache works for parent table when child table is updated
update t3 set b = 1 where b = 4;
#fetch from query cache
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	5
select * from t1 order by a;
a	b	c
1	1	1
2	4	4
3	9	9
4	16	1
select * from t2 order by a;
a	b
1	1
2	4
3	9
show status like "Qcache_hits";
Variable_name	Value
Qcache_hits	7
rollback;
#cleanup
alter table t1 drop foreign key fk5;
drop table t3, t2, t1;
SET GLOBAL query_cache_size=0;
