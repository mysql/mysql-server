create table t1 (id int primary key, a int not null, b decimal (63,30) default 0) engine=ndb;
create table t2 (op char(1), a int not null, b decimal (63,30)) engine=ndb;
create table t3  engine=ndb select 1 as i;
create table t4 (a int not null primary key, b int) engine=ndb;
create table t5 (a int not null primary key, b int) engine=ndb;
create trigger t1_bu before update on t1 for each row
begin
insert into t2 values ("u", old.a, old.b);
set new.b = old.b + 10;
end;//
create trigger t1_bd before delete on t1 for each row
begin
insert into t2 values ("d", old.a, old.b);
end;//
create trigger t4_au after update on t4
for each row begin
update t5 set b = b+1;
end;
//
create trigger t4_ad after delete on t4
for each row begin
update t5 set b = b+1;
end;
//
insert into t1 values (1, 1, 1.05), (2, 2, 2.05), (3, 3, 3.05), (4, 4, 4.05);
insert into t4 values (1,1), (2,2), (3,3), (4, 4);
insert into t5 values (1,0);
update t1 set a=5 where a != 3;
select * from t1 order by id;
id	a	b
1	5	11.050000000000000000000000000000
2	5	12.050000000000000000000000000000
3	3	3.050000000000000000000000000000
4	5	14.050000000000000000000000000000
select * from t2 order by op, a, b;
op	a	b
u	1	1.050000000000000000000000000000
u	2	2.050000000000000000000000000000
u	4	4.050000000000000000000000000000
delete from t2;
update t1, t3 set a=6 where a = 5;
select * from t1 order by id;
id	a	b
1	6	21.050000000000000000000000000000
2	6	22.050000000000000000000000000000
3	3	3.050000000000000000000000000000
4	6	24.050000000000000000000000000000
select * from t2 order by op, a, b;
op	a	b
u	5	11.050000000000000000000000000000
u	5	12.050000000000000000000000000000
u	5	14.050000000000000000000000000000
delete from t2;
delete from t1 where a != 3;
select * from t1 order by id;
id	a	b
3	3	3.050000000000000000000000000000
select * from t2 order by op, a, b;
op	a	b
d	6	21.050000000000000000000000000000
d	6	22.050000000000000000000000000000
d	6	24.050000000000000000000000000000
delete from t2;
insert into t1 values (1, 1, 1.05), (2, 2, 2.05), (4, 4, 4.05);
delete t1 from t1, t3 where a != 3;
select * from t1 order by id;
id	a	b
3	3	3.050000000000000000000000000000
select * from t2 order by op, a, b;
op	a	b
d	1	1.050000000000000000000000000000
d	2	2.050000000000000000000000000000
d	4	4.050000000000000000000000000000
delete from t2;
insert into t1 values (4, 4, 4.05);
insert into t1 (id, a) values (4, 1), (3, 1) on duplicate key update a= a + 1;
select * from t1 order by id;
id	a	b
3	4	13.050000000000000000000000000000
4	5	14.050000000000000000000000000000
select * from t2 order by op, a, b;
op	a	b
u	3	3.050000000000000000000000000000
u	4	4.050000000000000000000000000000
delete from t2;
delete from t3;
insert into t3 values (4), (3);
insert into t1 (id, a) (select i, 1 from t3) on duplicate key update a= a + 1;
select * from t1 order by id;
id	a	b
3	5	23.050000000000000000000000000000
4	6	24.050000000000000000000000000000
select * from t2 order by op, a, b;
op	a	b
u	4	13.050000000000000000000000000000
u	5	14.050000000000000000000000000000
delete from t2;
replace into t1 (id, a) values (4, 1), (3, 1);
select * from t1 order by id;
id	a	b
3	1	0.000000000000000000000000000000
4	1	0.000000000000000000000000000000
select * from t2 order by op, a, b;
op	a	b
d	5	23.050000000000000000000000000000
d	6	24.050000000000000000000000000000
delete from t1;
delete from t2;
insert into t1 values (3, 1, 1.05), (4, 1, 2.05);
replace into t1 (id, a) (select i, 2 from t3);
select * from t1 order by id;
id	a	b
3	2	0.000000000000000000000000000000
4	2	0.000000000000000000000000000000
select * from t2 order by op, a, b;
op	a	b
d	1	1.050000000000000000000000000000
d	1	2.050000000000000000000000000000
delete from t1;
delete from t2;
insert into t1 values (3, 1, 1.05), (5, 2, 2.05);
load data infile '../../../std_data/loaddata5.dat' replace into table t1 fields terminated by '' enclosed by '' ignore 1 lines (id, a);
select * from t1 order by id;
id	a	b
3	4	0.000000000000000000000000000000
5	6	0.000000000000000000000000000000
select * from t2 order by op, a, b;
op	a	b
d	1	1.050000000000000000000000000000
d	2	2.050000000000000000000000000000
update t4 set b = 10 where a = 1;
select * from t5 order by a;
a	b
1	1
update t5 set b = 0;
delete from t4 where a = 1;
select * from t5 order by a;
a	b
1	1
drop trigger t4_au;
drop trigger t4_ad;
drop table t1, t2, t3, t4, t5;
CREATE TABLE t1 (
id INT NOT NULL PRIMARY KEY,
xy INT
) ENGINE=ndbcluster;
INSERT INTO t1 VALUES (1, 0);
CREATE TRIGGER t1_update AFTER UPDATE ON t1 FOR EACH ROW BEGIN REPLACE INTO t2 SELECT * FROM t1 WHERE t1.id = NEW.id; END //
CREATE TABLE t2 (
id INT NOT NULL PRIMARY KEY,
xy INT
) ENGINE=ndbcluster;
INSERT INTO t2 VALUES (2, 0);
CREATE TABLE t3 (id INT NOT NULL PRIMARY KEY) ENGINE=ndbcluster;
INSERT INTO t3 VALUES (1);
CREATE TABLE t4 LIKE t1;
CREATE TRIGGER t4_update AFTER UPDATE ON t4 FOR EACH ROW BEGIN REPLACE INTO t5 SELECT * FROM t4 WHERE t4.id = NEW.id; END //
CREATE TABLE t5 LIKE t2;
UPDATE t1 SET xy = 3 WHERE id = 1;
SELECT xy FROM t1 where id = 1;
xy
3
SELECT xy FROM t2 where id = 1;
xy
3
UPDATE t1 SET xy  = 4 WHERE id IN (SELECT id FROM t3 WHERE id = 1);
SELECT xy FROM t1 where id = 1;
xy
4
SELECT xy FROM t2 where id = 1;
xy
4
INSERT INTO t4 SELECT * FROM t1;
INSERT INTO t5 SELECT * FROM t2;
UPDATE t1,t4 SET t1.xy = 3, t4.xy = 3 WHERE t1.id = 1 AND t4.id = 1;
SELECT xy FROM t1 where id = 1;
xy
3
SELECT xy FROM t2 where id = 1;
xy
3
SELECT xy FROM t4 where id = 1;
xy
3
SELECT xy FROM t5 where id = 1;
xy
3
UPDATE t1,t4 SET t1.xy = 4, t4.xy = 4 WHERE t1.id IN (SELECT id FROM t3 WHERE id = 1) AND t4.id IN (SELECT id FROM t3 WHERE id = 1);
SELECT xy FROM t1 where id = 1;
xy
4
SELECT xy FROM t2 where id = 1;
xy
4
SELECT xy FROM t4 where id = 1;
xy
4
SELECT xy FROM t5 where id = 1;
xy
4
INSERT INTO t1 VALUES (1,0) ON DUPLICATE KEY UPDATE xy = 5;
SELECT xy FROM t1 where id = 1;
xy
5
SELECT xy FROM t2 where id = 1;
xy
5
DROP TRIGGER t1_update;
DROP TRIGGER t4_update;
CREATE TRIGGER t1_delete AFTER DELETE ON t1 FOR EACH ROW BEGIN REPLACE INTO t2 SELECT * FROM t1 WHERE t1.id > 4; END //
CREATE TRIGGER t4_delete AFTER DELETE ON t4 FOR EACH ROW BEGIN REPLACE INTO t5 SELECT * FROM t4 WHERE t4.id > 4; END //
INSERT INTO t1 VALUES (5, 0),(6,0);
INSERT INTO t2 VALUES (5, 1),(6,1);
INSERT INTO t3 VALUES (5);
SELECT * FROM t1 order by id;
id	xy
1	5
5	0
6	0
SELECT * FROM t2 order by id;
id	xy
1	5
2	0
5	1
6	1
DELETE FROM t1 WHERE id IN (SELECT id FROM t3 WHERE id = 5);
SELECT * FROM t1 order by id;
id	xy
1	5
6	0
SELECT * FROM t2 order by id;
id	xy
1	5
2	0
5	1
6	0
INSERT INTO t1 VALUES (5,0);
UPDATE t2 SET xy = 1 WHERE id = 6;
TRUNCATE t4;
INSERT INTO t4 SELECT * FROM t1;
TRUNCATE t5;
INSERT INTO t5 SELECT * FROM t2;
SELECT * FROM t1 order by id;
id	xy
1	5
5	0
6	0
SELECT * FROM t2 order by id;
id	xy
1	5
2	0
5	1
6	1
SELECT * FROM t4 order by id;
id	xy
1	5
5	0
6	0
SELECT * FROM t5 order by id;
id	xy
1	5
2	0
5	1
6	1
DELETE FROM t1,t4 USING t1,t3,t4 WHERE t1.id IN (SELECT id FROM t3 WHERE id = 5) AND t4.id IN (SELECT id FROM t3 WHERE id = 5);
SELECT * FROM t1 order by id;
id	xy
1	5
6	0
SELECT * FROM t2 order by id;
id	xy
1	5
2	0
5	1
6	0
SELECT * FROM t4 order by id;
id	xy
1	5
6	0
SELECT * FROM t5 order by id;
id	xy
1	5
2	0
5	1
6	0
INSERT INTO t1 VALUES (5, 0);
REPLACE INTO t2 VALUES (6,1);
SELECT * FROM t1 order by id;
id	xy
1	5
5	0
6	0
SELECT * FROM t2 order by id;
id	xy
1	5
2	0
5	1
6	1
REPLACE INTO t1 VALUES (5, 1);
SELECT * FROM t1 order by id;
id	xy
1	5
5	1
6	0
SELECT * FROM t2 order by id;
id	xy
1	5
2	0
5	1
6	0
DROP TRIGGER t1_delete;
DROP TRIGGER t4_delete;
DROP TABLE t1, t2, t3, t4, t5;
create table t1(a int, b varchar(10), c date) engine=ndb;
CREATE TRIGGER trg1 BEFORE UPDATE ON t1 FOR EACH ROW BEGIN
SET new.c = date(now());
End //
select trigger_name,event_object_table from information_schema.triggers where
trigger_name='trg1';
TRIGGER_NAME	EVENT_OBJECT_TABLE
trg1	t1
CREATE TRIGGER trg1 BEFORE UPDATE ON t1 FOR EACH ROW BEGIN
SET new.c = date(now());
End //
select trigger_name,event_object_table from information_schema.triggers where
trigger_name='trg1';
TRIGGER_NAME	EVENT_OBJECT_TABLE
trg1	t1
rename table t1 to t2;
select trigger_name,event_object_table from information_schema.triggers where
trigger_name='trg1';
TRIGGER_NAME	EVENT_OBJECT_TABLE
trg1	t2
select trigger_name,event_object_table from information_schema.triggers where
trigger_name='trg1';
TRIGGER_NAME	EVENT_OBJECT_TABLE
trg1	t2
drop table t2;
create table t1(c1 int(11) not null auto_increment primary key, c2 int(11) not null) engine=ndb;
Warnings:
Warning	1681	Integer display width is deprecated and will be removed in a future release.
Warning	1681	Integer display width is deprecated and will be removed in a future release.
create trigger bi_t1 before insert on t1
FOR EACH ROW BEGIN 
SET new.c2 = last_insert_id();
End
|
INSERT INTO t1 (c2) VALUES (17);
INSERT INTO t1 (c2) VALUES (17);
INSERT INTO t1 (c2) VALUES (17);
select c1 from t1 where c1=last_insert_id();
c1
3
select * from t1 order by c1;
c1	c2
1	0
2	1
3	2
start transaction;
INSERT INTO t1 (c2) VALUES (17);
INSERT INTO t1 (c2) VALUES (17);
select c1 from t1 where c1=last_insert_id();
c1
5
select * from t1 order by c1;
c1	c2
1	0
2	1
3	2
4	3
5	4
rollback;
select c1 from t1 where c1=last_insert_id();
c1
select * from t1 order by c1;
c1	c2
1	0
2	1
3	2
start transaction;
INSERT INTO t1 (c2) VALUES (17);
INSERT INTO t1 (c2) VALUES (17);
select c1 from t1 where c1=last_insert_id();
c1
7
select * from t1 order by c1;
c1	c2
1	0
2	1
3	2
6	5
7	6
commit;
select c1 from t1 where c1=last_insert_id();
c1
7
select * from t1 order by c1;
c1	c2
1	0
2	1
3	2
6	5
7	6
drop trigger bi_t1;
drop table t1;
