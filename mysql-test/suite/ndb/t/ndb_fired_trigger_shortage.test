--source include/have_ndb.inc
--source include/have_ndb_debug.inc

# Send DUMP to all data nodes to set new max size of pool for fired triggers.
#   TcSetTransientPoolMaxSize(2556)
#   DBTC_FIRED_TRIGGER_DATA_TRANSIENT_POOL_INDEX(2)
#   MAX_SIZE(5)
exec $NDB_MGM --no-defaults --verbose=0 --execute "ALL DUMP 2556 2 7";

# A helper table for generating inserts into t1.
create table num (n int);
insert into num value (0),(1),(2),(3),(4),(5),(6),(7),(8),(9);

# Create a table with a unique key. Every insert into t1 will fire a trigger
# to update the uniqie index on 'd'.
CREATE TABLE t1 (
  a int NOT NULL,
  b int NOT NULL,
  c int NOT NULL,
  d int NOT NULL,
  PRIMARY KEY (`b`,`a`),
  unique key(d)
) ENGINE=ndbcluster;


# Now do a lot of inserts into t1. This should cause MaxNoOfFiredTriggers to be
# exceeded. We want to chech that this gives error 221 rather than 218 
# (out of long message buffer). This was the case in Bug#19976428 
# "REPORTS FAILING WITH 'OUT OF LONGMESSAGEBUFFER' ERROR".
# Observe that we have set MaxNoOfFiredTriggers to a very low value in 
# ndb_fired_trigger_shortage.cnf.
--error 1297
insert into t1 select x1.n+x2.n*10+x3.n*100, 1, 1, 1+x1.n+x2.n*10+x3.n*100 from num as x1, num as x2, num as x3;

# All FiredTrigger record should be released when the query above aborts.
# Therefore, sum(used) should be 0 now.
select sum(used) from ndbinfo.ndb$pools where pool_name='Fired Trigger';

drop table num;
drop table t1;

# Send DUMP to all data nodes to reset max size of pool for fired triggers.
#   TcResetTransientPoolMaxSize(2557)
#   DBTC_FIRED_TRIGGER_DATA_TRANSIENT_POOL_INDEX(2)
exec $NDB_MGM --no-defaults --verbose=0 --execute "ALL DUMP 2557 2";
