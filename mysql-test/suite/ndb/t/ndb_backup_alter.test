-- source include/have_ndb.inc
-- source have_ndb_error_insert.inc
-- source suite/ndb/include/backup_restore_setup.inc

CREATE TABLE t1(k int not null primary key auto_increment) engine=ndb;

INSERT INTO t1 VALUES (NULL);

INSERT INTO t1 SELECT NULL FROM t1;
INSERT INTO t1 SELECT NULL FROM t1;
INSERT INTO t1 SELECT NULL FROM t1;
INSERT INTO t1 SELECT NULL FROM t1;

# Error insert to pause backup.
--exec $NDB_MGM -e'all error 10039' > /dev/null

<<<<<<< HEAD
# Start backup
--source suite/ndb/t/ndb_backup_nowait_start.inc
=======
--exec $NDB_MGM -e 'start backup wait started' > /dev/null
>>>>>>> pr/231

# Check if the error ER_GET_ERRMSG is thrown when
# ALTER TABLE is executed while the backup is in progress.

--error ER_GET_ERRMSG
ALTER TABLE t1 ADD COLUMN c3 INT COLUMN_FORMAT DYNAMIC;

# Error insert to resume backup.
--exec $NDB_MGM -e'all error 0' > /dev/null

# Wait backup completed
--source suite/ndb/t/ndb_backup_nowait_wait.inc

<<<<<<< HEAD
DROP TABLE t1;

--echo #
--echo # Bug#28563639: Backup aborts during cleanup of log-event-related triggers
--echo #
create table t1(
  id int unsigned primary key,
  val varchar(100) unique,
  val2 varchar(100) unique,
  val3 varchar(100) unique,
  val4 varchar(100) unique,
  val5 varchar(100) unique,
  updates int unsigned
) engine=ndb;
=======
let $mysql_errno = ER_GET_ERRMSG;
while($mysql_errno)
{
  sleep 1;
  --error 0,1306
  DROP TABLE t1;
}

--echo Test for Bug#28563639: Backup aborts during cleanup of log-event-related triggers
use test;
create table t1(id int unsigned primary key, val varchar(100) unique, val2 varchar(100) unique, val3 varchar(100) unique, val4 varchar(100) unique, val5 varchar(100) unique, updates int unsigned) engine=ndb;
>>>>>>> pr/231

--exec $NDB_MGM -e'all error 10049' > /dev/null
--echo Start backup nowait
--source suite/ndb/t/ndb_backup_nowait_start.inc
--exec $NDB_MGM -e'all error 0' > /dev/null

--echo Wait for backup to complete
--source suite/ndb/t/ndb_backup_nowait_wait.inc

drop table t1;

<<<<<<< HEAD
--source suite/ndb/include/backup_restore_cleanup.inc
=======
--echo Backup aborts on out-of-disk-space
--disable_query_log
--exec $NDB_MGM -e 'all error 10054' > /dev/null

let $dump_file = $MYSQLTEST_VARDIR/tmp/desc.txt;
--error 255
--exec $NDB_MGM -e 'start backup wait completed' > $dump_file 2>&1

# Load the file into a temporary table
CREATE TEMPORARY TABLE test.desc (a varchar(512)) ENGINE = HEAP;

--chmod 0777 $dump_file
--replace_result $dump_file DUMP_FILE
eval LOAD DATA INFILE '$dump_file' INTO TABLE test.desc;
--remove_file $dump_file
--enable_query_log

# Query the temporary table
SELECT TRIM(TRAILING "\r" FROM a) FROM test.desc WHERE a NOT LIKE "%Connected%";
echo $value;

DROP TABLE test.desc;
>>>>>>> pr/231
