SHOW TABLES FROM information_schema LIKE 'STATISTICS';
Tables_in_information_schema (STATISTICS)
STATISTICS
#######################################################################
# Testcase 3.2.1.1: INFORMATION_SCHEMA tables can be queried via SELECT
#######################################################################
DROP VIEW      IF EXISTS test.v1;
DROP PROCEDURE IF EXISTS test.p1;
DROP FUNCTION  IF EXISTS test.f1;
CREATE VIEW test.v1 AS     SELECT * FROM information_schema.STATISTICS;
CREATE PROCEDURE test.p1() SELECT * FROM information_schema.STATISTICS;
CREATE FUNCTION test.f1() returns BIGINT
BEGIN
DECLARE counter BIGINT DEFAULT NULL;
SELECT COUNT(*) INTO counter FROM information_schema.STATISTICS;
RETURN counter;
END//
# Attention: The printing of the next result sets is disabled.
SELECT * FROM information_schema.STATISTICS;
SELECT * FROM test.v1;
CALL test.p1;
SELECT test.f1();
DROP VIEW test.v1;
DROP PROCEDURE test.p1;
DROP FUNCTION test.f1;
#########################################################################
# Testcase 3.2.14.1: INFORMATION_SCHEMA.STATISTICS layout
#########################################################################
DESCRIBE          information_schema.STATISTICS;
Field	Type	Null	Key	Default	Extra
TABLE_CATALOG	varchar(512)	NO			
TABLE_SCHEMA	varchar(64)	NO			
TABLE_NAME	varchar(64)	NO			
NON_UNIQUE	bigint(1)	NO		0	
INDEX_SCHEMA	varchar(64)	NO			
INDEX_NAME	varchar(64)	NO			
SEQ_IN_INDEX	bigint(2)	NO		0	
COLUMN_NAME	varchar(64)	NO			
COLLATION	varchar(1)	YES		NULL	
CARDINALITY	bigint(21)	YES		NULL	
SUB_PART	bigint(3)	YES		NULL	
PACKED	varchar(10)	YES		NULL	
NULLABLE	varchar(3)	NO			
INDEX_TYPE	varchar(16)	NO			
COMMENT	varchar(16)	YES		NULL	
INDEX_COMMENT	varchar(1024)	NO			
SHOW CREATE TABLE information_schema.STATISTICS;
Table	Create Table
STATISTICS	CREATE TEMPORARY TABLE `STATISTICS` (
  `TABLE_CATALOG` varchar(512) NOT NULL DEFAULT '',
  `TABLE_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `TABLE_NAME` varchar(64) NOT NULL DEFAULT '',
  `NON_UNIQUE` bigint(1) NOT NULL DEFAULT '0',
  `INDEX_SCHEMA` varchar(64) NOT NULL DEFAULT '',
  `INDEX_NAME` varchar(64) NOT NULL DEFAULT '',
  `SEQ_IN_INDEX` bigint(2) NOT NULL DEFAULT '0',
  `COLUMN_NAME` varchar(64) NOT NULL DEFAULT '',
  `COLLATION` varchar(1) DEFAULT NULL,
  `CARDINALITY` bigint(21) DEFAULT NULL,
  `SUB_PART` bigint(3) DEFAULT NULL,
  `PACKED` varchar(10) DEFAULT NULL,
  `NULLABLE` varchar(3) NOT NULL DEFAULT '',
  `INDEX_TYPE` varchar(16) NOT NULL DEFAULT '',
  `COMMENT` varchar(16) DEFAULT NULL,
  `INDEX_COMMENT` varchar(1024) NOT NULL DEFAULT ''
) ENGINE=MEMORY DEFAULT CHARSET=utf8
SHOW COLUMNS FROM information_schema.STATISTICS;
Field	Type	Null	Key	Default	Extra
TABLE_CATALOG	varchar(512)	NO			
TABLE_SCHEMA	varchar(64)	NO			
TABLE_NAME	varchar(64)	NO			
NON_UNIQUE	bigint(1)	NO		0	
INDEX_SCHEMA	varchar(64)	NO			
INDEX_NAME	varchar(64)	NO			
SEQ_IN_INDEX	bigint(2)	NO		0	
COLUMN_NAME	varchar(64)	NO			
COLLATION	varchar(1)	YES		NULL	
CARDINALITY	bigint(21)	YES		NULL	
SUB_PART	bigint(3)	YES		NULL	
PACKED	varchar(10)	YES		NULL	
NULLABLE	varchar(3)	NO			
INDEX_TYPE	varchar(16)	NO			
COMMENT	varchar(16)	YES		NULL	
INDEX_COMMENT	varchar(1024)	NO			
SELECT table_catalog, table_schema, table_name, index_schema, index_name
FROM information_schema.statistics WHERE table_catalog IS NOT NULL;
table_catalog	table_schema	table_name	index_schema	index_name
def	mysql	columns_priv	mysql	PRIMARY
def	mysql	columns_priv	mysql	PRIMARY
def	mysql	columns_priv	mysql	PRIMARY
def	mysql	columns_priv	mysql	PRIMARY
def	mysql	columns_priv	mysql	PRIMARY
def	mysql	db	mysql	PRIMARY
def	mysql	db	mysql	PRIMARY
def	mysql	db	mysql	PRIMARY
def	mysql	db	mysql	User
def	mysql	event	mysql	PRIMARY
def	mysql	event	mysql	PRIMARY
def	mysql	func	mysql	PRIMARY
def	mysql	help_category	mysql	PRIMARY
def	mysql	help_category	mysql	name
def	mysql	help_keyword	mysql	PRIMARY
def	mysql	help_keyword	mysql	name
def	mysql	help_relation	mysql	PRIMARY
def	mysql	help_relation	mysql	PRIMARY
def	mysql	help_topic	mysql	PRIMARY
def	mysql	help_topic	mysql	name
def	mysql	host	mysql	PRIMARY
def	mysql	host	mysql	PRIMARY
def	mysql	ndb_binlog_index	mysql	PRIMARY
def	mysql	plugin	mysql	PRIMARY
def	mysql	proc	mysql	PRIMARY
def	mysql	proc	mysql	PRIMARY
def	mysql	proc	mysql	PRIMARY
def	mysql	procs_priv	mysql	PRIMARY
def	mysql	procs_priv	mysql	PRIMARY
def	mysql	procs_priv	mysql	PRIMARY
def	mysql	procs_priv	mysql	PRIMARY
def	mysql	procs_priv	mysql	PRIMARY
def	mysql	procs_priv	mysql	Grantor
def	mysql	proxies_priv	mysql	PRIMARY
def	mysql	proxies_priv	mysql	PRIMARY
def	mysql	proxies_priv	mysql	PRIMARY
def	mysql	proxies_priv	mysql	PRIMARY
def	mysql	proxies_priv	mysql	Grantor
def	mysql	servers	mysql	PRIMARY
def	mysql	tables_priv	mysql	PRIMARY
def	mysql	tables_priv	mysql	PRIMARY
def	mysql	tables_priv	mysql	PRIMARY
def	mysql	tables_priv	mysql	PRIMARY
def	mysql	tables_priv	mysql	Grantor
def	mysql	time_zone	mysql	PRIMARY
def	mysql	time_zone_leap_second	mysql	PRIMARY
def	mysql	time_zone_name	mysql	PRIMARY
def	mysql	time_zone_transition	mysql	PRIMARY
def	mysql	time_zone_transition	mysql	PRIMARY
def	mysql	time_zone_transition_type	mysql	PRIMARY
def	mysql	time_zone_transition_type	mysql	PRIMARY
def	mysql	user	mysql	PRIMARY
def	mysql	user	mysql	PRIMARY
####################################################################################
# Testcase 3.2.14.2 + 3.2.14.3: INFORMATION_SCHEMA.STATISTICS accessible information
####################################################################################
DROP DATABASE IF EXISTS db_datadict;
DROP DATABASE IF EXISTS db_datadict_2;
CREATE DATABASE db_datadict;
CREATE DATABASE db_datadict_2;
DROP   USER 'testuser1'@'localhost';
CREATE USER 'testuser1'@'localhost';
DROP   USER 'testuser2'@'localhost';
CREATE USER 'testuser2'@'localhost';
CREATE TABLE db_datadict.t1
(f1 INT NOT NULL, PRIMARY KEY(f1), f2 INT, INDEX f2_ind(f2))
ENGINE = <engine_type>;
CREATE TABLE db_datadict.t2
(f1 INT NOT NULL, PRIMARY KEY(f1), f2 INT, INDEX f2_ind(f2))
ENGINE = <engine_type>;
CREATE TABLE db_datadict_2.t3
(f1 INT NOT NULL, f2 INT, f5 DATE,
PRIMARY KEY(f1), INDEX f2f1_ind(f2,f1), UNIQUE(f5))
ENGINE = MEMORY;
CREATE TABLE db_datadict_2.t4
(f1 INT NOT NULL, PRIMARY KEY(f1), f2 INT, INDEX f2_ind(f2))
ENGINE = MEMORY;
SELECT * FROM information_schema.statistics
WHERE table_schema LIKE 'db_datadict%'
ORDER BY table_schema,table_name,index_name,seq_in_index,column_name;
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	NON_UNIQUE	INDEX_SCHEMA	INDEX_NAME	SEQ_IN_INDEX	COLUMN_NAME	COLLATION	CARDINALITY	SUB_PART	PACKED	NULLABLE	INDEX_TYPE	COMMENT	INDEX_COMMENT
def	db_datadict	t1	1	db_datadict	f2_ind	1	f2	NULL	0	NULL	NULL	YES	HASH		
def	db_datadict	t1	0	db_datadict	PRIMARY	1	f1	NULL	0	NULL	NULL		HASH		
def	db_datadict	t2	1	db_datadict	f2_ind	1	f2	NULL	0	NULL	NULL	YES	HASH		
def	db_datadict	t2	0	db_datadict	PRIMARY	1	f1	NULL	0	NULL	NULL		HASH		
def	db_datadict_2	t3	1	db_datadict_2	f2f1_ind	1	f2	NULL	NULL	NULL	NULL	YES	HASH		
def	db_datadict_2	t3	1	db_datadict_2	f2f1_ind	2	f1	NULL	0	NULL	NULL		HASH		
def	db_datadict_2	t3	0	db_datadict_2	f5	1	f5	NULL	0	NULL	NULL	YES	HASH		
def	db_datadict_2	t3	0	db_datadict_2	PRIMARY	1	f1	NULL	0	NULL	NULL		HASH		
def	db_datadict_2	t4	1	db_datadict_2	f2_ind	1	f2	NULL	0	NULL	NULL	YES	HASH		
def	db_datadict_2	t4	0	db_datadict_2	PRIMARY	1	f1	NULL	0	NULL	NULL		HASH		
SHOW GRANTS FOR 'testuser1'@'localhost';
Grants for testuser1@localhost
GRANT USAGE ON *.* TO 'testuser1'@'localhost'
SHOW GRANTS FOR 'testuser2'@'localhost';
Grants for testuser2@localhost
GRANT USAGE ON *.* TO 'testuser2'@'localhost'
# Establish connection testuser1 (user=testuser1)
SELECT * FROM information_schema.statistics
WHERE table_schema LIKE 'db_datadict%'
ORDER BY table_schema,table_name,index_name,seq_in_index,column_name;
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	NON_UNIQUE	INDEX_SCHEMA	INDEX_NAME	SEQ_IN_INDEX	COLUMN_NAME	COLLATION	CARDINALITY	SUB_PART	PACKED	NULLABLE	INDEX_TYPE	COMMENT	INDEX_COMMENT
SHOW GRANTS FOR 'testuser1'@'localhost';
Grants for testuser1@localhost
GRANT USAGE ON *.* TO 'testuser1'@'localhost'
SHOW GRANTS FOR 'testuser2'@'localhost';
ERROR 42000: Access denied for user 'testuser1'@'localhost' to database 'mysql'
# Establish connection testuser2 (user=testuser2)
SELECT * FROM information_schema.statistics
WHERE table_schema LIKE 'db_datadict%'
ORDER BY table_schema,table_name,index_name,seq_in_index,column_name;
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	NON_UNIQUE	INDEX_SCHEMA	INDEX_NAME	SEQ_IN_INDEX	COLUMN_NAME	COLLATION	CARDINALITY	SUB_PART	PACKED	NULLABLE	INDEX_TYPE	COMMENT	INDEX_COMMENT
SHOW GRANTS FOR 'testuser1'@'localhost';
ERROR 42000: Access denied for user 'testuser2'@'localhost' to database 'mysql'
SHOW GRANTS FOR 'testuser2'@'localhost';
Grants for testuser2@localhost
GRANT USAGE ON *.* TO 'testuser2'@'localhost'
# Switch to connection default
GRANT SELECT ON db_datadict.t1 TO 'testuser1'@'localhost' WITH GRANT OPTION;
GRANT SELECT(f1,f5) ON db_datadict_2.t3 TO 'testuser1'@'localhost';
SELECT * FROM information_schema.statistics
WHERE table_schema LIKE 'db_datadict%'
ORDER BY table_schema,table_name,index_name,seq_in_index,column_name;
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	NON_UNIQUE	INDEX_SCHEMA	INDEX_NAME	SEQ_IN_INDEX	COLUMN_NAME	COLLATION	CARDINALITY	SUB_PART	PACKED	NULLABLE	INDEX_TYPE	COMMENT	INDEX_COMMENT
def	db_datadict	t1	1	db_datadict	f2_ind	1	f2	NULL	0	NULL	NULL	YES	HASH		
def	db_datadict	t1	0	db_datadict	PRIMARY	1	f1	NULL	0	NULL	NULL		HASH		
def	db_datadict	t2	1	db_datadict	f2_ind	1	f2	NULL	0	NULL	NULL	YES	HASH		
def	db_datadict	t2	0	db_datadict	PRIMARY	1	f1	NULL	0	NULL	NULL		HASH		
def	db_datadict_2	t3	1	db_datadict_2	f2f1_ind	1	f2	NULL	NULL	NULL	NULL	YES	HASH		
def	db_datadict_2	t3	1	db_datadict_2	f2f1_ind	2	f1	NULL	0	NULL	NULL		HASH		
def	db_datadict_2	t3	0	db_datadict_2	f5	1	f5	NULL	0	NULL	NULL	YES	HASH		
def	db_datadict_2	t3	0	db_datadict_2	PRIMARY	1	f1	NULL	0	NULL	NULL		HASH		
def	db_datadict_2	t4	1	db_datadict_2	f2_ind	1	f2	NULL	0	NULL	NULL	YES	HASH		
def	db_datadict_2	t4	0	db_datadict_2	PRIMARY	1	f1	NULL	0	NULL	NULL		HASH		
SHOW GRANTS FOR 'testuser1'@'localhost';
Grants for testuser1@localhost
GRANT USAGE ON *.* TO 'testuser1'@'localhost'
GRANT SELECT ON `db_datadict`.`t1` TO 'testuser1'@'localhost' WITH GRANT OPTION
GRANT SELECT (f5, f1) ON `db_datadict_2`.`t3` TO 'testuser1'@'localhost'
SHOW GRANTS FOR 'testuser2'@'localhost';
Grants for testuser2@localhost
GRANT USAGE ON *.* TO 'testuser2'@'localhost'
# Switch to connection testuser1
SELECT * FROM information_schema.statistics
WHERE table_schema LIKE 'db_datadict%'
ORDER BY table_schema,table_name,index_name,seq_in_index,column_name;
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	NON_UNIQUE	INDEX_SCHEMA	INDEX_NAME	SEQ_IN_INDEX	COLUMN_NAME	COLLATION	CARDINALITY	SUB_PART	PACKED	NULLABLE	INDEX_TYPE	COMMENT	INDEX_COMMENT
def	db_datadict	t1	1	db_datadict	f2_ind	1	f2	NULL	0	NULL	NULL	YES	HASH		
def	db_datadict	t1	0	db_datadict	PRIMARY	1	f1	NULL	0	NULL	NULL		HASH		
def	db_datadict_2	t3	1	db_datadict_2	f2f1_ind	1	f2	NULL	NULL	NULL	NULL	YES	HASH		
def	db_datadict_2	t3	1	db_datadict_2	f2f1_ind	2	f1	NULL	0	NULL	NULL		HASH		
def	db_datadict_2	t3	0	db_datadict_2	f5	1	f5	NULL	0	NULL	NULL	YES	HASH		
def	db_datadict_2	t3	0	db_datadict_2	PRIMARY	1	f1	NULL	0	NULL	NULL		HASH		
SHOW GRANTS FOR 'testuser1'@'localhost';
Grants for testuser1@localhost
GRANT USAGE ON *.* TO 'testuser1'@'localhost'
GRANT SELECT ON `db_datadict`.`t1` TO 'testuser1'@'localhost' WITH GRANT OPTION
GRANT SELECT (f5, f1) ON `db_datadict_2`.`t3` TO 'testuser1'@'localhost'
SHOW GRANTS FOR 'testuser2'@'localhost';
ERROR 42000: Access denied for user 'testuser1'@'localhost' to database 'mysql'
# Switch to connection testuser2
SELECT * FROM information_schema.statistics
WHERE table_schema LIKE 'db_datadict%'
ORDER BY table_schema,table_name,index_name,seq_in_index,column_name;
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	NON_UNIQUE	INDEX_SCHEMA	INDEX_NAME	SEQ_IN_INDEX	COLUMN_NAME	COLLATION	CARDINALITY	SUB_PART	PACKED	NULLABLE	INDEX_TYPE	COMMENT	INDEX_COMMENT
SHOW GRANTS FOR 'testuser1'@'localhost';
ERROR 42000: Access denied for user 'testuser2'@'localhost' to database 'mysql'
SHOW GRANTS FOR 'testuser2'@'localhost';
Grants for testuser2@localhost
GRANT USAGE ON *.* TO 'testuser2'@'localhost'
# Switch to connection default
REVOKE SELECT,GRANT OPTION ON db_datadict.t1 FROM 'testuser1'@'localhost';
SHOW GRANTS FOR 'testuser1'@'localhost';
Grants for testuser1@localhost
GRANT USAGE ON *.* TO 'testuser1'@'localhost'
GRANT SELECT (f5, f1) ON `db_datadict_2`.`t3` TO 'testuser1'@'localhost'
# Switch to connection testuser1
SELECT * FROM information_schema.statistics
WHERE table_schema LIKE 'db_datadict%'
ORDER BY table_schema,table_name,index_name,seq_in_index,column_name;
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	NON_UNIQUE	INDEX_SCHEMA	INDEX_NAME	SEQ_IN_INDEX	COLUMN_NAME	COLLATION	CARDINALITY	SUB_PART	PACKED	NULLABLE	INDEX_TYPE	COMMENT	INDEX_COMMENT
def	db_datadict_2	t3	1	db_datadict_2	f2f1_ind	1	f2	NULL	NULL	NULL	NULL	YES	HASH		
def	db_datadict_2	t3	1	db_datadict_2	f2f1_ind	2	f1	NULL	0	NULL	NULL		HASH		
def	db_datadict_2	t3	0	db_datadict_2	f5	1	f5	NULL	0	NULL	NULL	YES	HASH		
def	db_datadict_2	t3	0	db_datadict_2	PRIMARY	1	f1	NULL	0	NULL	NULL		HASH		
SHOW GRANTS FOR 'testuser1'@'localhost';
Grants for testuser1@localhost
GRANT USAGE ON *.* TO 'testuser1'@'localhost'
GRANT SELECT (f5, f1) ON `db_datadict_2`.`t3` TO 'testuser1'@'localhost'
# Switch to connection default and close connections testuser1, testuser2
DROP USER 'testuser1'@'localhost';
DROP USER 'testuser2'@'localhost';
DROP DATABASE db_datadict;
DROP DATABASE db_datadict_2;
#########################################################################
# 3.2.1.13+3.2.1.14+3.2.1.15: INFORMATION_SCHEMA.STATISTICS modifications
#########################################################################
DROP TABLE IF EXISTS test.t1_my_table;
DROP DATABASE IF EXISTS db_datadict;
CREATE DATABASE db_datadict;
CREATE TABLE test.t1_1 (f1 BIGINT,
f2 TEXT, f2x TEXT, f3 CHAR(10), f3x CHAR(10), f4 BIGINT, f4x BIGINT,
f5 POINT, f5x POINT NOT NULL)
DEFAULT CHARACTER SET latin1 COLLATE latin1_swedish_ci
ENGINE = <other_engine_type>;
CREATE TABLE test.t1_2 (f1 BIGINT, f2 BIGINT)
ENGINE = <engine_type>;
SELECT table_name FROM information_schema.statistics
WHERE table_name LIKE 't1_%';
table_name
ALTER TABLE test.t1_1 ADD PRIMARY KEY (f1,f3);
SELECT * FROM information_schema.statistics
WHERE table_name LIKE 't1_%'
ORDER BY table_schema,table_name,index_name,seq_in_index,column_name;
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	NON_UNIQUE	INDEX_SCHEMA	INDEX_NAME	SEQ_IN_INDEX	COLUMN_NAME	COLLATION	CARDINALITY	SUB_PART	PACKED	NULLABLE	INDEX_TYPE	COMMENT	INDEX_COMMENT
def	test	t1_1	0	test	PRIMARY	1	f1	A	NULL	NULL	NULL		BTREE		
def	test	t1_1	0	test	PRIMARY	2	f3	A	0	NULL	NULL		BTREE		
ALTER TABLE test.t1_1 DROP PRIMARY KEY;
SELECT table_name FROM information_schema.statistics
WHERE table_name LIKE 't1_%';
table_name
ALTER TABLE test.t1_1 ADD PRIMARY KEY (f1);
SELECT * FROM information_schema.statistics
WHERE table_name LIKE 't1_%';
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	NON_UNIQUE	INDEX_SCHEMA	INDEX_NAME	SEQ_IN_INDEX	COLUMN_NAME	COLLATION	CARDINALITY	SUB_PART	PACKED	NULLABLE	INDEX_TYPE	COMMENT	INDEX_COMMENT
def	test	t1_1	0	test	PRIMARY	1	f1	A	0	NULL	NULL		BTREE		
ALTER TABLE test.t1_1 ADD INDEX (f4);
CREATE        INDEX f3_f1     ON test.t1_1 (f3,f1);
CREATE UNIQUE INDEX f4x_uni   ON test.t1_1 (f4x);
CREATE        INDEX f2_hash USING HASH ON test.t1_2 (f2);
CREATE        INDEX f1_idx    ON test.t1_2 (f1) COMMENT = 'COMMENT';
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '= 'COMMENT'' at line 1
CREATE        INDEX not_null  ON test.t1_1 (f3x);
CREATE        INDEX f2_prefix ON test.t1_1 (f2(20));
SELECT * FROM information_schema.statistics
WHERE table_name LIKE 't1_%' AND index_name <> 'PRIMARY'
ORDER BY table_schema,table_name,index_name,seq_in_index,column_name;
TABLE_CATALOG	TABLE_SCHEMA	TABLE_NAME	NON_UNIQUE	INDEX_SCHEMA	INDEX_NAME	SEQ_IN_INDEX	COLUMN_NAME	COLLATION	CARDINALITY	SUB_PART	PACKED	NULLABLE	INDEX_TYPE	COMMENT	INDEX_COMMENT
def	test	t1_1	1	test	f2_prefix	1	f2	A	NULL	20	NULL	YES	BTREE		
def	test	t1_1	1	test	f3_f1	1	f3	A	NULL	NULL	NULL		BTREE		
def	test	t1_1	1	test	f3_f1	2	f1	A	NULL	NULL	NULL		BTREE		
def	test	t1_1	1	test	f4	1	f4	A	NULL	NULL	NULL	YES	BTREE		
def	test	t1_1	0	test	f4x_uni	1	f4x	A	NULL	NULL	NULL	YES	BTREE		
def	test	t1_1	1	test	not_null	1	f3x	A	NULL	NULL	NULL	YES	BTREE		
def	test	t1_2	1	test	f2_hash	1	f2	NULL	0	NULL	NULL	YES	HASH		
DROP TABLE test.t1_2;
SELECT DISTINCT table_name FROM information_schema.statistics
WHERE table_name = 't1_1';
table_name
t1_1
RENAME TABLE test.t1_1 TO test.t1_1x;
SELECT DISTINCT table_name FROM information_schema.statistics
WHERE table_name = 't1_1x';
table_name
t1_1x
SELECT DISTINCT table_schema,table_name FROM information_schema.statistics
WHERE table_name LIKE 't1_1%';
table_schema	table_name
test	t1_1x
RENAME TABLE test.t1_1x TO db_datadict.t1_1x;
SELECT DISTINCT table_schema,table_name FROM information_schema.statistics
WHERE table_name LIKE 't1_1%';
table_schema	table_name
db_datadict	t1_1x
SELECT DISTINCT table_name FROM information_schema.statistics
WHERE table_name = 't1_1x';
table_name
t1_1x
DROP TABLE db_datadict.t1_1x;
SELECT DISTINCT table_name FROM information_schema.statistics
WHERE table_name = 't1_1x';
table_name
CREATE TEMPORARY TABLE test.t1_1x (PRIMARY KEY(f1,f2))
ENGINE = <engine_type>
AS SELECT 1 AS f1, 2 AS f2;
SELECT * FROM information_schema.statistics
WHERE table_name = 't1_1x';
DROP TEMPORARY TABLE test.t1_1x;
CREATE TABLE db_datadict.t1_1x (PRIMARY KEY(f1))
ENGINE = <engine_type>
AS SELECT 1 AS f1, 2 AS f2;
SELECT table_name FROM information_schema.statistics
WHERE table_name = 't1_1x';
table_name
t1_1x
DROP DATABASE db_datadict;
SELECT table_name FROM information_schema.statistics
WHERE table_name = 't1_1x';
table_name
########################################################################
# Testcases 3.2.1.3-3.2.1.5 + 3.2.1.8-3.2.1.12: INSERT/UPDATE/DELETE and
#           DDL on INFORMATION_SCHEMA tables are not supported
########################################################################
DROP DATABASE IF EXISTS db_datadict;
CREATE DATABASE db_datadict;
CREATE TABLE db_datadict.t1 (f1 BIGINT)
ENGINE = <engine_type>;
INSERT INTO information_schema.statistics
SELECT * FROM information_schema.statistics;
ERROR 42000: Access denied for user 'root'@'localhost' to database 'information_schema'
UPDATE information_schema.statistics SET table_schema = 'test'
WHERE table_name = 't1';
ERROR 42000: Access denied for user 'root'@'localhost' to database 'information_schema'
DELETE FROM information_schema.statistics WHERE table_name = 't1';
ERROR 42000: Access denied for user 'root'@'localhost' to database 'information_schema'
TRUNCATE information_schema.statistics;
ERROR 42000: Access denied for user 'root'@'localhost' to database 'information_schema'
CREATE INDEX my_idx_on_statistics
ON information_schema.statistics(table_schema);
ERROR 42000: Access denied for user 'root'@'localhost' to database 'information_schema'
ALTER TABLE information_schema.statistics DROP PRIMARY KEY;
ERROR 42000: Access denied for user 'root'@'localhost' to database 'information_schema'
ALTER TABLE information_schema.statistics ADD f1 INT;
ERROR 42000: Access denied for user 'root'@'localhost' to database 'information_schema'
DROP TABLE information_schema.statistics;
ERROR 42000: Access denied for user 'root'@'localhost' to database 'information_schema'
ALTER TABLE information_schema.statistics RENAME db_datadict.statistics;
ERROR 42000: Access denied for user 'root'@'localhost' to database 'information_schema'
ALTER TABLE information_schema.statistics RENAME information_schema.xstatistics;
ERROR 42000: Access denied for user 'root'@'localhost' to database 'information_schema'
DROP DATABASE db_datadict;
