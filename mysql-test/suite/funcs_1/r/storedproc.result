
--source suite/funcs_1/storedproc/load_sp_tb.inc
--------------------------------------------------------------------------------
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';

--source suite/funcs_1/storedproc/cleanup_sp_tb.inc
--------------------------------------------------------------------------------
DROP DATABASE IF EXISTS db_storedproc;
DROP DATABASE IF EXISTS db_storedproc_1;
CREATE DATABASE db_storedproc charset utf8mb4;
CREATE DATABASE db_storedproc_1 charset utf8mb4;
USE db_storedproc;
create table t1(f1 char(20),f2 char(25),f3 date,f4 int,f5 char(25),f6 int)
engine = <engine_to_be_tested>;
load data infile '<MYSQLTEST_VARDIR>/std_data/funcs_1/t4.txt' into table t1;
create table t2(f1 char(20),f2 char(25),f3 date,f4 int,f5 char(25),f6 int)
engine = <engine_to_be_tested>;
load data infile '<MYSQLTEST_VARDIR>/std_data/funcs_1/t4.txt' into table t2;
create table t3(f1 char(20),f2 char(20),f3 integer) engine = <engine_to_be_tested>;
load data infile '<MYSQLTEST_VARDIR>/std_data/funcs_1/t3.txt' into table t3;
create table t4(f1 char(20),f2 char(25),f3 date,f4 int,f5 char(25),f6 int)
engine = <engine_to_be_tested>;
load data infile '<MYSQLTEST_VARDIR>/std_data/funcs_1/t4.txt' into table t4;
USE db_storedproc_1;
create table t6(f1 char(20),f2 char(25),f3 date,f4 int,f5 char(25),f6 int)
engine = <engine_to_be_tested>;
load data infile '<MYSQLTEST_VARDIR>/std_data/funcs_1/t4.txt' into table t6;
USE db_storedproc;
create table t7 (f1 char(20), f2 char(25), f3 date, f4 int)
engine = <engine_to_be_tested>;
load data infile '<MYSQLTEST_VARDIR>/std_data/funcs_1/t7.txt' into table t7;
Warnings:
Warning	1265	Data truncated for column 'f3' at row 1
Warning	1265	Data truncated for column 'f3' at row 2
Warning	1265	Data truncated for column 'f3' at row 3
Warning	1265	Data truncated for column 'f3' at row 4
Warning	1265	Data truncated for column 'f3' at row 5
Warning	1265	Data truncated for column 'f3' at row 6
Warning	1265	Data truncated for column 'f3' at row 7
Warning	1265	Data truncated for column 'f3' at row 8
Warning	1265	Data truncated for column 'f3' at row 9
Warning	1265	Data truncated for column 'f3' at row 10
create table t8 (f1 char(20), f2 char(25), f3 date, f4 int)
engine = <engine_to_be_tested>;
load data infile '<MYSQLTEST_VARDIR>/std_data/funcs_1/t7.txt' into table t8;
Warnings:
Warning	1265	Data truncated for column 'f3' at row 1
Warning	1265	Data truncated for column 'f3' at row 2
Warning	1265	Data truncated for column 'f3' at row 3
Warning	1265	Data truncated for column 'f3' at row 4
Warning	1265	Data truncated for column 'f3' at row 5
Warning	1265	Data truncated for column 'f3' at row 6
Warning	1265	Data truncated for column 'f3' at row 7
Warning	1265	Data truncated for column 'f3' at row 8
Warning	1265	Data truncated for column 'f3' at row 9
Warning	1265	Data truncated for column 'f3' at row 10
create table t9(f1 int, f2 char(25), f3 int) engine = <engine_to_be_tested>;
load data infile '<MYSQLTEST_VARDIR>/std_data/funcs_1/t9.txt' into table t9;
create table t10(f1 char(20),f2 char(25),f3 date,f4 int,f5 char(25),f6 int)
engine = <engine_to_be_tested>;
load data infile '<MYSQLTEST_VARDIR>/std_data/funcs_1/t4.txt' into table t10;
create table t11(f1 char(20),f2 char(25),f3 date,f4 int,f5 char(25),f6 int)
engine = <engine_to_be_tested>;
load data infile '<MYSQLTEST_VARDIR>/std_data/funcs_1/t4.txt' into table t11;
SET sql_mode = default;
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
set names latin1;

Section 3.1.1 - Syntax checks for the CREATE PROCEDURE, CREATE
FUNCTION, ALTER PROCEDURE, ALTER FUNCTION, DROP PROCEDURE, DROP FUNCTION, SHOW
CREATE PROCEDURE, SHOW CREATE FUNCTION, SHOW CREATE PROCEDURE STATUS, SHOW
CREATE FUNCTION STATUS, and CALL statements:
--------------------------------------------------------------------------------

Testcase 4.1.1:
---------------
Ensure that all clauses that should be supported are supported
CREATE PROCEDURE
--------------------------------------------------------------------------------
USE db_storedproc;
DROP PROCEDURE IF EXISTS sp1_thisisaveryverylongname234872934_thisisaveryverylongname234872934;
ERROR 42000: Identifier name 'sp1_thisisaveryverylongname234872934_thisisaveryverylongname234872934' is too long
CREATE PROCEDURE sp1_thisisaveryverylongname234872934_thisisaveryverylongname234872934 (f1 char(20) )
SELECT * from t1 where f2 = f1;
ERROR 42000: Identifier name 'sp1_thisisaveryverylongname234872934_thisisaveryverylongname234872934' is too long
CALL sp1_thisisaveryverylongname234872934_thisisaveryverylongname234872934('aaaa');
ERROR 42000: Identifier name 'sp1_thisisaveryverylongname234872934_thisisaveryverylongname234872934' is too long
DROP PROCEDURE IF EXISTS sp1_thisisaveryverylongname234872934_thisisaveryverylongnameabcde;
ERROR 42000: Identifier name 'sp1_thisisaveryverylongname234872934_thisisaveryverylongnameabcde' is too long
CREATE PROCEDURE sp1_thisisaveryverylongname234872934_thisisaveryverylongnameabcde( f1 TINYTEXT )
LANGUAGE SQL DETERMINISTIC SQL SECURITY DEFINER COMMENT 'this is simple'
BEGIN
SET @v1 = f1;
SELECT @v1, @v1;
END//
ERROR 42000: Identifier name 'sp1_thisisaveryverylongname234872934_thisisaveryverylongnameabcde' is too long
CALL sp1_thisisaveryverylongname234872934_thisisaveryverylongnameabcde( 'abc' );
ERROR 42000: Identifier name 'sp1_thisisaveryverylongname234872934_thisisaveryverylongnameabcde' is too long
SHOW PROCEDURE STATUS WHERE db = 'db_storedproc';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( f1 BINARY )
LANGUAGE SQL DETERMINISTIC SQL SECURITY INVOKER COMMENT 'this is simple'
BEGIN
SET @v1 = f1;
SELECT @v1;
END//
CALL sp1( 34 );
@v1
3
Warnings:
Warning	1265	Data truncated for column 'f1' at row 1
SHOW PROCEDURE STATUS WHERE db = 'db_storedproc';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sp1	PROCEDURE	root@localhost	<modified>	<created>	INVOKER	this is simple	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( f1 BLOB )
LANGUAGE SQL NOT DETERMINISTIC SQL SECURITY INVOKER COMMENT 'this is simple'
BEGIN
set @v1 = f1;
SELECT @v1;
END//
CALL sp1( 34 );
@v1
34
SHOW PROCEDURE STATUS WHERE db = 'db_storedproc';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sp1	PROCEDURE	root@localhost	<modified>	<created>	INVOKER	this is simple	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( f1 INT )
LANGUAGE SQL NOT DETERMINISTIC SQL SECURITY INVOKER COMMENT 'this is simple'
BEGIN
SET @v1 = f1;
SELECT @v1;
END//
CALL sp1( 34 );
@v1
34
SHOW PROCEDURE STATUS WHERE db = 'db_storedproc';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sp1	PROCEDURE	root@localhost	<modified>	<created>	INVOKER	this is simple	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( f1 DECIMAL(256, 30) )
LANGUAGE SQL NOT DETERMINISTIC SQL SECURITY INVOKER COMMENT 'this is simple'
BEGIN
SET @v1 = f1;
SELECT @v1;
END//
ERROR 42000: Too-big precision 256 specified for ''. Maximum is 65.
DROP PROCEDURE IF EXISTS sp1//
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( f1 DECIMAL(66, 30) )
LANGUAGE SQL NOT DETERMINISTIC SQL SECURITY INVOKER COMMENT 'this is simple'
BEGIN
SET @v1 = f1;
SELECT @v1;
END//
ERROR 42000: Too-big precision 66 specified for ''. Maximum is 65.
DROP PROCEDURE IF EXISTS sp1//
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
DROP TABLE IF EXISTS t1_aux;
DROP PROCEDURE IF EXISTS sproc_1;
DROP FUNCTION IF EXISTS func_1;
CREATE TABLE t1_aux ( f1 DECIMAL(65, 30) );
INSERT INTO t1_aux SET f1 = NULL;
CREATE PROCEDURE sproc_1(f1 DECIMAL(65, 30), OUT f2 DECIMAL(65, 30))
LANGUAGE SQL NOT DETERMINISTIC SQL SECURITY INVOKER COMMENT 'this is simple'
BEGIN
SET f2 = NULL;
SET f2 = f1;
SET @v2_proc = f1;
END//
CREATE FUNCTION func_1(f1 DECIMAL(65, 30)) RETURNS DECIMAL(65,30)
LANGUAGE SQL NOT DETERMINISTIC SQL SECURITY INVOKER COMMENT 'this is simple'
BEGIN
RETURN f1;
END//
SHOW PROCEDURE STATUS WHERE db = 'db_storedproc';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sproc_1	PROCEDURE	root@localhost	<modified>	<created>	INVOKER	this is simple	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
SHOW FUNCTION STATUS WHERE db = 'db_storedproc';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	func_1	FUNCTION	root@localhost	<modified>	<created>	INVOKER	this is simple	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 1.7976931348623157493578e+308;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(1.7976931348623157493578e+308, @v1_proc);
SET @v1_func = func_1(1.7976931348623157493578e+308);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+100;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+100, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+100);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+99;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+99, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+99);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+98;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+98, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+98);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+97;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+97, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+97);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+96;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+96, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+96);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+95;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+95, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+95);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+94;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+94, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+94);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+93;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+93, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+93);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+92;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+92, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+92);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+91;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+91, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+91);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+90;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+90, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+90);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+89;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+89, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+89);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+88;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+88, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+88);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+87;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+87, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+87);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+86;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+86, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+86);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+85;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+85, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+85);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+84;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+84, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+84);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+83;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+83, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+83);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+82;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+82, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+82);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+81;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+81, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+81);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+80;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+80, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+80);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+79;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+79, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+79);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+78;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+78, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+78);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+77;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+77, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+77);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+76;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+76, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+76);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+75;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+75, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+75);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+74;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+74, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+74);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+73;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+73, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+73);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+72;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+72, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+72);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+71;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+71, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+71);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+70;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+70, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+70);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+69;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+69, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+69);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+68;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+68, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+68);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+67;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+67, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+67);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+66;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+66, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+66);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+65;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+65, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+65);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+64;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+64, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+64);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+63;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+63, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+63);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+62;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+62, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+62);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+61;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+61, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+61);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+60;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+60, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+60);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+59;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+59, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+59);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+58;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+58, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+58);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+57;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+57, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+57);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+56;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+56, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+56);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+55;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+55, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+55);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+54;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+54, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+54);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+53;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+53, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+53);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+52;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+52, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+52);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+51;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+51, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+51);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+50;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+50, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+50);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+49;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+49, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+49);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+48;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+48, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+48);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+47;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+47, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+47);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+46;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+46, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+46);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+45;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+45, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+45);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+44;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+44, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+44);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+43;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+43, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+43);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+42;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+42, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+42);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+41;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+41, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+41);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+40;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+40, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+40);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+39;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+39, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+39);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+38;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+38, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+38);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+37;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+37, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+37);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+36;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+36, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+36);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+35;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+35, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+35);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+34;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+34, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+34);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+33;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+33, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+33);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+32;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+32, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+32);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+31;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+31, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+31);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+30;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+30, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+30);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+29;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+29, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+29);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+28;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+28, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+28);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+27;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+27, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+27);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+26;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+26, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+26);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+25;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+25, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+25);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+24;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+24, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+24);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+23;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+23, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+23);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+22;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+22, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+22);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+21;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+21, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+21);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+20;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+20, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+20);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+19;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+19, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+19);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+18;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+18, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+18);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+17;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+17, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+17);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+16;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+16, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+16);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+15;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+15, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+15);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+14;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+14, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+14);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+13;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+13, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+13);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+12;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+12, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+12);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+11;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+11, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+11);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+10;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+10, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+10);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+9;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+9, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+9);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+8;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+8, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+8);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+7;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+7, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+7);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+6;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+6, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+6);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+5;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+5, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+5);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+4;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+4, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+4);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+3;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+3, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+3);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+2;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+2, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+2);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+1;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+1, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+1);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e+0;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e+0, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e+0);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-100;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-100, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-100);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-99;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-99, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-99);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-98;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-98, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-98);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-97;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-97, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-97);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-96;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-96, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-96);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-95;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-95, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-95);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-94;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-94, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-94);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-93;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-93, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-93);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-92;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-92, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-92);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-91;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-91, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-91);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-90;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-90, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-90);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-89;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-89, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-89);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-88;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-88, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-88);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-87;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-87, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-87);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-86;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-86, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-86);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-85;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-85, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-85);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-84;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-84, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-84);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-83;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-83, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-83);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-82;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-82, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-82);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-81;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-81, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-81);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-80;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-80, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-80);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-79;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-79, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-79);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-78;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-78, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-78);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-77;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-77, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-77);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-76;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-76, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-76);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-75;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-75, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-75);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-74;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-74, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-74);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-73;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-73, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-73);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-72;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-72, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-72);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-71;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-71, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-71);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-70;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-70, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-70);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-69;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-69, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-69);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-68;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-68, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-68);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-67;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-67, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-67);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-66;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-66, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-66);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-65;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-65, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-65);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-64;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-64, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-64);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-63;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-63, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-63);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-62;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-62, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-62);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-61;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-61, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-61);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-60;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-60, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-60);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-59;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-59, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-59);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-58;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-58, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-58);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-57;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-57, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-57);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-56;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-56, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-56);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-55;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-55, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-55);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-54;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-54, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-54);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-53;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-53, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-53);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-52;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-52, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-52);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-51;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-51, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-51);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-50;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-50, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-50);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-49;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-49, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-49);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-48;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-48, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-48);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-47;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-47, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-47);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-46;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-46, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-46);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-45;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-45, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-45);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-44;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-44, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-44);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-43;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-43, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-43);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-42;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-42, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-42);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-41;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-41, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-41);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-40;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-40, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-40);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-39;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-39, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-39);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-38;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-38, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-38);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-37;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-37, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-37);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-36;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-36, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-36);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-35;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-35, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-35);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-34;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-34, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-34);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-33;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-33, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-33);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-32;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-32, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-32);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-31;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-31, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-31);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-30;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-30, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-30);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-29;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-29, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-29);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-28;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-28, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-28);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-27;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-27, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-27);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-26;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-26, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-26);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-25;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-25, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-25);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-24;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-24, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-24);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-23;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-23, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-23);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-22;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-22, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-22);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-21;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-21, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-21);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-20;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-20, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-20);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-19;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-19, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-19);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-18;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-18, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-18);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-17;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-17, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-17);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-16;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-16, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-16);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-15;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-15, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-15);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-14;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-14, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-14);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-13;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-13, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-13);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-12;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-12, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-12);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-11;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-11, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-11);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-10;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-10, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-10);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-9;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-9, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-9);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-8;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-8, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-8);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-7;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-7, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-7);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-6;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-6, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-6);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-5;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-5, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-5);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-4;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-4, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-4);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-3;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-3, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-3);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-2;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-2, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-2);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-1;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-1, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-1);
UPDATE t1_aux SET f1 = NULL;
SELECT f1,f1,f1,f1 INTO @v1_tab,@v1_proc,@v2_proc,@v1_func FROM t1_aux;
UPDATE t1_aux SET f1 = 0.1234567890987654321e-0;
SELECT f1 INTO @v1_tab FROM t1_aux;
CALL sproc_1(0.1234567890987654321e-0, @v1_proc);
SET @v1_func = func_1(0.1234567890987654321e-0);
DROP PROCEDURE sproc_1;
DROP FUNCTION  func_1;
DROP TABLE     t1_aux;
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( f1 ENUM("value1", "value1") )
LANGUAGE SQL NOT DETERMINISTIC SQL SECURITY INVOKER COMMENT 'this is simple'
BEGIN
SELECT f1;
END//
Warnings:
Note	1291	Column '' has duplicated value 'value1' in ENUM
CALL sp1( "value1" );
f1
value1
Warnings:
Note	1291	Column '' has duplicated value 'value1' in ENUM
SHOW PROCEDURE STATUS WHERE db = 'db_storedproc';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sp1	PROCEDURE	root@localhost	<modified>	<created>	INVOKER	this is simple	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( f1 SET("value1", "value1") )
LANGUAGE SQL NOT DETERMINISTIC SQL SECURITY INVOKER COMMENT 'this is simple'
BEGIN
SELECT f1;
END//
Warnings:
Note	1291	Column '' has duplicated value 'value1' in SET
CALL sp1( "value1, value1" );
f1
value1
Warnings:
Note	1291	Column '' has duplicated value 'value1' in SET
Warning	1265	Data truncated for column 'f1' at row 1
SHOW PROCEDURE STATUS WHERE db = 'db_storedproc';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sp1	PROCEDURE	root@localhost	<modified>	<created>	INVOKER	this is simple	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( f1 ENUM("value1", "value1") )
LANGUAGE SQL NOT DETERMINISTIC SQL SECURITY INVOKER COMMENT 'this is simple'
BEGIN
SELECT f1;
END//
Warnings:
Note	1291	Column '' has duplicated value 'value1' in ENUM
CALL sp1( "value1" );
f1
value1
Warnings:
Note	1291	Column '' has duplicated value 'value1' in ENUM
SHOW PROCEDURE STATUS WHERE db = 'db_storedproc';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sp1	PROCEDURE	root@localhost	<modified>	<created>	INVOKER	this is simple	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( f1 TEXT ) LANGUAGE SQL SELECT f1;
CALL sp1( 'abc' );
f1
abc
SHOW PROCEDURE STATUS LIKE 'sp1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sp1	PROCEDURE	root@localhost	<modified>	<created>	DEFINER		latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( f1 text ) deterministic SELECT f1;
CALL sp1( 'abc' );
f1
abc
SHOW PROCEDURE STATUS LIKE 'sp1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sp1	PROCEDURE	root@localhost	<modified>	<created>	DEFINER		latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( f1 TEXT ) NOT DETERMINISTIC SELECT f1;
CALL sp1( 'abc' );
f1
abc
SHOW PROCEDURE STATUS LIKE 'sp1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sp1	PROCEDURE	root@localhost	<modified>	<created>	DEFINER		latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( f1 TEXT ) SQL SECURITY DEFINER SELECT f1;
CALL sp1( 'abc' );
f1
abc
SHOW PROCEDURE STATUS LIKE 'sp1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sp1	PROCEDURE	root@localhost	<modified>	<created>	DEFINER		latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( f1 TEXT ) SQL SECURITY INVOKER SELECT f1;
CALL sp1( 'abc' );
f1
abc
SHOW PROCEDURE STATUS LIKE 'sp1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sp1	PROCEDURE	root@localhost	<modified>	<created>	INVOKER		latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( f1 TEXT ) COMMENT 'this is simple' SELECT f1;
CALL sp1( 'abc' );
f1
abc
SHOW PROCEDURE STATUS LIKE 'sp1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sp1	PROCEDURE	root@localhost	<modified>	<created>	DEFINER	this is simple	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP PROCEDURE sp1_thisisaveryverylongname234872934_thisisaveryverylongname234872934;
ERROR 42000: Identifier name 'sp1_thisisaveryverylongname234872934_thisisaveryverylongname234872934' is too long
DROP PROCEDURE sp1_thisisaveryverylongname234872934_thisisaveryverylongnameabcde;
ERROR 42000: Identifier name 'sp1_thisisaveryverylongname234872934_thisisaveryverylongnameabcde' is too long
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.2:
---------------
Ensure that all clauses that should be supported are supported
CREATE FUNCTION
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1 (s CHAR(20)) RETURNS CHAR(50)
RETURN CONCAT('hello, ', s, '!');
SELECT fn1('world');
fn1('world')
hello, world!
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1( f1 MEDIUMTEXT ) RETURNS MEDIUMTEXT
LANGUAGE SQL DETERMINISTIC SQL SECURITY DEFINER COMMENT 'this is simple'
BEGIN
SET @v1 = 'hello';
SET f1 = CONCAT( @v1, f1 );
RETURN f1;
END//
SELECT fn1( ' world');
fn1( ' world')
hello world
SHOW FUNCTION STATUS LIKE 'fn1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	fn1	FUNCTION	root@localhost	<modified>	<created>	DEFINER	this is simple	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1( f1 SMALLINT ) RETURNS SMALLINT
LANGUAGE SQL NOT DETERMINISTIC SQL SECURITY INVOKER COMMENT 'this is simple'
BEGIN
SET f1 = 1 + f1;
RETURN f1;
END//
SELECT fn1( 126 );
fn1( 126 )
127
SHOW FUNCTION STATUS LIKE 'fn1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	fn1	FUNCTION	root@localhost	<modified>	<created>	INVOKER	this is simple	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1( f1 DECIMAL(63, 31) ) RETURNS DECIMAL(63, 31)
LANGUAGE SQL NOT DETERMINISTIC SQL SECURITY INVOKER COMMENT 'this is simple'
BEGIN
SET f1 = 1000000 + f1;
RETURN f1;
END//
ERROR 42000: Too big scale 31 specified for column ''. Maximum is 30.
SELECT fn1( 1.3326e+8 );
ERROR 42000: FUNCTION db_storedproc.fn1 does not exist
CREATE FUNCTION fn1( f1 DECIMAL(63, 30) ) RETURNS DECIMAL(63, 30)
LANGUAGE SQL NOT DETERMINISTIC SQL SECURITY INVOKER COMMENT 'this is simple'
BEGIN
SET f1 = 1000000 + f1;
RETURN f1;
END//
SELECT fn1( 1.3326e+8 );
fn1( 1.3326e+8 )
134260000.000000000000000000000000000000
SHOW FUNCTION STATUS LIKE 'fn1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	fn1	FUNCTION	root@localhost	<modified>	<created>	INVOKER	this is simple	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1( f1 ENUM("value1", "value1") ) RETURNS DECIMAL(63, 30)
LANGUAGE SQL NOT DETERMINISTIC SQL SECURITY INVOKER COMMENT 'this is simple'
BEGIN
RETURN f1;
END//
Warnings:
Note	1291	Column '' has duplicated value 'value1' in ENUM
SELECT fn1( "value1" );
fn1( "value1" )
1.000000000000000000000000000000
SHOW FUNCTION STATUS LIKE 'fn1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	fn1	FUNCTION	root@localhost	<modified>	<created>	INVOKER	this is simple	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1( f1 SET("value1", "value1") ) RETURNS DECIMAL(63, 30)
LANGUAGE SQL NOT DETERMINISTIC SQL SECURITY INVOKER COMMENT 'this is simple'
BEGIN
RETURN f1;
END//
Warnings:
Note	1291	Column '' has duplicated value 'value1' in SET
SELECT fn1( "value1, value1" );
fn1( "value1, value1" )
1.000000000000000000000000000000
SHOW FUNCTION STATUS LIKE 'fn1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	fn1	FUNCTION	root@localhost	<modified>	<created>	INVOKER	this is simple	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1( f1 SMALLINT ) RETURNS SMALLINT LANGUAGE SQL
BEGIN
SET f1 = 1 + f1;
RETURN f1;
END//
SELECT fn1( 126 );
fn1( 126 )
127
SHOW FUNCTION STATUS LIKE 'fn1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	fn1	FUNCTION	root@localhost	<modified>	<created>	DEFINER		latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1( f1 SMALLINT ) RETURNS SMALLINT DETERMINISTIC
BEGIN
SET f1 = 1 + f1;
RETURN f1;
END//
SELECT fn1( 126 );
fn1( 126 )
127
SHOW FUNCTION STATUS LIKE 'fn1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	fn1	FUNCTION	root@localhost	<modified>	<created>	DEFINER		latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1( f1 SMALLINT ) RETURNS SMALLINT NOT DETERMINISTIC
BEGIN
SET f1 = 1 + f1;
RETURN f1;
END//
SELECT fn1( 126 );
fn1( 126 )
127
SHOW FUNCTION STATUS LIKE 'fn1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	fn1	FUNCTION	root@localhost	<modified>	<created>	DEFINER		latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1( f1 SMALLINT ) RETURNS SMALLINT SQL SECURITY DEFINER
BEGIN
SET f1 = 1 + f1;
RETURN f1;
END//
SELECT fn1( 126 );
fn1( 126 )
127
SHOW FUNCTION STATUS LIKE 'fn1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	fn1	FUNCTION	root@localhost	<modified>	<created>	DEFINER		latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1( f1 SMALLINT ) RETURNS SMALLINT SQL SECURITY INVOKER
BEGIN
SET f1 = 1 + f1;
RETURN f1;
END//
SELECT fn1( 126 );
fn1( 126 )
127
SHOW FUNCTION STATUS LIKE 'fn1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	fn1	FUNCTION	root@localhost	<modified>	<created>	INVOKER		latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1( f1 SMALLINT ) RETURNS SMALLINT COMMENT 'this is simple'
BEGIN
SET f1 = 1 + f1;
RETURN f1;
END//
SELECT fn1( 126 );
fn1( 126 )
127
SHOW FUNCTION STATUS LIKE 'fn1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	fn1	FUNCTION	root@localhost	<modified>	<created>	DEFINER	this is simple	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP FUNCTION fn1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.3:
---------------
Ensure that all clauses that should be supported are supported
SHOW CREATE PROC
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1 (f1 char(20) )
SELECT * from t1 where f2 = f1;
show CREATE PROCEDURE sp1;
Procedure	sql_mode	Create Procedure	character_set_client	collation_connection	Database Collation
sp1	NO_ENGINE_SUBSTITUTION	CREATE DEFINER=`root`@`localhost` PROCEDURE `sp1`(f1 char(20) )
SELECT * from t1 where f2 = f1	latin1	<modified>	<created>
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.4:
---------------
show create function
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1 (s char(20)) returns char(50)
return concat('hello, ', s, '!');
show CREATE FUNCTION fn1;
Function	sql_mode	Create Function	character_set_client	collation_connection	Database Collation
fn1	NO_ENGINE_SUBSTITUTION	CREATE DEFINER=`root`@`localhost` FUNCTION `fn1`(s char(20)) RETURNS char(50) CHARSET utf8mb4
return concat('hello, ', s, '!')	latin1	<modified>	<created>
DROP FUNCTION fn1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.5:
---------------
SHOW PROCEDURE status
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
CREATE PROCEDURE sp5()
SELECT * from t1;
SHOW PROCEDURE status like 'sp5';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sp5	PROCEDURE	root@localhost	<modified>	<created>	DEFINER		latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP PROCEDURE sp5;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.6:
---------------
show function status
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
CREATE FUNCTION fn5(a int) returns int
BEGIN
set @b = 0.9 * a;
return @b;
END//
SHOW FUNCTION STATUS LIKE 'fn5';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	fn5	FUNCTION	root@localhost	<modified>	<created>	DEFINER		latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP FUNCTION fn5;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.7:
---------------
CALL procedure
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp7a;
DROP PROCEDURE IF EXISTS sp7b;
DROP PROCEDURE IF EXISTS sp7c;
CREATE PROCEDURE sp7a(a char(20))
SELECT * from t1 where t1.f2 = a;
CALL sp7a( 'xyz' );
f1	f2	f3	f4	f5	f6
CREATE PROCEDURE sp7b (a char (20), out b char(20))
SELECT f1 into b from t1 where t1.f2= a;
CALL sp7b('xyz', @out_param);
Warnings:
Warning	1329	No data - zero rows fetched, selected, or processed
SELECT @out_param;
@out_param
NULL
CREATE PROCEDURE sp7c (a char (20), out b char(20), inout c int)
BEGIN
SELECT f1 into b from t1 where t1.f2=a;
update t1 set t1.f2=999 where t1.f4=c;
SELECT f2 into c from t1 where t1.f2=999;
END//
set @c=1;
CALL sp7c('xyz', @out_param, @c);
SELECT @out_param;
@out_param
NULL
SELECT @c;
@c
1
DROP PROCEDURE sp7a;
DROP PROCEDURE sp7b;
DROP PROCEDURE sp7c;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.8:
---------------
calling function
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
CREATE FUNCTION fn8(a char(20)) returns char(50)
return concat('hello, ', a, '!');
SELECT fn8('world');
fn8('world')
hello, world!
DROP FUNCTION fn8;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.9:
---------------
drop procedure
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
SELECT * from information_schema.routines where specific_name='sp9';
SPECIFIC_NAME	ROUTINE_CATALOG	ROUTINE_SCHEMA	ROUTINE_NAME	ROUTINE_TYPE	DATA_TYPE	CHARACTER_MAXIMUM_LENGTH	CHARACTER_OCTET_LENGTH	NUMERIC_PRECISION	NUMERIC_SCALE	DATETIME_PRECISION	CHARACTER_SET_NAME	COLLATION_NAME	DTD_IDENTIFIER	ROUTINE_BODY	ROUTINE_DEFINITION	EXTERNAL_NAME	EXTERNAL_LANGUAGE	PARAMETER_STYLE	IS_DETERMINISTIC	SQL_DATA_ACCESS	SQL_PATH	SECURITY_TYPE	CREATED	LAST_ALTERED	SQL_MODE	ROUTINE_COMMENT	DEFINER	CHARACTER_SET_CLIENT	COLLATION_CONNECTION	DATABASE_COLLATION
DROP PROCEDURE IF EXISTS sp9;
SELECT * from information_schema.routines where specific_name='sp9';
SPECIFIC_NAME	ROUTINE_CATALOG	ROUTINE_SCHEMA	ROUTINE_NAME	ROUTINE_TYPE	DATA_TYPE	CHARACTER_MAXIMUM_LENGTH	CHARACTER_OCTET_LENGTH	NUMERIC_PRECISION	NUMERIC_SCALE	DATETIME_PRECISION	CHARACTER_SET_NAME	COLLATION_NAME	DTD_IDENTIFIER	ROUTINE_BODY	ROUTINE_DEFINITION	EXTERNAL_NAME	EXTERNAL_LANGUAGE	PARAMETER_STYLE	IS_DETERMINISTIC	SQL_DATA_ACCESS	SQL_PATH	SECURITY_TYPE	CREATED	LAST_ALTERED	SQL_MODE	ROUTINE_COMMENT	DEFINER	CHARACTER_SET_CLIENT	COLLATION_CONNECTION	DATABASE_COLLATION
CREATE PROCEDURE sp9()SELECT * from t1;
SELECT * from information_schema.routines where specific_name='sp9';
SPECIFIC_NAME	ROUTINE_CATALOG	ROUTINE_SCHEMA	ROUTINE_NAME	ROUTINE_TYPE	DATA_TYPE	CHARACTER_MAXIMUM_LENGTH	CHARACTER_OCTET_LENGTH	NUMERIC_PRECISION	NUMERIC_SCALE	DATETIME_PRECISION	CHARACTER_SET_NAME	COLLATION_NAME	DTD_IDENTIFIER	ROUTINE_BODY	ROUTINE_DEFINITION	EXTERNAL_NAME	EXTERNAL_LANGUAGE	PARAMETER_STYLE	IS_DETERMINISTIC	SQL_DATA_ACCESS	SQL_PATH	SECURITY_TYPE	CREATED	LAST_ALTERED	SQL_MODE	ROUTINE_COMMENT	DEFINER	CHARACTER_SET_CLIENT	COLLATION_CONNECTION	DATABASE_COLLATION
sp9	def	db_storedproc	sp9	PROCEDURE		NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL	SQL	SELECT * from t1	NULL	SQL	SQL	NO	CONTAINS SQL	NULL	DEFINER	<created>	<modified>	NO_ENGINE_SUBSTITUTION		root@localhost	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP PROCEDURE sp9;
SELECT * from information_schema.routines where specific_name='sp9';
SPECIFIC_NAME	ROUTINE_CATALOG	ROUTINE_SCHEMA	ROUTINE_NAME	ROUTINE_TYPE	DATA_TYPE	CHARACTER_MAXIMUM_LENGTH	CHARACTER_OCTET_LENGTH	NUMERIC_PRECISION	NUMERIC_SCALE	DATETIME_PRECISION	CHARACTER_SET_NAME	COLLATION_NAME	DTD_IDENTIFIER	ROUTINE_BODY	ROUTINE_DEFINITION	EXTERNAL_NAME	EXTERNAL_LANGUAGE	PARAMETER_STYLE	IS_DETERMINISTIC	SQL_DATA_ACCESS	SQL_PATH	SECURITY_TYPE	CREATED	LAST_ALTERED	SQL_MODE	ROUTINE_COMMENT	DEFINER	CHARACTER_SET_CLIENT	COLLATION_CONNECTION	DATABASE_COLLATION
CREATE PROCEDURE sp9()SELECT * from t1;
SELECT * from information_schema.routines where specific_name='sp9';
SPECIFIC_NAME	ROUTINE_CATALOG	ROUTINE_SCHEMA	ROUTINE_NAME	ROUTINE_TYPE	DATA_TYPE	CHARACTER_MAXIMUM_LENGTH	CHARACTER_OCTET_LENGTH	NUMERIC_PRECISION	NUMERIC_SCALE	DATETIME_PRECISION	CHARACTER_SET_NAME	COLLATION_NAME	DTD_IDENTIFIER	ROUTINE_BODY	ROUTINE_DEFINITION	EXTERNAL_NAME	EXTERNAL_LANGUAGE	PARAMETER_STYLE	IS_DETERMINISTIC	SQL_DATA_ACCESS	SQL_PATH	SECURITY_TYPE	CREATED	LAST_ALTERED	SQL_MODE	ROUTINE_COMMENT	DEFINER	CHARACTER_SET_CLIENT	COLLATION_CONNECTION	DATABASE_COLLATION
sp9	def	db_storedproc	sp9	PROCEDURE		NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL	SQL	SELECT * from t1	NULL	SQL	SQL	NO	CONTAINS SQL	NULL	DEFINER	<created>	<modified>	NO_ENGINE_SUBSTITUTION		root@localhost	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP PROCEDURE IF EXISTS sp9;
SELECT * from information_schema.routines where specific_name='sp9';
SPECIFIC_NAME	ROUTINE_CATALOG	ROUTINE_SCHEMA	ROUTINE_NAME	ROUTINE_TYPE	DATA_TYPE	CHARACTER_MAXIMUM_LENGTH	CHARACTER_OCTET_LENGTH	NUMERIC_PRECISION	NUMERIC_SCALE	DATETIME_PRECISION	CHARACTER_SET_NAME	COLLATION_NAME	DTD_IDENTIFIER	ROUTINE_BODY	ROUTINE_DEFINITION	EXTERNAL_NAME	EXTERNAL_LANGUAGE	PARAMETER_STYLE	IS_DETERMINISTIC	SQL_DATA_ACCESS	SQL_PATH	SECURITY_TYPE	CREATED	LAST_ALTERED	SQL_MODE	ROUTINE_COMMENT	DEFINER	CHARACTER_SET_CLIENT	COLLATION_CONNECTION	DATABASE_COLLATION
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.10:
----------------
DROP FUNCTION
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
SELECT * from information_schema.routines where specific_name='fn10' and routine_type='FUNCTION';
SPECIFIC_NAME	ROUTINE_CATALOG	ROUTINE_SCHEMA	ROUTINE_NAME	ROUTINE_TYPE	DATA_TYPE	CHARACTER_MAXIMUM_LENGTH	CHARACTER_OCTET_LENGTH	NUMERIC_PRECISION	NUMERIC_SCALE	DATETIME_PRECISION	CHARACTER_SET_NAME	COLLATION_NAME	DTD_IDENTIFIER	ROUTINE_BODY	ROUTINE_DEFINITION	EXTERNAL_NAME	EXTERNAL_LANGUAGE	PARAMETER_STYLE	IS_DETERMINISTIC	SQL_DATA_ACCESS	SQL_PATH	SECURITY_TYPE	CREATED	LAST_ALTERED	SQL_MODE	ROUTINE_COMMENT	DEFINER	CHARACTER_SET_CLIENT	COLLATION_CONNECTION	DATABASE_COLLATION
DROP FUNCTION IF EXISTS fn10;
SELECT * from information_schema.routines where specific_name='fn10' and routine_type='FUNCTION';
SPECIFIC_NAME	ROUTINE_CATALOG	ROUTINE_SCHEMA	ROUTINE_NAME	ROUTINE_TYPE	DATA_TYPE	CHARACTER_MAXIMUM_LENGTH	CHARACTER_OCTET_LENGTH	NUMERIC_PRECISION	NUMERIC_SCALE	DATETIME_PRECISION	CHARACTER_SET_NAME	COLLATION_NAME	DTD_IDENTIFIER	ROUTINE_BODY	ROUTINE_DEFINITION	EXTERNAL_NAME	EXTERNAL_LANGUAGE	PARAMETER_STYLE	IS_DETERMINISTIC	SQL_DATA_ACCESS	SQL_PATH	SECURITY_TYPE	CREATED	LAST_ALTERED	SQL_MODE	ROUTINE_COMMENT	DEFINER	CHARACTER_SET_CLIENT	COLLATION_CONNECTION	DATABASE_COLLATION
CREATE FUNCTION fn10() returns int return 100;
SELECT * from information_schema.routines where specific_name='fn10' and routine_type='FUNCTION';
SPECIFIC_NAME	ROUTINE_CATALOG	ROUTINE_SCHEMA	ROUTINE_NAME	ROUTINE_TYPE	DATA_TYPE	CHARACTER_MAXIMUM_LENGTH	CHARACTER_OCTET_LENGTH	NUMERIC_PRECISION	NUMERIC_SCALE	DATETIME_PRECISION	CHARACTER_SET_NAME	COLLATION_NAME	DTD_IDENTIFIER	ROUTINE_BODY	ROUTINE_DEFINITION	EXTERNAL_NAME	EXTERNAL_LANGUAGE	PARAMETER_STYLE	IS_DETERMINISTIC	SQL_DATA_ACCESS	SQL_PATH	SECURITY_TYPE	CREATED	LAST_ALTERED	SQL_MODE	ROUTINE_COMMENT	DEFINER	CHARACTER_SET_CLIENT	COLLATION_CONNECTION	DATABASE_COLLATION
fn10	def	db_storedproc	fn10	FUNCTION	int	NULL	NULL	10	0	NULL	NULL	NULL	int	SQL	return 100	NULL	SQL	SQL	NO	CONTAINS SQL	NULL	DEFINER	<created>	<modified>	NO_ENGINE_SUBSTITUTION		root@localhost	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP FUNCTION fn10;
SELECT * from information_schema.routines where specific_name='fn10' and routine_type='FUNCTION';
SPECIFIC_NAME	ROUTINE_CATALOG	ROUTINE_SCHEMA	ROUTINE_NAME	ROUTINE_TYPE	DATA_TYPE	CHARACTER_MAXIMUM_LENGTH	CHARACTER_OCTET_LENGTH	NUMERIC_PRECISION	NUMERIC_SCALE	DATETIME_PRECISION	CHARACTER_SET_NAME	COLLATION_NAME	DTD_IDENTIFIER	ROUTINE_BODY	ROUTINE_DEFINITION	EXTERNAL_NAME	EXTERNAL_LANGUAGE	PARAMETER_STYLE	IS_DETERMINISTIC	SQL_DATA_ACCESS	SQL_PATH	SECURITY_TYPE	CREATED	LAST_ALTERED	SQL_MODE	ROUTINE_COMMENT	DEFINER	CHARACTER_SET_CLIENT	COLLATION_CONNECTION	DATABASE_COLLATION
CREATE FUNCTION fn10() returns int return 100;
SELECT * from information_schema.routines where specific_name='fn10' and routine_type='FUNCTION';
SPECIFIC_NAME	ROUTINE_CATALOG	ROUTINE_SCHEMA	ROUTINE_NAME	ROUTINE_TYPE	DATA_TYPE	CHARACTER_MAXIMUM_LENGTH	CHARACTER_OCTET_LENGTH	NUMERIC_PRECISION	NUMERIC_SCALE	DATETIME_PRECISION	CHARACTER_SET_NAME	COLLATION_NAME	DTD_IDENTIFIER	ROUTINE_BODY	ROUTINE_DEFINITION	EXTERNAL_NAME	EXTERNAL_LANGUAGE	PARAMETER_STYLE	IS_DETERMINISTIC	SQL_DATA_ACCESS	SQL_PATH	SECURITY_TYPE	CREATED	LAST_ALTERED	SQL_MODE	ROUTINE_COMMENT	DEFINER	CHARACTER_SET_CLIENT	COLLATION_CONNECTION	DATABASE_COLLATION
fn10	def	db_storedproc	fn10	FUNCTION	int	NULL	NULL	10	0	NULL	NULL	NULL	int	SQL	return 100	NULL	SQL	SQL	NO	CONTAINS SQL	NULL	DEFINER	<created>	<modified>	NO_ENGINE_SUBSTITUTION		root@localhost	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP FUNCTION IF EXISTS fn10;
SELECT * from information_schema.routines where specific_name='fn10' and routine_type='FUNCTION';
SPECIFIC_NAME	ROUTINE_CATALOG	ROUTINE_SCHEMA	ROUTINE_NAME	ROUTINE_TYPE	DATA_TYPE	CHARACTER_MAXIMUM_LENGTH	CHARACTER_OCTET_LENGTH	NUMERIC_PRECISION	NUMERIC_SCALE	DATETIME_PRECISION	CHARACTER_SET_NAME	COLLATION_NAME	DTD_IDENTIFIER	ROUTINE_BODY	ROUTINE_DEFINITION	EXTERNAL_NAME	EXTERNAL_LANGUAGE	PARAMETER_STYLE	IS_DETERMINISTIC	SQL_DATA_ACCESS	SQL_PATH	SECURITY_TYPE	CREATED	LAST_ALTERED	SQL_MODE	ROUTINE_COMMENT	DEFINER	CHARACTER_SET_CLIENT	COLLATION_CONNECTION	DATABASE_COLLATION
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.11:
----------------
alter proc
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
create user 'user_1'@'localhost';
grant execute on db_storedproc.* to 'user_1'@'localhost';
flush privileges;
drop table IF EXISTS mysql.t1;
Warnings:
Note	1051	Unknown table 'mysql.t1'
create table mysql.t1( f1 char );
DROP PROCEDURE IF EXISTS sp11;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp11 does not exist
CREATE PROCEDURE sp11() insert into mysql.t1 values('a');
SELECT security_type from information_schema.routines where specific_name='sp11';
SECURITY_TYPE
DEFINER
	
user_1@localhost	db_storedproc
CALL sp11();
USE db_storedproc;
	
root@localhost	db_storedproc
alter procedure sp11 sql security invoker;
SELECT security_type from information_schema.routines where specific_name='sp11';
SECURITY_TYPE
INVOKER
	
user_1@localhost	db_storedproc
USE db_storedproc;
CALL sp11();
ERROR 42000: INSERT command denied to user 'user_1'@'localhost' for table 't1'
commit work;
	
root@localhost	db_storedproc
alter procedure sp11 sql security DEFINER;
SELECT security_type from information_schema.routines where specific_name='sp11';
SECURITY_TYPE
DEFINER
CALL sp11();
DROP USER 'user_1'@'localhost';
DROP PROCEDURE sp11;
drop table mysql.t1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.12:
----------------
alter function
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
CREATE FUNCTION fn12() returns int
return 100;
SELECT security_type from information_schema.routines where specific_name='fn12';
SECURITY_TYPE
DEFINER
SELECT fn12();
fn12()
100
alter function fn12 sql security invoker;
SELECT security_type from information_schema.routines where specific_name='fn12';
SECURITY_TYPE
INVOKER
SELECT fn12();
fn12()
100
alter function fn12 sql security DEFINER;
SELECT security_type from information_schema.routines where specific_name='fn12';
SECURITY_TYPE
DEFINER
SELECT fn12();
fn12()
100
DROP FUNCTION fn12;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.13:
----------------
alter proc
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp11;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp11 does not exist
CREATE PROCEDURE sp11()
SELECT * from t1;
SELECT comment from information_schema.routines where specific_name='sp11';
ERROR 42S22: Unknown column 'comment' in 'field list'
alter procedure sp11 comment 'this is simple';
SELECT comment from information_schema.routines where specific_name='sp11';
ERROR 42S22: Unknown column 'comment' in 'field list'
DROP PROCEDURE sp11;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.14:
----------------
alter function
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP FUNCTION IF EXISTS fn12;
Warnings:
Note	1305	FUNCTION db_storedproc.fn12 does not exist
CREATE FUNCTION fn12() returns int
return 100;
SELECT routine_comment from information_schema.routines where specific_name='fn12';
ROUTINE_COMMENT

alter function fn12 comment 'this is simple';
SELECT routine_comment from information_schema.routines where specific_name='fn12';
ROUTINE_COMMENT
this is simple
DROP FUNCTION fn12;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.15:
----------------
Ensure that any invalid stored procedure name is never accepted, and that an
appropriate error message is returned when the name is rejected
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
CREATE PROCEDURE sp1()
DROP PROCEDURE sp1;
ERROR HY000: Can't drop or alter a PROCEDURE from within another stored routine
CREATE PROCEDURE !_sp1( f1 char(20) )
SELECT * from t1 where f2 = f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '!_sp1( f1 char(20) )
SELECT * from t1 where f2 = f1' at line 1
CREATE PROCEDURE `function`()
SELECT * from t1 where f2=f1;
DROP PROCEDURE `function`;
CREATE PROCEDURE accessible()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'accessible()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE add()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'add()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE all()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'all()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE alter()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alter()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE analyze()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'analyze()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE and()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'and()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE as()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE asc()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'asc()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE asensitive()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'asensitive()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE before()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'before()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE between()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'between()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE bigint()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'bigint()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE binary()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'binary()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE blob()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'blob()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE both()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'both()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE by()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'by()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE call()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'call()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE cascade()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cascade()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE case()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'case()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE change()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'change()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE char()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'char()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE character()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'character()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE check()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'check()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE collate()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'collate()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE column()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'column()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE condition()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'condition()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE constraint()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'constraint()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE continue()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'continue()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE convert()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'convert()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE create()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'create()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE cross()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cross()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE current_date()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_date()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE current_time()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_time()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE current_timestamp()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_timestamp()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE current_user()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_user()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE cursor()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cursor()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE database()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'database()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE databases()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'databases()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE day_hour()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_hour()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE day_microsecond()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_microsecond()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE day_minute()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_minute()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE day_second()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_second()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE dec()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'dec()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE decimal()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE declare()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE default()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'default()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE delayed()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delayed()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE delete()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE desc()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE describe()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'describe()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE deterministic()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'deterministic()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE distinct()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE distinctrow()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinctrow()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE div()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'div()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE double()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'double()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE drop()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'drop()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE dual()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'dual()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE each()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'each()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE else()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'else()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE elseif()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'elseif()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE enclosed()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enclosed()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE escaped()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'escaped()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE exists()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'exists()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE exit()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'exit()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE explain()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'explain()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE false()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'false()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE fetch()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'fetch()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE fields()
SELECT * from t1 where f2=f1;
DROP PROCEDURE fields;
CREATE PROCEDURE float()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE for()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'for()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE force()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'force()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE foreign()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'foreign()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE from()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE fulltext()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'fulltext()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE grant()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'grant()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE group()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'group()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE having()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'having()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE high_priority()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'high_priority()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE hour_microsecond()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'hour_microsecond()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE hour_minute()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'hour_minute()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE hour_second()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'hour_second()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE if()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE ignore()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ignore()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE in()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'in()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE index()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE infile()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'infile()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE inner()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'inner()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE inout()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'inout()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE insensitive()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'insensitive()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE insert()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'insert()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE int()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE int1()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int1()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE int2()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int2()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE int3()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int3()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE int4()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int4()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE int8()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int8()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE integer()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'integer()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE interval()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'interval()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE into()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'into()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE is()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'is()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE iterate()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'iterate()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE join()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'join()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE key()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE keys()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'keys()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE kill()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'kill()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE leading()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'leading()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE leave()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'leave()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE left()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'left()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE like()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'like()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE limit()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'limit()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE linear()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'linear()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE lines()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'lines()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE load()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'load()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE localtime()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'localtime()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE localtimestamp()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'localtimestamp()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE lock()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'lock()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE long()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'long()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE longblob()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'longblob()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE longtext()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'longtext()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE loop()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'loop()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE low_priority()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'low_priority()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE master_ssl_verify_server_cert()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'master_ssl_verify_server_cert()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE match()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'match()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE mediumblob()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumblob()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE mediumint()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumint()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE mediumtext()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumtext()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE middleint()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'middleint()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE minute_microsecond()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'minute_microsecond()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE minute_second()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'minute_second()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE mod()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mod()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE modifies()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'modifies()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE natural()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'natural()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE not()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE no_write_to_binlog()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'no_write_to_binlog()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE null()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE numeric()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE on()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'on()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE optimize()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'optimize()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE option()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'option()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE optionally()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'optionally()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE or()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE order()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE out()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'out()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE outer()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'outer()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE outfile()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'outfile()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE precision()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'precision()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE primary()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'primary()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE procedure()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE purge()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'purge()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE range()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'range()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE read()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'read()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE reads()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'reads()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE real()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'real()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE references()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'references()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE regexp()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'regexp()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE release()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE rename()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'rename()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE repeat()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'repeat()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE replace()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'replace()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE require()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'require()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE restrict()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'restrict()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE return()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE revoke()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'revoke()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE right()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'right()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE rlike()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'rlike()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE schema()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'schema()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE schemas()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'schemas()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE second_microsecond()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'second_microsecond()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE select()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE sensitive()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sensitive()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE separator()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'separator()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE set()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE show()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'show()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE smallint()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'smallint()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE spatial()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'spatial()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE specific()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'specific()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE sql()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE sqlexception()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sqlexception()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE sqlstate()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sqlstate()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE sqlwarning()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sqlwarning()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE sql_big_result()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql_big_result()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE sql_calc_found_rows()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql_calc_found_rows()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE sql_small_result()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql_small_result()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE ssl()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ssl()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE starting()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'starting()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE straight_join()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'straight_join()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE table()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'table()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE terminated()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'terminated()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE then()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'then()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE tinyblob()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyblob()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE tinyint()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyint()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE tinytext()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinytext()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE to()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE trailing()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trailing()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE trigger()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE true()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'true()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE undo()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'undo()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE union()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'union()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE unique()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'unique()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE unlock()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'unlock()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE unsigned()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'unsigned()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE update()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'update()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE usage()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'usage()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE use()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'use()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE using()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE utc_date()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utc_date()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE utc_time()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utc_time()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE utc_timestamp()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utc_timestamp()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE values()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'values()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE varbinary()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varbinary()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE varchar()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varchar()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE varcharacter()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varcharacter()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE varying()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varying()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE when()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'when()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE where()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE while()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'while()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE with()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'with()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE write()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'write()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE xor()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'xor()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE year_month()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'year_month()
SELECT * from t1 where f2=f1' at line 1
CREATE PROCEDURE zerofill()
SELECT * from t1 where f2=f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'zerofill()
SELECT * from t1 where f2=f1' at line 1
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.15:
----------------
Ensure that any invalid function name is never accepted, and that an appropriate
error message is returned when the name is rejected
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
CREATE FUNCTION !_fn1(f1 char) returns char
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '!_fn1(f1 char) returns char
return f1' at line 1
CREATE FUNCTION char(f1 char) returns char
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'char(f1 char) returns char
return f1' at line 1
CREATE FUNCTION char binary(f1 char binary) returns char binary
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'char binary(f1 char binary) returns char binary
return f1' at line 1
CREATE FUNCTION char ascii(f1 char ascii) returns char ascii
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'char ascii(f1 char ascii) returns char ascii
return f1' at line 1
CREATE FUNCTION char not null(f1 char not null) returns char not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'char not null(f1 char not null) returns char not null
return f1' at line 1
CREATE FUNCTION char binary not null(f1 char binary not null) returns char binary not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'char binary not null(f1 char binary not null) returns char binary not null
retur' at line 1
CREATE FUNCTION char ascii not null(f1 char ascii not null) returns char ascii not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'char ascii not null(f1 char ascii not null) returns char ascii not null
return f' at line 1
CREATE FUNCTION tinytext(f1 tinytext) returns tinytext
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinytext(f1 tinytext) returns tinytext
return f1' at line 1
CREATE FUNCTION text(f1 text) returns text
return f1;
DROP FUNCTION text;
CREATE FUNCTION mediumtext(f1 mediumtext) returns mediumtext
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumtext(f1 mediumtext) returns mediumtext
return f1' at line 1
CREATE FUNCTION longtext(f1 longtext) returns longtext
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'longtext(f1 longtext) returns longtext
return f1' at line 1
CREATE FUNCTION tinytext not null(f1 tinytext not null) returns tinytext not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinytext not null(f1 tinytext not null) returns tinytext not null
return f1' at line 1
CREATE FUNCTION text not null(f1 text not null) returns text not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null(f1 text not null) returns text not null
return f1' at line 1
CREATE FUNCTION mediumtext not null(f1 mediumtext not null) returns mediumtext not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumtext not null(f1 mediumtext not null) returns mediumtext not null
return f' at line 1
CREATE FUNCTION longtext not null(f1 longtext not null) returns longtext not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'longtext not null(f1 longtext not null) returns longtext not null
return f1' at line 1
CREATE FUNCTION tinyblob(f1 tinyblob) returns tinyblob
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyblob(f1 tinyblob) returns tinyblob
return f1' at line 1
CREATE FUNCTION blob(f1 blob) returns blob
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'blob(f1 blob) returns blob
return f1' at line 1
CREATE FUNCTION mediumblob(f1 mediumblob) returns mediumblob
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumblob(f1 mediumblob) returns mediumblob
return f1' at line 1
CREATE FUNCTION longblob(f1 longblob) returns longblob
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'longblob(f1 longblob) returns longblob
return f1' at line 1
CREATE FUNCTION tinyblob not null(f1 tinyblob not null) returns tinyblob not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyblob not null(f1 tinyblob not null) returns tinyblob not null
return f1' at line 1
CREATE FUNCTION blob not null(f1 blob not null) returns blob not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'blob not null(f1 blob not null) returns blob not null
return f1' at line 1
CREATE FUNCTION mediumblob not null(f1 mediumblob not null) returns mediumblob not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumblob not null(f1 mediumblob not null) returns mediumblob not null
return f' at line 1
CREATE FUNCTION longblob not null(f1 longblob not null) returns longblob not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'longblob not null(f1 longblob not null) returns longblob not null
return f1' at line 1
CREATE FUNCTION binary(f1 binary) returns binary
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'binary(f1 binary) returns binary
return f1' at line 1
CREATE FUNCTION binary not null(f1 binary not null) returns binary not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'binary not null(f1 binary not null) returns binary not null
return f1' at line 1
CREATE FUNCTION tinyint(f1 tinyint) returns tinyint
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyint(f1 tinyint) returns tinyint
return f1' at line 1
CREATE FUNCTION tinyint unsigned(f1 tinyint unsigned) returns tinyint unsigned
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyint unsigned(f1 tinyint unsigned) returns tinyint unsigned
return f1' at line 1
CREATE FUNCTION tinyint zerofill(f1 tinyint zerofill) returns tinyint zerofill
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyint zerofill(f1 tinyint zerofill) returns tinyint zerofill
return f1' at line 1
CREATE FUNCTION tinyint unsigned zerofill(f1 tinyint unsigned zerofill) returns tinyint unsigned zerofill
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyint unsigned zerofill(f1 tinyint unsigned zerofill) returns tinyint unsigned' at line 1
CREATE FUNCTION smallint(f1 smallint) returns smallint
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'smallint(f1 smallint) returns smallint
return f1' at line 1
CREATE FUNCTION smallint unsigned(f1 smallint unsigned) returns smallint unsigned
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'smallint unsigned(f1 smallint unsigned) returns smallint unsigned
return f1' at line 1
CREATE FUNCTION smallint zerofill(f1 smallint zerofill) returns smallint zerofill
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'smallint zerofill(f1 smallint zerofill) returns smallint zerofill
return f1' at line 1
CREATE FUNCTION smallint unsigned zerofill(f1 smallint unsigned zerofill) returns smallint unsigned zerofill
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'smallint unsigned zerofill(f1 smallint unsigned zerofill) returns smallint unsig' at line 1
CREATE FUNCTION mediumint(f1 mediumint) returns mediumint
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumint(f1 mediumint) returns mediumint
return f1' at line 1
CREATE FUNCTION mediumint unsigned(f1 mediumint unsigned) returns mediumint unsigned
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumint unsigned(f1 mediumint unsigned) returns mediumint unsigned
return f1' at line 1
CREATE FUNCTION mediumint zerofill(f1 mediumint zerofill) returns mediumint zerofill
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumint zerofill(f1 mediumint zerofill) returns mediumint zerofill
return f1' at line 1
CREATE FUNCTION mediumint unsigned zerofill(f1 mediumint unsigned zerofill) returns mediumint unsigned zerofill
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumint unsigned zerofill(f1 mediumint unsigned zerofill) returns mediumint un' at line 1
CREATE FUNCTION int(f1 int) returns int
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int(f1 int) returns int
return f1' at line 1
CREATE FUNCTION int1(f1 int1) returns int1
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int1(f1 int1) returns int1
return f1' at line 1
CREATE FUNCTION int2(f1 int2) returns int2
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int2(f1 int2) returns int2
return f1' at line 1
CREATE FUNCTION int3(f1 int3) returns int3
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int3(f1 int3) returns int3
return f1' at line 1
CREATE FUNCTION int4(f1 int4) returns int4
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int4(f1 int4) returns int4
return f1' at line 1
CREATE FUNCTION int8(f1 int8) returns int8
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int8(f1 int8) returns int8
return f1' at line 1
CREATE FUNCTION int unsigned(f1 int unsigned) returns int unsigned
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int unsigned(f1 int unsigned) returns int unsigned
return f1' at line 1
CREATE FUNCTION int zerofill(f1 int zerofill) returns int zerofill
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int zerofill(f1 int zerofill) returns int zerofill
return f1' at line 1
CREATE FUNCTION int unsigned zerofill(f1 int unsigned zerofill) returns int unsigned zerofill
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int unsigned zerofill(f1 int unsigned zerofill) returns int unsigned zerofill
re' at line 1
CREATE FUNCTION bigint(f1 bigint) returns bigint
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'bigint(f1 bigint) returns bigint
return f1' at line 1
CREATE FUNCTION bigint unsigned(f1 bigint unsigned) returns bigint unsigned
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'bigint unsigned(f1 bigint unsigned) returns bigint unsigned
return f1' at line 1
CREATE FUNCTION bigint zerofill(f1 bigint zerofill) returns bigint zerofill
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'bigint zerofill(f1 bigint zerofill) returns bigint zerofill
return f1' at line 1
CREATE FUNCTION bigint unsigned zerofill(f1 bigint unsigned zerofill) returns bigint unsigned zerofill
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'bigint unsigned zerofill(f1 bigint unsigned zerofill) returns bigint unsigned ze' at line 1
CREATE FUNCTION decimal(f1 decimal) returns decimal
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal(f1 decimal) returns decimal
return f1' at line 1
CREATE FUNCTION decimal unsigned(f1 decimal unsigned) returns decimal unsigned
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal unsigned(f1 decimal unsigned) returns decimal unsigned
return f1' at line 1
CREATE FUNCTION decimal zerofill(f1 decimal zerofill) returns decimal zerofill
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal zerofill(f1 decimal zerofill) returns decimal zerofill
return f1' at line 1
CREATE FUNCTION decimal unsigned zerofill(f1 decimal unsigned zerofill) returns decimal unsigned zerofill
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal unsigned zerofill(f1 decimal unsigned zerofill) returns decimal unsigned' at line 1
CREATE FUNCTION numeric(f1 numeric) returns numeric
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric(f1 numeric) returns numeric
return f1' at line 1
CREATE FUNCTION numeric unsigned(f1 numeric unsigned) returns numeric unsigned
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric unsigned(f1 numeric unsigned) returns numeric unsigned
return f1' at line 1
CREATE FUNCTION numeric zerofill(f1 numeric zerofill) returns numeric zerofill
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric zerofill(f1 numeric zerofill) returns numeric zerofill
return f1' at line 1
CREATE FUNCTION numeric unsigned zerofill(f1 numeric unsigned zerofill) returns numeric unsigned zerofill
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric unsigned zerofill(f1 numeric unsigned zerofill) returns numeric unsigned' at line 1
CREATE FUNCTION real(f1 real) returns real
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'real(f1 real) returns real
return f1' at line 1
CREATE FUNCTION real unsigned(f1 real unsigned) returns real unsigned
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'real unsigned(f1 real unsigned) returns real unsigned
return f1' at line 1
CREATE FUNCTION real zerofill(f1 real zerofill) returns real zerofill
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'real zerofill(f1 real zerofill) returns real zerofill
return f1' at line 1
CREATE FUNCTION real unsigned zerofill(f1 real unsigned zerofill) returns real unsigned zerofill
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'real unsigned zerofill(f1 real unsigned zerofill) returns real unsigned zerofill' at line 1
CREATE FUNCTION float(f1 float) returns float
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float(f1 float) returns float
return f1' at line 1
CREATE FUNCTION float unsigned(f1 float unsigned) returns float unsigned
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float unsigned(f1 float unsigned) returns float unsigned
return f1' at line 1
CREATE FUNCTION float zerofill(f1 float zerofill) returns float zerofill
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float zerofill(f1 float zerofill) returns float zerofill
return f1' at line 1
CREATE FUNCTION float unsigned zerofill(f1 float unsigned zerofill) returns float unsigned zerofill
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float unsigned zerofill(f1 float unsigned zerofill) returns float unsigned zerof' at line 1
CREATE FUNCTION date(f1 date) returns date
return f1;
DROP FUNCTION date;
CREATE FUNCTION time(f1 time) returns time
return f1;
DROP FUNCTION time;
CREATE FUNCTION datetime(f1 datetime) returns datetime
return f1;
DROP FUNCTION datetime;
CREATE FUNCTION timestamp(f1 timestamp) returns timestamp
return f1;
DROP FUNCTION timestamp;
CREATE FUNCTION year(f1 year) returns year
return f1;
DROP FUNCTION year;
CREATE FUNCTION year(4)(f1 year(4)) returns year(4)
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '4)(f1 year(4)) returns year(4)
return f1' at line 1
CREATE FUNCTION enum("1enum", "2enum")(f1 enum("1enum", "2enum")) returns enum("1enum", "2enum")
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '"1enum", "2enum")(f1 enum("1enum", "2enum")) returns enum("1enum", "2enum")
retu' at line 1
CREATE FUNCTION set("1set", "2set")(f1 set("1set", "2set")) returns set("1set", "2set")
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set("1set", "2set")(f1 set("1set", "2set")) returns set("1set", "2set")
return f' at line 1
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
CREATE FUNCTION fn1(f1 char ) returns char
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 char binary ) returns char binary
return f1;
ERROR 42000: This version of MySQL doesn't yet support 'return value collation'
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
CREATE FUNCTION fn1(f1 char ascii ) returns char ascii
return f1;
Warnings:
Warning	1287	'ASCII' is deprecated and will be removed in a future release. Please use CHARACTER SET charset_name instead
Warning	1287	'ASCII' is deprecated and will be removed in a future release. Please use CHARACTER SET charset_name instead
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 char not null ) returns char not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null ) returns char not null
return f1' at line 1
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
CREATE FUNCTION fn1(f1 char binary not null ) returns char binary not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null ) returns char binary not null
return f1' at line 1
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
CREATE FUNCTION fn1(f1 char ascii not null ) returns char ascii not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null ) returns char ascii not null
return f1' at line 1
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
CREATE FUNCTION fn1(f1 tinytext ) returns tinytext
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 text ) returns text
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 mediumtext ) returns mediumtext
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 longtext ) returns longtext
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 tinytext not null ) returns tinytext not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null ) returns tinytext not null
return f1' at line 1
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
CREATE FUNCTION fn1(f1 text not null ) returns text not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null ) returns text not null
return f1' at line 1
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
CREATE FUNCTION fn1(f1 mediumtext not null ) returns mediumtext not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null ) returns mediumtext not null
return f1' at line 1
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
CREATE FUNCTION fn1(f1 longtext not null ) returns longtext not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null ) returns longtext not null
return f1' at line 1
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
CREATE FUNCTION fn1(f1 tinyblob ) returns tinyblob
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 blob ) returns blob
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 mediumblob ) returns mediumblob
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 longblob ) returns longblob
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 tinyblob not null ) returns tinyblob not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null ) returns tinyblob not null
return f1' at line 1
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
CREATE FUNCTION fn1(f1 blob not null ) returns blob not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null ) returns blob not null
return f1' at line 1
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
CREATE FUNCTION fn1(f1 mediumblob not null ) returns mediumblob not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null ) returns mediumblob not null
return f1' at line 1
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
CREATE FUNCTION fn1(f1 longblob not null ) returns longblob not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null ) returns longblob not null
return f1' at line 1
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
CREATE FUNCTION fn1(f1 binary ) returns binary
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 binary not null ) returns binary not null
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null ) returns binary not null
return f1' at line 1
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
CREATE FUNCTION fn1(f1 tinyint ) returns tinyint
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 tinyint unsigned ) returns tinyint unsigned
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 tinyint zerofill ) returns tinyint zerofill
return f1;
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 tinyint unsigned zerofill ) returns tinyint unsigned zerofill
return f1;
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 smallint ) returns smallint
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 smallint unsigned ) returns smallint unsigned
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 smallint zerofill ) returns smallint zerofill
return f1;
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 smallint unsigned zerofill ) returns smallint unsigned zerofill
return f1;
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 mediumint ) returns mediumint
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 mediumint unsigned ) returns mediumint unsigned
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 mediumint zerofill ) returns mediumint zerofill
return f1;
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 mediumint unsigned zerofill ) returns mediumint unsigned zerofill
return f1;
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 int ) returns int
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 int unsigned ) returns int unsigned
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 int1 unsigned ) returns int1 unsigned
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 int2 unsigned ) returns int2 unsigned
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 int3 unsigned ) returns int3 unsigned
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 int4 unsigned ) returns int4 unsigned
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 int8 unsigned ) returns int8 unsigned
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 int zerofill ) returns int zerofill
return f1;
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 int unsigned zerofill ) returns int unsigned zerofill
return f1;
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 bigint ) returns bigint
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 bigint unsigned ) returns bigint unsigned
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 bigint zerofill ) returns bigint zerofill
return f1;
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 bigint unsigned zerofill ) returns bigint unsigned zerofill
return f1;
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 decimal ) returns decimal
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 decimal unsigned ) returns decimal unsigned
return f1;
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 decimal zerofill ) returns decimal zerofill
return f1;
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 decimal unsigned zerofill ) returns decimal unsigned zerofill
return f1;
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 numeric ) returns numeric
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 numeric unsigned ) returns numeric unsigned
return f1;
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 numeric zerofill ) returns numeric zerofill
return f1;
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 numeric unsigned zerofill ) returns numeric unsigned zerofill
return f1;
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 real ) returns real
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 real unsigned ) returns real unsigned
return f1;
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 real zerofill ) returns real zerofill
return f1;
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 real unsigned zerofill ) returns real unsigned zerofill
return f1;
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 float ) returns float
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 float unsigned ) returns float unsigned
return f1;
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 float zerofill ) returns float zerofill
return f1;
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 float unsigned zerofill ) returns float unsigned zerofill
return f1;
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 date ) returns date
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 time ) returns time
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 datetime ) returns datetime
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 timestamp ) returns timestamp
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 year ) returns year
return f1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(f1 year(f1 4) ) returns year(4)
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'f1 4) ) returns year(4)
return f1' at line 1
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
CREATE FUNCTION fn1(f1 enum(f1 "1enum", "2enum") ) returns enum("1enum", "2enum")
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'f1 "1enum", "2enum") ) returns enum("1enum", "2enum")
return f1' at line 1
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
CREATE FUNCTION fn1(f1 set(f1 "1set", "2set") ) returns set("1set", "2set")
return f1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'f1 "1set", "2set") ) returns set("1set", "2set")
return f1' at line 1
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.16:
----------------
Ensure that a reference to a non-existent stored procedure is rejected with an
appropriate error message
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp16;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp16 does not exist
CALL sp16( 'xyz' );
ERROR 42000: PROCEDURE db_storedproc.sp16 does not exist
CREATE DATABASE db1;
USE db1;
CREATE PROCEDURE sp16()
BEGIN
set @var1 = 1;
SELECT @var1;
END//
CALL db_storedproc.sp16();
ERROR 42000: PROCEDURE db_storedproc.sp16 does not exist
USE db_storedproc;
DROP PROCEDURE db1.sp16;
DROP DATABASE db1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.17:
----------------
Ensure that it is possible to drop, create and CALL/execute a procedure and a
function with the same name, even in the same database
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
USE db_storedproc;
DROP FUNCTION IF EXISTS sp1;
Warnings:
Note	1305	FUNCTION db_storedproc.sp1 does not exist
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1 ()
BEGIN
declare x enum( 'db1', 'test' ) default 'test';
SELECT x;
END//
CALL sp1();
x
test
CREATE FUNCTION sp1 (y char) returns char return y;
SELECT sp1( 'a' );
sp1( 'a' )
a
DROP DATABASE IF EXISTS db1;
Warnings:
Note	1008	Can't drop database 'db1'; database doesn't exist
CREATE DATABASE db1;
USE db1;
CALL db_storedproc.sp1( );
x
test
SELECT db_storedproc.sp1( 'a' );
db_storedproc.sp1( 'a' )
a
DROP FUNCTION db_storedproc.sp1;
USE db_storedproc;
SELECT sp1('a');
ERROR 42000: FUNCTION db_storedproc.sp1 does not exist
DROP PROCEDURE sp1;
CALL sp1();
ERROR 42000: PROCEDURE db_storedproc.sp1 does not exist
SELECT sp1('a');
ERROR 42000: FUNCTION db_storedproc.sp1 does not exist
USE db_storedproc;
DROP DATABASE db1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.18:
----------------
Ensure that it is possible to alter a procedure and
a function with the same name, in the same database
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
USE db_storedproc;
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
DROP FUNCTION IF EXISTS sp1;
Warnings:
Note	1305	FUNCTION db_storedproc.sp1 does not exist
set @x=null;
set @y=null;
CREATE PROCEDURE sp1()
BEGIN
set @x= 1;
SELECT @x;
END//
CREATE FUNCTION sp1 () returns int return 2.2;
CALL db_storedproc.sp1();
@x
1
SELECT db_storedproc.sp1();
db_storedproc.sp1()
2
DROP DATABASE IF EXISTS db1;
Warnings:
Note	1008	Can't drop database 'db1'; database doesn't exist
CREATE DATABASE db1;
USE db1;
alter procedure db_storedproc.sp1 sql security invoker;
SELECT routine_name, routine_type, security_type from information_schema.routines
where routine_schema like 'db_storedproc%' and routine_name='sp1';
ROUTINE_NAME	ROUTINE_TYPE	SECURITY_TYPE
sp1	FUNCTION	DEFINER
sp1	PROCEDURE	INVOKER
alter function db_storedproc.sp1 sql security invoker;
SELECT routine_name, routine_type, security_type from information_schema.routines
where routine_schema like 'db_storedproc%' and routine_name='sp1';
ROUTINE_NAME	ROUTINE_TYPE	SECURITY_TYPE
sp1	FUNCTION	INVOKER
sp1	PROCEDURE	INVOKER
CALL db_storedproc.sp1();
@x
1
SELECT db_storedproc.sp1();
db_storedproc.sp1()
2
USE db_storedproc;
alter procedure sp1 sql security DEFINER;
CALL db_storedproc.sp1();
@x
1
SELECT db_storedproc.sp1();
db_storedproc.sp1()
2
alter function sp1 sql security DEFINER;
SELECT routine_name, routine_type, security_type from information_schema.routines
where routine_schema like 'db_storedproc%' and routine_name='sp1';
ROUTINE_NAME	ROUTINE_TYPE	SECURITY_TYPE
sp1	FUNCTION	DEFINER
sp1	PROCEDURE	DEFINER
CALL db_storedproc.sp1();
@x
1
SELECT db_storedproc.sp1();
db_storedproc.sp1()
2
USE db_storedproc;
DROP DATABASE db1;
DROP PROCEDURE db_storedproc.sp1;
DROP FUNCTION db_storedproc.sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.19:
----------------
verify altering procedure and function with the same name, does not affect
properties of a procedure and a function with the same name in the different
database.
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
CREATE DATABASE db_storedproc_3122;
USE db_storedproc;
SET @x = NULL;
SET @y = NULL;
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
DROP FUNCTION IF EXISTS sp1;
Warnings:
Note	1305	FUNCTION db_storedproc.sp1 does not exist
DROP PROCEDURE IF EXISTS db_storedproc_3122.sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc_3122.sp1 does not exist
DROP FUNCTION IF EXISTS db_storedproc_3122.sp1;
Warnings:
Note	1305	FUNCTION db_storedproc_3122.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
SET @x = 1;
SELECT @x;
END//
CREATE FUNCTION db_storedproc_3122.sp1() RETURNS DOUBLE RETURN 2.2;
CALL sp1();
@x
1
SELECT db_storedproc_3122.sp1();
db_storedproc_3122.sp1()
2.2
USE db_storedproc_3122;
CREATE PROCEDURE sp1 ()
BEGIN
SET @x = 3;
SELECT @x;
END//
CREATE FUNCTION db_storedproc.sp1() RETURNS DOUBLE RETURN 4.4;
CALL sp1();
@x
3
SELECT db_storedproc.sp1();
db_storedproc.sp1()
4.4
ALTER PROCEDURE db_storedproc_3122.sp1 SQL SECURITY INVOKER;
ALTER FUNCTION sp1 SQL SECURITY INVOKER;
SELECT routine_name, routine_type, security_type from information_schema.routines
where routine_schema like 'db_storedproc%' and routine_name='sp1';
ROUTINE_NAME	ROUTINE_TYPE	SECURITY_TYPE
sp1	FUNCTION	DEFINER
sp1	FUNCTION	INVOKER
sp1	PROCEDURE	DEFINER
sp1	PROCEDURE	INVOKER
CALL db_storedproc.sp1();
@x
1
SELECT db_storedproc.sp1();
db_storedproc.sp1()
4.4
CALL db_storedproc_3122.sp1();
@x
3
SELECT db_storedproc_3122.sp1();
db_storedproc_3122.sp1()
2.2
USE db_storedproc;
DROP DATABASE db_storedproc_3122;
DROP FUNCTION db_storedproc.sp1;
DROP PROCEDURE db_storedproc.sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.20:
----------------
Ensure that it is possible to alter the comment of a procedure
and a function with the same name, even in the same database
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
USE db_storedproc;
set @x=null;
DROP PROCEDURE IF EXISTS sp1;
DROP FUNCTION IF EXISTS sp1;
CREATE PROCEDURE sp1 () set @x= 1;
CREATE FUNCTION sp1 () returns int return 2;
DROP DATABASE IF EXISTS db_storedproc_3122;
Warnings:
Note	1008	Can't drop database 'db_storedproc_3122'; database doesn't exist
CREATE DATABASE db_storedproc_3122;
USE db_storedproc_3122;
CREATE PROCEDURE sp1 () set @x= 3;
CREATE FUNCTION sp1 () returns int return 4;
alter procedure sp1 sql security invoker comment 'this is a procedure';
alter function sp1 sql security invoker comment 'this is a function';
alter procedure sp1 sql security DEFINER;
alter function sp1 sql security DEFINER;
show CREATE PROCEDURE sp1;
Procedure	sql_mode	Create Procedure	character_set_client	collation_connection	Database Collation
sp1	NO_ENGINE_SUBSTITUTION	CREATE DEFINER=`root`@`localhost` PROCEDURE `sp1`()
    COMMENT 'this is a procedure'
set @x= 3	latin1	<modified>	<created>
show CREATE FUNCTION sp1;
Function	sql_mode	Create Function	character_set_client	collation_connection	Database Collation
sp1	NO_ENGINE_SUBSTITUTION	CREATE DEFINER=`root`@`localhost` FUNCTION `sp1`() RETURNS int
    COMMENT 'this is a function'
return 4	latin1	<modified>	<created>
USE db_storedproc;
DROP DATABASE db_storedproc_3122;
DROP FUNCTION db_storedproc.sp1;
DROP PROCEDURE db_storedproc.sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.21:
----------------
Ensure that it is not possible to create two procedures with same name
in same database
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
USE db_storedproc;
set @x=null;
set @y=null;
CREATE DATABASE db1;
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1 () set @x=1;
CREATE PROCEDURE sp1 () set @x=2;
ERROR 42000: PROCEDURE sp1 already exists
CALL sp1();
SELECT @x;
@x
1
USE db1;
CREATE PROCEDURE db_storedproc.sp1 () set @x=3;
ERROR 42000: PROCEDURE sp1 already exists
CALL db_storedproc.sp1();
SELECT @x;
@x
1
DROP PROCEDURE IF EXISTS db_storedproc.sp1;
CREATE PROCEDURE db_storedproc.sp1 () set @x=1;
CREATE PROCEDURE db_storedproc.sp1 () set @x=2;
ERROR 42000: PROCEDURE sp1 already exists
CALL db_storedproc.sp1();
SELECT @x;
@x
1
USE db_storedproc;
DROP DATABASE db1;
DROP PROCEDURE db_storedproc.sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.22:
----------------
Ensure that it is not possible to create two functions with same name in the
same database
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
USE db_storedproc;
DROP DATABASE IF EXISTS db1;
Warnings:
Note	1008	Can't drop database 'db1'; database doesn't exist
CREATE DATABASE db1;
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
CREATE FUNCTION fn1 () returns int return 1;
CREATE FUNCTION fn1 () returns int return 2;
ERROR 42000: FUNCTION fn1 already exists
SELECT fn1();
fn1()
1
USE db1;
CREATE FUNCTION db_storedproc.fn1 () returns int return 3;
ERROR 42000: FUNCTION fn1 already exists
SELECT db_storedproc.fn1();
db_storedproc.fn1()
1
DROP FUNCTION IF EXISTS db_storedproc.fn1;
CREATE FUNCTION db_storedproc.fn1 () returns int return 1;
CREATE FUNCTION db_storedproc.fn1 () returns int return 2;
ERROR 42000: FUNCTION fn1 already exists
SELECT db_storedproc.fn1();
db_storedproc.fn1()
1
USE db_storedproc;
DROP DATABASE db1;
DROP FUNCTION db_storedproc.fn1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.23:
----------------
Ensure that it is possible to create two or more procedures with the same name,
providing each resides in different databases
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
USE db_storedproc;
set @x=null;
set @y=null;
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1 () set @x= 1;
DROP DATABASE IF EXISTS test3124;
Warnings:
Note	1008	Can't drop database 'test3124'; database doesn't exist
CREATE DATABASE test3124;
USE test3124;
CREATE PROCEDURE sp1 () set @y= 2;
CALL sp1();
SELECT @x, @y;
@x	@y
NULL	2
USE db_storedproc;
CALL sp1();
SELECT @x, @y;
@x	@y
1	2
USE db_storedproc;
DROP DATABASE test3124;
DROP PROCEDURE db_storedproc.sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.24:
----------------
Ensure that it is possible to create two or more functions with the same name,
providing each resides in different databases.
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
USE db_storedproc;
DROP FUNCTION IF EXISTS f1;
Warnings:
Note	1305	FUNCTION db_storedproc.f1 does not exist
CREATE FUNCTION f1 () returns int return 1;
DROP DATABASE IF EXISTS test3125;
Warnings:
Note	1008	Can't drop database 'test3125'; database doesn't exist
CREATE DATABASE test3125;
USE test3125;
CREATE FUNCTION f1 () returns int return 2;
SELECT f1();
f1()
2
USE db_storedproc;
SELECT f1();
f1()
1
USE db_storedproc;
DROP DATABASE test3125;
DROP FUNCTION db_storedproc.f1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.25:
----------------
Ensure that any invalid function name is never accepted, and that an appropriate
error message is returned when the name is rejected. (invalid func name)
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
CREATE FUNCTION !_fn1( f1 char(20) ) returns int
BEGIN
SELECT * from t1 where f2 = f1;
return 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '!_fn1( f1 char(20) ) returns int
BEGIN
SELECT * from t1 where f2 = f1;
return 1;' at line 1
CREATE FUNCTION fn1( f1 char(20) ) return int
BEGIN
SELECT * from t1 where f2 = f1;
return 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return int
BEGIN
SELECT * from t1 where f2 = f1;
return 1;
END' at line 1
CREATE FUNCTION fn1() returns int
return 'a';
CREATE FUNCTION procedure() returns int
return 1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure() returns int
return 1' at line 1
CREATE FUNCTION fn1(a char) returns int lang sql return 1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql return 1' at line 1
CREATE FUNCTION fn1(a char) returns int deterministic( return 1);
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return 1)' at line 1
CREATE FUNCTION fn1(a char) returns int non deterministic return 1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'deterministic return 1' at line 1
CREATE FUNCTION fn1(a char) returns int not deterministic comment 'abc' language sql sql security refiner return 1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'refiner return 1' at line 1
DROP FUNCTION IF EXISTS fn1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.1:
---------------
Ensure that all clauses that should be supported are supported.
CREATE PROCEDURE
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
USE db_storedproc;
set @count = 0;
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1(cnt int(20))
BEGIN
SELECT count(*) into cnt from t2;
set @count = cnt;
END//
Warnings:
Warning	1681	Integer display width is deprecated and will be removed in a future release.
CALL sp1( 10 );
SELECT @count;
@count
10
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.2:
BEGINend
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( cnt int(20) )
BEGIN
SELECT count(*) into cnt from t2;
set @count = cnt;
SELECT @count;
END//
Warnings:
Warning	1681	Integer display width is deprecated and will be removed in a future release.
CALL sp1( 10 );
@count
10
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( cnt int(20) )
SELECT count(*) into cnt from t2;
set @count = cnt;
SELECT @count;
END//
ERROR 42S22: Unknown column 'cnt' in 'field list'
CALL sp1( 10 );
DROP PROCEDURE sp1;
CREATE PROCEDURE sp1( cnt int(20) )
END
SELECT count(*) into cnt from t2;
set @count = cnt;
SELECT @count;
BEGIN//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END
SELECT count(*) into cnt from t2;
set @count = cnt;
SELECT @count;
BEGIN' at line 2
CALL sp1( 10 );
ERROR 42000: PROCEDURE db_storedproc.sp1 does not exist
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( cnt int(20) )
BEGIN
SELECT count(*) into cnt from t2;
BEGIN
BEGIN END;
BEGIN
END;
set @count = cnt;
SELECT @count;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 10
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.4:
---------------
Ensure that every BEGIN statement is coupled with a terminating END statement.
(BEGIN with no END)
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x char;
declare y char;
SELECT f1, f2 into x, y from t2 limit 1;
END//
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase ....:
--------------

--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
accessible:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'accessible:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
add:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'add:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
all:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'all:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
alter:BEGIN
SELECT @x;
END//
ERROR 0A000: ALTER VIEW is not allowed in stored procedures
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
analyze:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
and:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'and:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
as:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
asc:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'asc:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
asensitive:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'asensitive:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
before:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'before:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
between:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'between:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
bigint:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'bigint:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
binary:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'binary:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
blob:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'blob:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
both:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'both:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
by:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'by:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
call:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
cascade:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cascade:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
case:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
change:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
char:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'char:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
character:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'character:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
check:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
collate:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'collate:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
column:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'column:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
condition:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'condition:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
constraint:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'constraint:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
continue:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'continue:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
convert:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'convert:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
create:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
cross:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cross:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
current_date:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_date:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
current_time:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_time:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
current_timestamp:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_timestamp:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
current_user:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_user:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
cursor:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cursor:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
database:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'database:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
databases:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'databases:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
day_hour:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_hour:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
day_microsecond:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_microsecond:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
day_minute:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_minute:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
day_second:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_second:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
dec:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'dec:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
decimal:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
declare:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
default:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'default:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
delayed:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delayed:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
delete:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
desc:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
describe:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
deterministic:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
distinct:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
distinctrow:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinctrow:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
div:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'div:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
double:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'double:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
drop:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
dual:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'dual:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
each:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'each:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
else:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'else:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
elseif:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'elseif:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
enclosed:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enclosed:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
escaped:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'escaped:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
exists:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'exists:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
exit:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'exit:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
explain:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
false:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'false:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
fetch:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
float:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
float4:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float4:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
float8:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float8:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
for:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'for:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
force:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'force:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
foreign:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'foreign:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
from:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
fulltext:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'fulltext:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
grant:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
group:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'group:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
having:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'having:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
high_priority:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'high_priority:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
hour_microsecond:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'hour_microsecond:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
hour_minute:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'hour_minute:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
hour_second:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'hour_second:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
if:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
ignore:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ignore:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
in:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'in:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
index:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
infile:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'infile:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
inner:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'inner:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
inout:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'inout:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
insensitive:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'insensitive:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
insert:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
int:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
int1:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int1:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
int2:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int2:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
int3:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int3:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
int4:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int4:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
int8:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int8:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
integer:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'integer:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
interval:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'interval:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
into:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'into:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
is:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'is:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
iterate:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
join:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'join:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
key:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
keys:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'keys:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
kill:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
leading:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'leading:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
leave:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
left:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'left:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
like:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'like:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
limit:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'limit:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
linear:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'linear:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
lines:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'lines:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
load:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
localtime:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'localtime:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
localtimestamp:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'localtimestamp:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
lock:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
long:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'long:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
longblob:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'longblob:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
longtext:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'longtext:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
loop:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
low_priority:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'low_priority:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
master_ssl_verify_server_cert:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'master_ssl_verify_server_cert:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
match:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'match:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
mediumblob:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumblob:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
mediumint:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumint:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
mediumtext:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumtext:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
middleint:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'middleint:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
minute_microsecond:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'minute_microsecond:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
minute_second:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'minute_second:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
mod:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mod:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
modifies:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
natural:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'natural:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
not:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
no_write_to_binlog:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'no_write_to_binlog:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
null:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
numeric:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
on:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'on:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
optimize:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
option:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'option:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
optionally:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'optionally:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
or:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
order:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
out:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'out:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
outer:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'outer:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
outfile:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'outfile:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
precision:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'precision:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
primary:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'primary:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
procedure:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
purge:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
range:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'range:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
read:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'read:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
reads:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
read_write:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'read_write:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
real:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'real:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
references:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'references:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
regexp:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'regexp:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
release:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
rename:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
repeat:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
replace:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
require:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'require:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
restrict:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'restrict:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
return:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
revoke:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
right:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'right:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
rlike:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'rlike:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
schema:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'schema:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
schemas:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'schemas:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
second_microsecond:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'second_microsecond:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
select:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
sensitive:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sensitive:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
separator:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'separator:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
set:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
show:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
smallint:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'smallint:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
spatial:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'spatial:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
specific:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'specific:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
sql:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
sqlexception:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sqlexception:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
sqlstate:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sqlstate:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
sqlwarning:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sqlwarning:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
sql_big_result:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql_big_result:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
sql_calc_found_rows:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql_calc_found_rows:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
sql_small_result:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql_small_result:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
ssl:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ssl:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
starting:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'starting:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
straight_join:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'straight_join:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
table:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
terminated:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'terminated:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
then:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'then:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
tinyblob:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyblob:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
tinyint:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyint:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
tinytext:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinytext:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
to:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
trailing:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trailing:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
trigger:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
true:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'true:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
undo:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'undo:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
union:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'union:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
unique:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'unique:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
unlock:BEGIN
SELECT @x;
END//
ERROR 0A000: UNLOCK is not allowed in stored procedures
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
unsigned:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'unsigned:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
update:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
usage:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'usage:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
use:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
using:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
utc_date:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utc_date:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
utc_time:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utc_time:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
utc_timestamp:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utc_timestamp:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
values:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
varbinary:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varbinary:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
varchar:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varchar:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
varcharacter:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varcharacter:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
varying:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varying:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
when:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'when:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
where:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
while:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
with:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ':BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
write:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'write:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
xor:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'xor:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
year_month:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'year_month:BEGIN
SELECT @x;
END' at line 2
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
zerofill:BEGIN
SELECT @x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'zerofill:BEGIN
SELECT @x;
END' at line 2
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.6:
---------------
Ensure that the labels for multiple BEGIN an END work properly
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
begin_label: BEGIN
declare x char;
declare y char;
set x = '1';
set y = '2';
label1: BEGIN
declare x char;
declare y char;
SELECT f1, f2 into x, y from t2 limit 1;
END label1;
set @v1 = x;
set @v2 = y;
SELECT @v1, @v2;
END begin_label//
CALL sp1();
@v1	@v2
1	2
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.7:
---------------
Ensure that the labels enclosing each BEGIN/END compound statement must match.
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
begin1_label: BEGIN
declare x char;
declare y char;
SELECT lf1, f1 into x, y from t2 limit 1;
begin2_label: BEGIN
declare x char;
declare y char;
SELECT f1, f2 into x, y from t2 limit 1;
END begin2_changed;
END begin1_changed//
ERROR 42000: End-label begin2_changed without match
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.8:
---------------
Ensure that it is possible to put a beginning label at the start of a
BEGIN/END compound statement without also requiring an ending label
at the END of the same statement.
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
begin_label: BEGIN
declare x char;
declare y char;
SELECT f1, f2 into x, y from t2 limit 1;
END//
CALL sp1();
Warnings:
Warning	1265	Data truncated for column 'x' at row 1
Warning	1265	Data truncated for column 'y' at row 1
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.9:
---------------
Ensure that it is not possible to put an ending label at the END of
a BEGIN/END compound statement without also requiring a matching
beginning label at the start of the same statement
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x char;
declare y char;
SELECT f1, f2 into x, y from t2 limit 1;
END begin_label//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'begin_label' at line 6
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.10:
----------------
Ensure that every beginning label must END with a colon(:)
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
begin_label BEGIN
declare x char;
declare y char;
SELECT f1, f2 into x, y from t2 limit 1;
END begin_label//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'BEGIN
declare x char;
declare y char;
SELECT f1, f2 into x, y from t2 limit 1;
E' at line 2
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.11:
----------------
Ensure that every beginning label with the same scope must be unique. (same label names)
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
begin_samelabel: BEGIN
declare x char;
declare y char;
SELECT f1, f2 into x, y from t2 limit 1;
begin_samelabel: BEGIN
declare x char;
declare y char;
SELECT f1, f2 into x, y from t2 limit 1;
END begin_samelabel;
begin_samelabel: BEGIN
declare x char;
declare y char;
SELECT f1, f2 into x, y from t2 limit 1;
END begin_samelabel;
END begin_samelabel//
ERROR 42000: Redefining label begin_samelabel
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.12:
----------------
Ensure that the variables, cursors, conditions, and handlers declared for
a stored procedure (with the declare statement) may only be properly defined
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare x char default 'a';
declare y integer default 1;
declare z float default 1.1;
declare a enum("value1", "value2") default 'value1';
declare b decimal(255, 255) default 1.2e+12;
declare c mediumtext default 'mediumtext';
declare d datetime default '2005-02-02 12:12:12';
declare e char default 'b';
declare cur1 cursor for SELECT f1 from db_storedproc.t2;
declare continue handler for sqlstate '02000' set @x2 = 1;
open cur1;
fetch cur1 into e;
SELECT x, y, z, a, b, c, d, e;
close cur1;
END//
ERROR 42000: Too big scale 255 specified for column ''. Maximum is 30.
CALL sp6();
ERROR 42000: PROCEDURE db_storedproc.sp6 does not exist
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare x12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567 char default '0';
SELECT x12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567;
END//
CALL sp6();
x12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567
0
DROP PROCEDURE sp6;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.13:
----------------
Ensure that the variables declared for a stored procedure (with the declare
statement) may only be defined in the correct order.
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare x default '0' char;
SELECT x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'default '0' char;
SELECT x;
END' at line 3
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare x char, integer default '0';
SELECT x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ', integer default '0';
SELECT x;
END' at line 3
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare x1, x2 char, integer default '0', 1;
SELECT x;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ', integer default '0', 1;
SELECT x;
END' at line 3
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp1( )
BEGIN
declare char x;
declare char y;
SELECT f1, f2 into x, y from t2 limit 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'char x;
declare char y;
SELECT f1, f2 into x, y from t2 limit 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp1( )
BEGIN
declare char x, y1 integer default 0;
declare char y;
SELECT f1, f2 into x, y from t2 limit 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'char x, y1 integer default 0;
declare char y;
SELECT f1, f2 into x, y from t2 li' at line 3
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare x default 'a' char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'default 'a' char;
END' at line 3
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare condition notable for sqlstate '42s22';
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'condition notable for sqlstate '42s22';
END' at line 3
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare condition for notable sqlstate '42s22';
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'condition for notable sqlstate '42s22';
END' at line 3
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare condition for sqlstate notable '42s22';
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'condition for sqlstate notable '42s22';
END' at line 3
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare condition for sqlstate '42s22' notable;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'condition for sqlstate '42s22' notable;
END' at line 3
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare cursor cur1 for SELECT f1 from db_storedproc.t2;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cursor cur1 for SELECT f1 from db_storedproc.t2;
END' at line 3
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare cursor for cur1 SELECT f1 from db_storedproc.t2;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cursor for cur1 SELECT f1 from db_storedproc.t2;
END' at line 3
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare cursor for SELECT cur1 f1 from db_storedproc.t2;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cursor for SELECT cur1 f1 from db_storedproc.t2;
END' at line 3
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare handler continue for sqlstate '02000' set @x2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'continue for sqlstate '02000' set @x2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare handler exit for sqlstate '02000' set @x2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'exit for sqlstate '02000' set @x2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare handler undo for sqlstate '02000' set @x2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'undo for sqlstate '02000' set @x2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare char x;
SELECT f1 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'char x;
SELECT f1 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare char binary  x;
SELECT f2 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'char binary  x;
SELECT f2 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare char ascii  x;
SELECT f3 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'char ascii  x;
SELECT f3 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare tinytext  x;
SELECT f4 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinytext  x;
SELECT f4 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare  x;
SELECT f5 text  into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ';
SELECT f5 text  into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare mediumtext  x;
SELECT f6 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumtext  x;
SELECT f6 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare longtext  x;
SELECT f7 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'longtext  x;
SELECT f7 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare tinyblob  x;
SELECT f8 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyblob  x;
SELECT f8 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare blob x;
SELECT f9 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'blob x;
SELECT f9 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare mediumblob  x;
SELECT f10 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumblob  x;
SELECT f10 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare longblob  x;
SELECT f11 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'longblob  x;
SELECT f11 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare binary  x;
SELECT f12 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'binary  x;
SELECT f12 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare tinyint  x;
SELECT f13 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyint  x;
SELECT f13 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare tinyint unsigned  x;
SELECT f14 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyint unsigned  x;
SELECT f14 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare tinyint zerofill  x;
SELECT f15 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyint zerofill  x;
SELECT f15 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare tinyint unsigned zerofill  x;
SELECT f16 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyint unsigned zerofill  x;
SELECT f16 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare smallint  x;
SELECT f17 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'smallint  x;
SELECT f17 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare smallint unsigned   x;
SELECT f18 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'smallint unsigned   x;
SELECT f18 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare smallint zerofill  x;
SELECT f19 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'smallint zerofill  x;
SELECT f19 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare smallint unsigned zerofill  x;
SELECT f20 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'smallint unsigned zerofill  x;
SELECT f20 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare mediumint  x;
SELECT f21 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumint  x;
SELECT f21 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare mediumint unsigned  x;
SELECT f22 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumint unsigned  x;
SELECT f22 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare mediumint zerofill  x;
SELECT f23 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumint zerofill  x;
SELECT f23 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare mediumint unsigned zerofill  x;
SELECT f24 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumint unsigned zerofill  x;
SELECT f24 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare int  x;
SELECT f25 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int  x;
SELECT f25 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare int unsigned  x;
SELECT f26 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int unsigned  x;
SELECT f26 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare int zerofill  x;
SELECT f27 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int zerofill  x;
SELECT f27 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare int unsigned zerofill  x;
SELECT f28 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int unsigned zerofill  x;
SELECT f28 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare bigint  x;
SELECT f29 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'bigint  x;
SELECT f29 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare bigint unsigned  x;
elect f30 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'bigint unsigned  x;
elect f30 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare bigint zerofill  x;
SELECT f31 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'bigint zerofill  x;
SELECT f31 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare bigint unsigned zerofill  x;
SELECT f32 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'bigint unsigned zerofill  x;
SELECT f32 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal  x;
SELECT f33 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal  x;
SELECT f33 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal unsigned  x;
SELECT f34 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal unsigned  x;
SELECT f34 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal zerofill  x;
SELECT f35 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal zerofill  x;
SELECT f35 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal unsigned zerofill not null  x;
SELECT f36 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal unsigned zerofill not null  x;
SELECT f36 into x from tb1 limit 9998, 1;' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal (0) not null  x;
SELECT f37 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal (0) not null  x;
SELECT f37 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal (64) not null  x;
SELECT f38 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal (64) not null  x;
SELECT f38 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal (0) unsigned not null  x;
SELECT f39 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal (0) unsigned not null  x;
SELECT f39 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal (64) unsigned not null  x;
SELECT f40 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal (64) unsigned not null  x;
SELECT f40 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal (0) zerofill not null  x;
SELECT f41 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal (0) zerofill not null  x;
SELECT f41 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal (64) zerofill not null  x;
SELECT f42 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal (64) zerofill not null  x;
SELECT f42 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal (0) unsigned zerofill not null  x;
SELECT f43 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal (0) unsigned zerofill not null  x;
SELECT f43 into x from tb1 limit 9998' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal (64) unsigned zerofill not null  x;
SELECT f44 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal (64) unsigned zerofill not null  x;
SELECT f44 into x from tb1 limit 999' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal (00) not null  x;
SELECT f45 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal (00) not null  x;
SELECT f45 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal (63, 30) not null  x;
SELECT f46 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal (63, 30) not null  x;
SELECT f46 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal (00) unsigned not null  x;
SELECT f47 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal (00) unsigned not null  x;
SELECT f47 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal (63, 30) unsigned not null  x;
SELECT f48 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal (63, 30) unsigned not null  x;
SELECT f48 into x from tb1 limit 9998, 1;' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal (00) zerofill not null  x;
SELECT f49 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal (00) zerofill not null  x;
SELECT f49 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal (63, 30) zerofill not null  x;
SELECT f50 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal (63, 30) zerofill not null  x;
SELECT f50 into x from tb1 limit 9998, 1;' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal (00) unsigned zerofill not null  x;
SELECT f51 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal (00) unsigned zerofill not null  x;
SELECT f51 into x from tb1 limit 999' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare decimal (63, 30) unsigned zerofill not null  x;
SELECT f52 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal (63, 30) unsigned zerofill not null  x;
SELECT f52 into x from tb1 limit' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric not null  x;
SELECT f53 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric not null  x;
SELECT f53 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric unsigned not null  x;
SELECT f54 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric unsigned not null  x;
SELECT f54 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric zerofill not null  x;
SELECT f55 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric zerofill not null  x;
SELECT f55 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric unsigned zerofill not null  x;
SELECT f56 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric unsigned zerofill not null  x;
SELECT f56 into x from tb1 limit 9998, 1;' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric (0) not null  x;
SELECT f57 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric (0) not null  x;
SELECT f57 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric (64) not nul x;
SELECT f58 into x from tb1 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric (64) not nul x;
SELECT f58 into x from tb1 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric (0) unsigned  x;
SELECT f59 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric (0) unsigned  x;
SELECT f59 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric (64) unsigned  x;
SELECT f60 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric (64) unsigned  x;
SELECT f60 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric (0) zerofill  x;
SELECT f61 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric (0) zerofill  x;
SELECT f61 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric (64) zerofill  x;
SELECT f62 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric (64) zerofill  x;
SELECT f62 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric (0) unsigned zerofill  x;
SELECT f63 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric (0) unsigned zerofill  x;
SELECT f63 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric (64) unsigned zerofill  x;
SELECT f64 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric (64) unsigned zerofill  x;
SELECT f64 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric (00)  x;
SELECT f65 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric (00)  x;
SELECT f65 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric (63, 30)  x;
SELECT f66 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric (63, 30)  x;
SELECT f66 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric (00) unsigned  x;
SELECT f67 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric (00) unsigned  x;
SELECT f67 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric (63, 30) unsigned  x;
SELECT f68 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric (63, 30) unsigned  x;
SELECT f68 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric (00) zerofill  x;
SELECT f69 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric (00) zerofill  x;
SELECT f69 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric (63, 30) zerofill  x;
SELECT f70 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric (63, 30) zerofill  x;
SELECT f70 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric (00) unsigned zerofill  x;
SELECT f71 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric (00) unsigned zerofill  x;
SELECT f71 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare numeric (63, 30) unsigned zerofill  x;
SELECT f72 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric (63, 30) unsigned zerofill  x;
SELECT f72 into x from tb2 limit 9998, 1;' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare real  x;
SELECT f73 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'real  x;
SELECT f73 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare real unsigned  x;
SELECT f74 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'real unsigned  x;
SELECT f74 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare real zerofill  x;
SELECT f75 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'real zerofill  x;
SELECT f75 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare real unsigned zerofill  x;
SELECT f76 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'real unsigned zerofill  x;
SELECT f76 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare double  x;
SELECT f77 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'double  x;
SELECT f77 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare double unsigned  x;
SELECT f78 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'double unsigned  x;
SELECT f78 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare double zerofill  x;
SELECT f79 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'double zerofill  x;
SELECT f79 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare double unsigned zerofill  x;
SELECT f80 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'double unsigned zerofill  x;
SELECT f80 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float not null  x;
SELECT f81 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float not null  x;
SELECT f81 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float unsigned not null  x;
SELECT f82 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float unsigned not null  x;
SELECT f82 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float zerofill not null  x;
SELECT f83 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float zerofill not null  x;
SELECT f83 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float unsigned zerofill not null  x;
SELECT f84 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float unsigned zerofill not null  x;
SELECT f84 into x from tb2 limit 9998, 1;
E' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float(0) not null  x;
SELECT f85 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float(0) not null  x;
SELECT f85 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float(23) not null  x;
SELECT f86 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float(23) not null  x;
SELECT f86 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float(0) unsigned not null  x;
SELECT f87 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float(0) unsigned not null  x;
SELECT f87 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float(23) unsigned not null  x;
SELECT f88 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float(23) unsigned not null  x;
SELECT f88 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float(0) zerofill not null  x;
SELECT f89 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float(0) zerofill not null  x;
SELECT f89 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float(23) zerofill not null  x;
SELECT f90 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float(23) zerofill not null  x;
SELECT f90 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float(0) unsigned zerofill not null  x;
SELECT f91 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float(0) unsigned zerofill not null  x;
SELECT f91 into x from tb2 limit 9998, 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float(23) unsigned zerofill not null  x;
SELECT f92 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float(23) unsigned zerofill not null  x;
SELECT f92 into x from tb2 limit 9998, ' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float(24) not null  x;
SELECT f93 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float(24) not null  x;
SELECT f93 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float(53) not null  x;
SELECT f94 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float(53) not null  x;
SELECT f94 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float(24) unsigned not null  x;
SELECT f95 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float(24) unsigned not null  x;
SELECT f95 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float(53) unsigned not null  x;
SELECT f96 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float(53) unsigned not null  x;
SELECT f96 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float(24) zerofill not null  x;
SELECT f97 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float(24) zerofill not null  x;
SELECT f97 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float(53) zerofill not null  x;
SELECT f98 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float(53) zerofill not null  x;
SELECT f98 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float(24) unsigned zerofill not null  x;
SELECT f99 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float(24) unsigned zerofill not null  x;
SELECT f99 into x from tb2 limit 9998, ' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare float(53) unsigned zerofill not null  x;
SELECT f100 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float(53) unsigned zerofill not null  x;
SELECT f100 into x from tb2 limit 9998,' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare date not null  x;
SELECT f101 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null  x;
SELECT f101 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare time not null  x;
SELECT f102 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null  x;
SELECT f102 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare datetime not null  x;
SELECT f103 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null  x;
SELECT f103 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare timestamp not null  x;
SELECT f104 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null  x;
SELECT f104 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare year not null  x;
SELECT f105 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not null  x;
SELECT f105 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare year(4) not null  x;
SELECT f107 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '(4) not null  x;
SELECT f107 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare enum("1enum", "2enum") not null  x;
SELECT f108 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '("1enum", "2enum") not null  x;
SELECT f108 into x from tb2 limit 9998, 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare set("1set", "2set") not nul x;
SELECT f109 into x from tb2 limit 9998, 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set("1set", "2set") not nul x;
SELECT f109 into x from tb2 limit 9998, 1;
END' at line 3
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.14:
----------------
Ensure that the handlers declared for a stored procedure (with the declare
statement) may only be defined in the correct order
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare continue handler for sqlstate '23000' set @x2 = 1;
declare x char;
END//
ERROR 42000: Variable or condition declaration after cursor or handler declaration
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare cursor1 cursor for SELECT f1 from tb1;
declare x char;
END//
ERROR 42000: Variable or condition declaration after cursor or handler declaration
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare cursor1 cursor for SELECT f1 from tb1;
declare sqlcondition condition for sqlstate '02000';
END//
ERROR 42000: Variable or condition declaration after cursor or handler declaration
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare sqlcondition condition for sqlstate '02000';
declare continue handler for sqlcondition set @x=1;
declare cursor1 cursor for SELECT f1 from tb1;
END//
ERROR 42000: Cursor declaration after handler declaration
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.15:
----------------
Ensure that the declare statement can declare multiple variables both separately
and all at once from a variable list. (multiple declaration)
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
DECLARE x1 CHAR(100) DEFAULT 'outer';
BEGIN
DECLARE x1 CHAR(100) DEFAULT x1;
END;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z char default null;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
NULL	NULL	NULL
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z char ascii default null;
SELECT x, y, z;
END//
Warnings:
Warning	1287	'ASCII' is deprecated and will be removed in a future release. Please use CHARACTER SET charset_name instead
CALL sp1();
x	y	z
NULL	NULL	NULL
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z tinytext default null;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
NULL	NULL	NULL
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z text default null;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
NULL	NULL	NULL
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z mediumtext default null;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
NULL	NULL	NULL
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z longtext default null;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
NULL	NULL	NULL
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z tinyblob default null;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
NULL	NULL	NULL
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z blob default null;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
NULL	NULL	NULL
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z mediumblob default null;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
NULL	NULL	NULL
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z longblob default null;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
NULL	NULL	NULL
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z binary default null;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
NULL	NULL	NULL
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z tinyint default -126;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
-126	-126	-126
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z tinyint unsigned default 253;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
253	253	253
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z tinyint zerofill default -1;
GET DIAGNOSTICS @n = NUMBER;
GET DIAGNOSTICS CONDITION @n @err_no = MYSQL_ERRNO, @err_txt = MESSAGE_TEXT;
SELECT @err_no, @err_txt;
SELECT x, y, z;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp1();
@err_no	@err_txt
1264	Out of range value for column 'z' at row 1
x	y	z
000	000	000
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z tinyint unsigned zerofill default 1;
SELECT x, y, z;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp1();
x	y	z
001	001	001
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z smallint default -32768;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
-32768	-32768	-32768
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z smallint unsigned default 65535;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
65535	65535	65535
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z smallint zerofill default -1;
GET DIAGNOSTICS @n = NUMBER;
GET DIAGNOSTICS CONDITION @n @err_no = MYSQL_ERRNO, @err_txt = MESSAGE_TEXT;
SELECT @err_no, @err_txt;
SELECT x, y, z;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp1();
@err_no	@err_txt
1264	Out of range value for column 'z' at row 1
x	y	z
00000	00000	00000
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z smallint unsigned zerofill default 1;
SELECT x, y, z;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp1();
x	y	z
00001	00001	00001
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z mediumint default -8388608;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
-8388608	-8388608	-8388608
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z mediumint unsigned default 16777215;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
16777215	16777215	16777215
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z mediumint zerofill default -1;
GET DIAGNOSTICS @n = NUMBER;
GET DIAGNOSTICS CONDITION @n @err_no = MYSQL_ERRNO, @err_txt = MESSAGE_TEXT;
SELECT @err_no, @err_txt;
SELECT x, y, z;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp1();
@err_no	@err_txt
1264	Out of range value for column 'z' at row 1
x	y	z
00000000	00000000	00000000
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z mediumint unsigned zerofill default 1;
SELECT x, y, z;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp1();
x	y	z
00000001	00000001	00000001
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z int default -2147483648;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
-2147483648	-2147483648	-2147483648
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z int unsigned default 4294967295;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
4294967295	4294967295	4294967295
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z int zerofill default -1;
GET DIAGNOSTICS @n = NUMBER;
GET DIAGNOSTICS CONDITION @n @err_no = MYSQL_ERRNO, @err_txt = MESSAGE_TEXT;
SELECT @err_no, @err_txt;
SELECT x, y, z;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp1();
@err_no	@err_txt
1264	Out of range value for column 'z' at row 1
x	y	z
0000000000	0000000000	0000000000
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z int unsigned zerofill default 1;
SELECT x, y, z;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp1();
x	y	z
0000000001	0000000001	0000000001
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z bigint default -9223372036854775808;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
-9223372036854775808	-9223372036854775808	-9223372036854775808
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z bigint unsigned default 18446744073709551615;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
18446744073709551615	18446744073709551615	18446744073709551615
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z bigint zerofill default -1;
GET DIAGNOSTICS @n = NUMBER;
GET DIAGNOSTICS CONDITION @n @err_no = MYSQL_ERRNO, @err_txt = MESSAGE_TEXT;
SELECT @err_no, @err_txt;
SELECT x, y, z;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp1();
@err_no	@err_txt
1264	Out of range value for column 'z' at row 1
x	y	z
00000000000000000000	00000000000000000000	00000000000000000000
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z bigint unsigned zerofill default 1;
SELECT x, y, z;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp1();
x	y	z
00000000000000000001	00000000000000000001	00000000000000000001
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z decimal default -34028234660123456789012345678901234567;
GET DIAGNOSTICS @n = NUMBER;
GET DIAGNOSTICS CONDITION @n @err_no = MYSQL_ERRNO, @err_txt = MESSAGE_TEXT;
SELECT @err_no, @err_txt;
SELECT x, y, z;
END//
CALL sp1();
@err_no	@err_txt
1264	Out of range value for column 'z' at row 1
x	y	z
-9999999999	-9999999999	-9999999999
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z decimal unsigned default 1.175494351e-38;
GET DIAGNOSTICS @n = NUMBER;
GET DIAGNOSTICS CONDITION @n @err_no = MYSQL_ERRNO, @err_txt = MESSAGE_TEXT;
SELECT @err_no, @err_txt;
SELECT x, y, z;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp1();
@err_no	@err_txt
1265	Data truncated for column 'z' at row 1
x	y	z
0	0	0
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z decimal zerofill default -34028234660123456789012345678901234567;
GET DIAGNOSTICS @n = NUMBER;
GET DIAGNOSTICS CONDITION @n @err_no = MYSQL_ERRNO, @err_txt = MESSAGE_TEXT;
SELECT @err_no, @err_txt;
SELECT x, y, z;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp1();
@err_no	@err_txt
1264	Out of range value for column 'z' at row 1
x	y	z
0000000000	0000000000	0000000000
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z decimal unsigned zerofill default 1.175494351e-38;
GET DIAGNOSTICS @n = NUMBER;
GET DIAGNOSTICS CONDITION @n @err_no = MYSQL_ERRNO, @err_txt = MESSAGE_TEXT;
SELECT @err_no, @err_txt;
SELECT x, y, z;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp1();
@err_no	@err_txt
1265	Data truncated for column 'z' at row 1
x	y	z
0000000000	0000000000	0000000000
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z numeric default 1.175494351e-38;
GET DIAGNOSTICS @n = NUMBER;
GET DIAGNOSTICS CONDITION @n @err_no = MYSQL_ERRNO, @err_txt = MESSAGE_TEXT;
SELECT @err_no, @err_txt;
SELECT x, y, z;
END//
CALL sp1();
@err_no	@err_txt
1265	Data truncated for column 'z' at row 1
x	y	z
0	0	0
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z numeric unsigned default 1.175494351e-38;
GET DIAGNOSTICS @n = NUMBER;
GET DIAGNOSTICS CONDITION @n @err_no = MYSQL_ERRNO, @err_txt = MESSAGE_TEXT;
SELECT @err_no, @err_txt;
SELECT x, y, z;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp1();
@err_no	@err_txt
1265	Data truncated for column 'z' at row 1
x	y	z
0	0	0
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z numeric zerofill default 1.175494351e-38;
GET DIAGNOSTICS @n = NUMBER;
GET DIAGNOSTICS CONDITION @n @err_no = MYSQL_ERRNO, @err_txt = MESSAGE_TEXT;
SELECT @err_no, @err_txt;
SELECT x, y, z;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp1();
@err_no	@err_txt
1265	Data truncated for column 'z' at row 1
x	y	z
0000000000	0000000000	0000000000
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z numeric unsigned zerofill default 1.175494351e-38;
GET DIAGNOSTICS @n = NUMBER;
GET DIAGNOSTICS CONDITION @n @err_no = MYSQL_ERRNO, @err_txt = MESSAGE_TEXT;
SELECT @err_no, @err_txt;
SELECT x, y, z;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp1();
@err_no	@err_txt
1265	Data truncated for column 'z' at row 1
x	y	z
0000000000	0000000000	0000000000
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z real default 1.175494351e-38;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
1.175494351e-38	1.175494351e-38	1.175494351e-38
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z real unsigned default 1.175494351e-38;
SELECT x, y, z;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp1();
x	y	z
1.175494351e-38	1.175494351e-38	1.175494351e-38
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z real zerofill default 1.175494351e-38;
SELECT x, y, z;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp1();
x	y	z
00000001.175494351e-38	00000001.175494351e-38	00000001.175494351e-38
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z real unsigned zerofill default 1.175494351e-38;
SELECT x, y, z;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp1();
x	y	z
00000001.175494351e-38	00000001.175494351e-38	00000001.175494351e-38
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z float default 1.175494351e-38;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
1.17549e-38	1.17549e-38	1.17549e-38
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z float unsigned default 1.175494351e-38;
SELECT x, y, z;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp1();
x	y	z
1.17549e-38	1.17549e-38	1.17549e-38
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z float zerofill default 1.175494351e-38;
SELECT x, y, z;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp1();
x	y	z
01.17549e-38	01.17549e-38	01.17549e-38
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z float unsigned zerofill default 1.175494351e-38;
SELECT x, y, z;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp1();
x	y	z
01.17549e-38	01.17549e-38	01.17549e-38
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z date default '2005-02-02';
SELECT x, y, z;
END//
CALL sp1();
x	y	z
2005-02-02	2005-02-02	2005-02-02
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z time default '12:20:12';
SELECT x, y, z;
END//
CALL sp1();
x	y	z
12:20:12	12:20:12	12:20:12
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z datetime default '2005-02-02 12:20:12';
SELECT x, y, z;
END//
CALL sp1();
x	y	z
2005-02-02 12:20:12	2005-02-02 12:20:12	2005-02-02 12:20:12
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z timestamp default '20050202122012';
SELECT x, y, z;
END//
CALL sp1();
x	y	z
2005-02-02 12:20:12	2005-02-02 12:20:12	2005-02-02 12:20:12
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z year default 2005;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
2005	2005	2005
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z year default 2005;
SELECT x, y, z;
END//
CALL sp1();
x	y	z
2005	2005	2005
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z enum("1enum", "2enum") default "2enum";
SELECT x, y, z;
END//
CALL sp1();
x	y	z
2enum	2enum	2enum
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare x, y, z set("1set", "2set") default "2set";
SELECT x, y, z;
END//
CALL sp1();
x	y	z
2set	2set	2set
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.16:
----------------
Ensure that the declare statement can declare multiple variables both separately
and all at once from a variable list. (multiple declaration).
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( )
BEGIN
declare a, b char default '2';
declare c, d float default 1.3;
declare e, f text default 'text';
declare g, h enum("value1", "value2" ) default 'value1';
declare i, j datetime default '2005-02-02 12:12:12';
declare k, l blob default 'blob';
SELECT a, b, c, d, e, f, g, h, k, l;
END//
CALL sp6();
a	b	c	d	e	f	g	h	k	l
2	2	1.3	1.3	text	text	value1	value1	blob	blob
DROP PROCEDURE sp6;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.17:
----------------
Ensure that the invalid variable declarations are rejected, with an appropriate
error message.
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare @x char;
SELECT f2 into x from t2 limit 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '@x char;
SELECT f2 into x from t2 limit 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare accessible char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'accessible char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare add char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'add char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare all char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'all char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare alter char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alter char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare analyze char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'analyze char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare and char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'and char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare as char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare asc char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'asc char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare asensitive char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'asensitive char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare before char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'before char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare between char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'between char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare bigint char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'bigint char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare binary char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'binary char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare blob char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'blob char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare both char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'both char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare by char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'by char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare call char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'call char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare cascade char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cascade char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare case char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'case char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare change char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'change char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare char char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'char char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare character char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'character char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare check char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'check char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare collate char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'collate char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare column char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'column char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare condition char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'condition char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare constraint char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'constraint char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare continue char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare convert char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'convert char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare create char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'create char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare cross char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cross char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare current_date char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_date char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare current_time char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_time char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare current_timestamp char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_timestamp char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare current_user char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_user char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare cursor char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cursor char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare database char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'database char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare databases char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'databases char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare day_hour char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_hour char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare day_microsecond char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_microsecond char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare day_minute char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_minute char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare day_second char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_second char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare dec char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'dec char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare decimal char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare declare char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare default char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'default char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare delayed char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delayed char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare delete char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare desc char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare describe char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'describe char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare deterministic char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'deterministic char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare distinct char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare distinctrow char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinctrow char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare div char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'div char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare double char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'double char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare drop char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'drop char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare dual char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'dual char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare each char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'each char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare else char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'else char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare elseif char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'elseif char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare enclosed char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enclosed char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare escaped char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'escaped char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare exists char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'exists char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare exit char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare explain char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'explain char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare false char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'false char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare fetch char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'fetch char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare float char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare float4 char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float4 char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare float8 char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float8 char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare for char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'for char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare force char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'force char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare foreign char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'foreign char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare from char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare fulltext char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'fulltext char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare grant char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'grant char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare group char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'group char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare having char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'having char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare high_priority char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'high_priority char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare hour_microsecond char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'hour_microsecond char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare hour_minute char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'hour_minute char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare hour_second char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'hour_second char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare if char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare ignore char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ignore char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare in char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'in char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare index char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare infile char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'infile char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare inner char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'inner char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare inout char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'inout char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare insensitive char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'insensitive char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare insert char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'insert char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare int char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare int1 char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int1 char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare int2 char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int2 char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare int3 char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int3 char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare int4 char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int4 char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare int8 char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int8 char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare integer char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'integer char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare interval char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'interval char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare into char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'into char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare is char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'is char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare iterate char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'iterate char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare join char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'join char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare key char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare keys char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'keys char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare kill char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'kill char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare leading char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'leading char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare leave char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'leave char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare left char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'left char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare like char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'like char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare limit char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'limit char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare linear char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'linear char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare lines char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'lines char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare load char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'load char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare localtime char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'localtime char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare localtimestamp char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'localtimestamp char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare lock char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'lock char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare long char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'long char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare longblob char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'longblob char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare longtext char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'longtext char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare loop char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'loop char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare low_priority char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'low_priority char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare master_ssl_verify_server_cert char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'master_ssl_verify_server_cert char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare match char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'match char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare mediumblob char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumblob char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare mediumint char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumint char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare mediumtext char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumtext char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare middleint char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'middleint char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare minute_microsecond char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'minute_microsecond char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare minute_second char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'minute_second char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare mod char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mod char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare modifies char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'modifies char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare natural char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'natural char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare not char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare no_write_to_binlog char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'no_write_to_binlog char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare null char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare numeric char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare on char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'on char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare optimize char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'optimize char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare option char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'option char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare optionally char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'optionally char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare or char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare order char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare out char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'out char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare outer char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'outer char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare outfile char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'outfile char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare precision char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'precision char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare primary char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'primary char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare procedure char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare purge char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'purge char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare range char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'range char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare read char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'read char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare reads char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'reads char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare read_only char;
END//
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare read_write char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'read_write char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare real char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'real char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare references char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'references char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare regexp char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'regexp char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare release char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare rename char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'rename char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare repeat char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'repeat char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare replace char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'replace char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare require char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'require char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare restrict char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'restrict char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare return char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare revoke char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'revoke char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare right char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'right char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare rlike char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'rlike char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare schema char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'schema char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare schemas char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'schemas char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare second_microsecond char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'second_microsecond char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare SELECT char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SELECT char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare sensitive char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sensitive char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare separator char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'separator char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare set char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare show char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'show char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare smallint char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'smallint char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare spatial char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'spatial char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare specific char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'specific char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare sql char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare sqlexception char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sqlexception char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare sqlstate char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sqlstate char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare sqlwarning char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sqlwarning char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare sql_big_result char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql_big_result char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare sql_calc_found_rows char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql_calc_found_rows char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare sql_small_result char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql_small_result char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare ssl char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ssl char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare starting char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'starting char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare straight_join char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'straight_join char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare table char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'table char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare terminated char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'terminated char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare then char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'then char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare tinyblob char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyblob char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare tinyint char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyint char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare tinytext char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinytext char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare to char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare trailing char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trailing char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare trigger char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare true char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'true char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare undo char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'undo char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare union char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'union char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare unique char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'unique char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare unlock char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'unlock char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare unsigned char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'unsigned char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare update char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'update char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare usage char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'usage char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare use char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'use char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare using char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare utc_date char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utc_date char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare utc_time char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utc_time char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare utc_timestamp char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utc_timestamp char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare values char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'values char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare varbinary char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varbinary char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare varchar char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varchar char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare varcharacter char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varcharacter char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare varying char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varying char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare when char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'when char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare where char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare while char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'while char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare with char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'with char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare write char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'write char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare xor char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'xor char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare year_month char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'year_month char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare zerofill char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'zerofill char;
END' at line 3
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase :
----------
Ensure that every possible type of condition may be declared for a stored procedure
( covered in more detail in handlers section.)
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare cond1 condition for sqlstate 'HY000';
declare cond2 condition for sqlstate '23000';
declare cond3 condition for sqlstate 'HY001';
declare cond4 condition for sqlstate '08004';
declare cond5 condition for sqlstate '08S01';
declare cond6 condition for sqlstate '42000';
declare cond7 condition for sqlstate '28000';
declare cond8 condition for sqlstate '3D000';
declare cond9 condition for sqlstate '42S01';
declare cond10 condition for sqlstate '42S02';
declare cond11 condition for sqlstate '42S22';
declare cond12 condition for sqlstate '21S01';
declare cond13 condition for sqlstate '42S21';
declare cond14 condition for sqlstate '42S12';
declare cond15 condition for sqlstate '22004';
declare cond16 condition for sqlstate '25000';
declare cond17 condition for sqlstate '40001';
declare cond18 condition for sqlstate '21000';
declare cond19 condition for sqlstate '01000';
declare cond20 condition for sqlstate '22003';
declare cond21 condition for sqlstate '22007';
declare cond22 condition for sqlstate '0A000';
declare cond23 condition for sqlstate '70100';
declare cond24 condition for sqlstate '2F005';
declare cond25 condition for sqlstate '24000';
declare cond26 condition for sqlstate '02000';
declare continue handler for cond2 set @x2 = 1;
declare continue handler for cond1 set @x2 = 1;
declare continue handler for cond3 set @x2 = 1;
declare continue handler for cond4 set @x2 = 1;
declare continue handler for cond5 set @x2 = 1;
declare continue handler for cond7 set @x2 = 1;
declare continue handler for cond6 set @x2 = 1;
declare continue handler for cond8 set @x2 = 1;
declare continue handler for cond9 set @x2 = 1;
declare continue handler for cond10 set @x2 = 1;
declare continue handler for cond11 set @x2 = 1;
declare continue handler for cond12 set @x2 = 1;
declare continue handler for cond13 set @x2 = 1;
declare continue handler for cond14 set @x2 = 1;
declare continue handler for cond15 set @x2 = 1;
declare continue handler for cond16 set @x2 = 1;
declare continue handler for cond17 set @x2 = 1;
declare continue handler for cond18 set @x2 = 1;
declare continue handler for cond19 set @x2 = 1;
declare continue handler for cond20 set @x2 = 1;
declare continue handler for cond21 set @x2 = 1;
declare continue handler for cond22 set @x2 = 1;
declare continue handler for cond23 set @x2 = 1;
declare continue handler for cond24 set @x2 = 1;
declare continue handler for cond25 set @x2 = 1;
declare continue handler for cond26 set @x2 = 1;
set @x = 1;
insert into t2 values (1);
set @x = 2;
insert into t2 values (1);
set @x = 3;
END//
CALL sp1();
DROP PROCEDURE sp1;
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare @x char;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '@x char;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare x char1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'char1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare accessible condition for sqlstate '02000';
declare exit handler for add set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'accessible condition for sqlstate '02000';
declare exit handler for add set @var' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare add condition for sqlstate '02000';
declare exit handler for add set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'add condition for sqlstate '02000';
declare exit handler for add set @var2 = 1;
' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare all condition for sqlstate '02000';
declare exit handler for all set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'all condition for sqlstate '02000';
declare exit handler for all set @var2 = 1;
' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare alter condition for sqlstate '02000';
declare exit handler for alter set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alter condition for sqlstate '02000';
declare exit handler for alter set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare analyze condition for sqlstate '02000';
declare exit handler for analyze set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'analyze condition for sqlstate '02000';
declare exit handler for analyze set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare and condition for sqlstate '02000';
declare exit handler for and set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'and condition for sqlstate '02000';
declare exit handler for and set @var2 = 1;
' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare as condition for sqlstate '02000';
declare exit handler for as set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as condition for sqlstate '02000';
declare exit handler for as set @var2 = 1;
EN' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare asc condition for sqlstate '02000';
declare exit handler for asc set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'asc condition for sqlstate '02000';
declare exit handler for asc set @var2 = 1;
' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare asensitive condition for sqlstate '02000';
declare exit handler for asensitive set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'asensitive condition for sqlstate '02000';
declare exit handler for asensitive s' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare before condition for sqlstate '02000';
declare exit handler for before set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'before condition for sqlstate '02000';
declare exit handler for before set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare between condition for sqlstate '02000';
declare exit handler for between set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'between condition for sqlstate '02000';
declare exit handler for between set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare bigint condition for sqlstate '02000';
declare exit handler for bigint set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'bigint condition for sqlstate '02000';
declare exit handler for bigint set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare binary condition for sqlstate '02000';
declare exit handler for binary set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'binary condition for sqlstate '02000';
declare exit handler for binary set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare blob condition for sqlstate '02000';
declare exit handler for blob set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'blob condition for sqlstate '02000';
declare exit handler for blob set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare both condition for sqlstate '02000';
declare exit handler for both set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'both condition for sqlstate '02000';
declare exit handler for both set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare by condition for sqlstate '02000';
declare exit handler for by set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'by condition for sqlstate '02000';
declare exit handler for by set @var2 = 1;
EN' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare call condition for sqlstate '02000';
declare exit handler for CALL set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'call condition for sqlstate '02000';
declare exit handler for CALL set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare cascade condition for sqlstate '02000';
declare exit handler for cascade set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cascade condition for sqlstate '02000';
declare exit handler for cascade set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare case condition for sqlstate '02000';
declare exit handler for case set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'case condition for sqlstate '02000';
declare exit handler for case set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare change condition for sqlstate '02000';
declare exit handler for change set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'change condition for sqlstate '02000';
declare exit handler for change set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare char condition for sqlstate '02000';
declare exit handler for char set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'char condition for sqlstate '02000';
declare exit handler for char set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare character condition for sqlstate '02000';
declare exit handler for character set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'character condition for sqlstate '02000';
declare exit handler for character set' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare check condition for sqlstate '02000';
declare exit handler for check set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'check condition for sqlstate '02000';
declare exit handler for check set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare collate condition for sqlstate '02000';
declare exit handler for collate set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'collate condition for sqlstate '02000';
declare exit handler for collate set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare column condition for sqlstate '02000';
declare exit handler for column set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'column condition for sqlstate '02000';
declare exit handler for column set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare condition condition for sqlstate '02000';
declare exit handler for condition set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'condition condition for sqlstate '02000';
declare exit handler for condition set' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare connection condition for sqlstate '02000';
declare exit handler for connection set @var2 = 1;
END//
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare constraint condition for sqlstate '02000';
declare exit handler for constraint set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'constraint condition for sqlstate '02000';
declare exit handler for constraint s' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare continue condition for sqlstate '02000';
declare exit handler for continue set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'condition for sqlstate '02000';
declare exit handler for continue set @var2 = 1;' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare convert condition for sqlstate '02000';
declare exit handler for convert set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'convert condition for sqlstate '02000';
declare exit handler for convert set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare create condition for sqlstate '02000';
declare exit handler for create set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'create condition for sqlstate '02000';
declare exit handler for create set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare cross condition for sqlstate '02000';
declare exit handler for cross set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cross condition for sqlstate '02000';
declare exit handler for cross set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare current_date condition for sqlstate '02000';
declare exit handler for current_date set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_date condition for sqlstate '02000';
declare exit handler for current_da' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare current_time condition for sqlstate '02000';
declare exit handler for current_time set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_time condition for sqlstate '02000';
declare exit handler for current_ti' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare current_timestamp condition for sqlstate '02000';
declare exit handler for current_timestamp set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_timestamp condition for sqlstate '02000';
declare exit handler for curre' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare current_user condition for sqlstate '02000';
declare exit handler for current_user set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_user condition for sqlstate '02000';
declare exit handler for current_us' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare cursor condition for sqlstate '02000';
declare exit handler for cursor set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cursor condition for sqlstate '02000';
declare exit handler for cursor set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare database condition for sqlstate '02000';
declare exit handler for database set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'database condition for sqlstate '02000';
declare exit handler for database set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare databases condition for sqlstate '02000';
declare exit handler for databases set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'databases condition for sqlstate '02000';
declare exit handler for databases set' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare day_hour condition for sqlstate '02000';
declare exit handler for day_hour set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_hour condition for sqlstate '02000';
declare exit handler for day_hour set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare day_microsecond condition for sqlstate '02000';
declare exit handler for day_microsecond set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_microsecond condition for sqlstate '02000';
declare exit handler for day_mic' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare day_minute condition for sqlstate '02000';
declare exit handler for day_minute set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_minute condition for sqlstate '02000';
declare exit handler for day_minute s' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare day_second condition for sqlstate '02000';
declare exit handler for day_second set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_second condition for sqlstate '02000';
declare exit handler for day_second s' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare dec condition for sqlstate '02000';
declare exit handler for dec set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'dec condition for sqlstate '02000';
declare exit handler for dec set @var2 = 1;
' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare decimal condition for sqlstate '02000';
declare exit handler for decimal set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal condition for sqlstate '02000';
declare exit handler for decimal set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare declare condition for sqlstate '02000';
declare exit handler for declare set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare condition for sqlstate '02000';
declare exit handler for declare set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare default condition for sqlstate '02000';
declare exit handler for default set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'default condition for sqlstate '02000';
declare exit handler for default set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare delayed condition for sqlstate '02000';
declare exit handler for delayed set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delayed condition for sqlstate '02000';
declare exit handler for delayed set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare delete condition for sqlstate '02000';
declare exit handler for delete set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete condition for sqlstate '02000';
declare exit handler for delete set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare desc condition for sqlstate '02000';
declare exit handler for desc set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc condition for sqlstate '02000';
declare exit handler for desc set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare describe condition for sqlstate '02000';
declare exit handler for describe set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'describe condition for sqlstate '02000';
declare exit handler for describe set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare deterministic condition for sqlstate '02000';
declare exit handler for deterministic set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'deterministic condition for sqlstate '02000';
declare exit handler for determini' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare distinct condition for sqlstate '02000';
declare exit handler for distinct set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct condition for sqlstate '02000';
declare exit handler for distinct set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare distinctrow condition for sqlstate '02000';
declare exit handler for distinctrow set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinctrow condition for sqlstate '02000';
declare exit handler for distinctrow' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare div condition for sqlstate '02000';
declare exit handler for div set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'div condition for sqlstate '02000';
declare exit handler for div set @var2 = 1;
' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare double condition for sqlstate '02000';
declare exit handler for double set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'double condition for sqlstate '02000';
declare exit handler for double set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare drop condition for sqlstate '02000';
declare exit handler for drop set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'drop condition for sqlstate '02000';
declare exit handler for drop set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare dual condition for sqlstate '02000';
declare exit handler for dual set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'dual condition for sqlstate '02000';
declare exit handler for dual set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare each condition for sqlstate '02000';
declare exit handler for each set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'each condition for sqlstate '02000';
declare exit handler for each set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare else condition for sqlstate '02000';
declare exit handler for else set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'else condition for sqlstate '02000';
declare exit handler for else set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare elseif condition for sqlstate '02000';
declare exit handler for elseif set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'elseif condition for sqlstate '02000';
declare exit handler for elseif set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare enclosed condition for sqlstate '02000';
declare exit handler for enclosed set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enclosed condition for sqlstate '02000';
declare exit handler for enclosed set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare escaped condition for sqlstate '02000';
declare exit handler for escaped set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'escaped condition for sqlstate '02000';
declare exit handler for escaped set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare exists condition for sqlstate '02000';
declare exit handler for exists set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'exists condition for sqlstate '02000';
declare exit handler for exists set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare exit condition for sqlstate '02000';
declare exit handler for exit set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'condition for sqlstate '02000';
declare exit handler for exit set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare explain condition for sqlstate '02000';
declare exit handler for explain set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'explain condition for sqlstate '02000';
declare exit handler for explain set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare false condition for sqlstate '02000';
declare exit handler for false set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'false condition for sqlstate '02000';
declare exit handler for false set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare fetch condition for sqlstate '02000';
declare exit handler for fetch set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'fetch condition for sqlstate '02000';
declare exit handler for fetch set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare float condition for sqlstate '02000';
declare exit handler for float set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float condition for sqlstate '02000';
declare exit handler for float set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare float4 condition for sqlstate '02000';
declare exit handler for add set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float4 condition for sqlstate '02000';
declare exit handler for add set @var2 = ' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare float8 condition for sqlstate '02000';
declare exit handler for add set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float8 condition for sqlstate '02000';
declare exit handler for add set @var2 = ' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare for condition for sqlstate '02000';
declare exit handler for for set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'for condition for sqlstate '02000';
declare exit handler for for set @var2 = 1;
' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare force condition for sqlstate '02000';
declare exit handler for force set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'force condition for sqlstate '02000';
declare exit handler for force set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare foreign condition for sqlstate '02000';
declare exit handler for foreign set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'foreign condition for sqlstate '02000';
declare exit handler for foreign set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare from condition for sqlstate '02000';
declare exit handler for from set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from condition for sqlstate '02000';
declare exit handler for from set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare fulltext condition for sqlstate '02000';
declare exit handler for fulltext set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'fulltext condition for sqlstate '02000';
declare exit handler for fulltext set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare grant condition for sqlstate '02000';
declare exit handler for grant set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'grant condition for sqlstate '02000';
declare exit handler for grant set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare group condition for sqlstate '02000';
declare exit handler for group set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'group condition for sqlstate '02000';
declare exit handler for group set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare having condition for sqlstate '02000';
declare exit handler for having set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'having condition for sqlstate '02000';
declare exit handler for having set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare high_priority condition for sqlstate '02000';
declare exit handler for high_priority set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'high_priority condition for sqlstate '02000';
declare exit handler for high_prio' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare hour_microsecond condition for sqlstate '02000';
declare exit handler for hour_microsecond set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'hour_microsecond condition for sqlstate '02000';
declare exit handler for hour_m' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare hour_minute condition for sqlstate '02000';
declare exit handler for hour_minute set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'hour_minute condition for sqlstate '02000';
declare exit handler for hour_minute' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare hour_second condition for sqlstate '02000';
declare exit handler for hour_second set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'hour_second condition for sqlstate '02000';
declare exit handler for hour_second' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare if condition for sqlstate '02000';
declare exit handler for if set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if condition for sqlstate '02000';
declare exit handler for if set @var2 = 1;
EN' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare ignore condition for sqlstate '02000';
declare exit handler for ignore set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ignore condition for sqlstate '02000';
declare exit handler for ignore set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare in condition for sqlstate '02000';
declare exit handler for in set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'in condition for sqlstate '02000';
declare exit handler for in set @var2 = 1;
EN' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare index condition for sqlstate '02000';
declare exit handler for index set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index condition for sqlstate '02000';
declare exit handler for index set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare infile condition for sqlstate '02000';
declare exit handler for infile set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'infile condition for sqlstate '02000';
declare exit handler for infile set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare inner condition for sqlstate '02000';
declare exit handler for inner set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'inner condition for sqlstate '02000';
declare exit handler for inner set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare inout condition for sqlstate '02000';
declare exit handler for inout set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'inout condition for sqlstate '02000';
declare exit handler for inout set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare insensitive condition for sqlstate '02000';
declare exit handler for insensitive set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'insensitive condition for sqlstate '02000';
declare exit handler for insensitive' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare insert condition for sqlstate '02000';
declare exit handler for insert set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'insert condition for sqlstate '02000';
declare exit handler for insert set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare int condition for sqlstate '02000';
declare exit handler for int set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int condition for sqlstate '02000';
declare exit handler for int set @var2 = 1;
' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare int1 condition for sqlstate '02000';
declare exit handler for int set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int1 condition for sqlstate '02000';
declare exit handler for int set @var2 = 1;' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare int2 condition for sqlstate '02000';
declare exit handler for int set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int2 condition for sqlstate '02000';
declare exit handler for int set @var2 = 1;' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare int3 condition for sqlstate '02000';
declare exit handler for int set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int3 condition for sqlstate '02000';
declare exit handler for int set @var2 = 1;' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare int4 condition for sqlstate '02000';
declare exit handler for int set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int4 condition for sqlstate '02000';
declare exit handler for int set @var2 = 1;' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare int8 condition for sqlstate '02000';
declare exit handler for int set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int8 condition for sqlstate '02000';
declare exit handler for int set @var2 = 1;' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare integer condition for sqlstate '02000';
declare exit handler for integer set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'integer condition for sqlstate '02000';
declare exit handler for integer set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare interval condition for sqlstate '02000';
declare exit handler for interval set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'interval condition for sqlstate '02000';
declare exit handler for interval set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare into condition for sqlstate '02000';
declare exit handler for into set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'into condition for sqlstate '02000';
declare exit handler for into set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare is condition for sqlstate '02000';
declare exit handler for is set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'is condition for sqlstate '02000';
declare exit handler for is set @var2 = 1;
EN' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare iterate condition for sqlstate '02000';
declare exit handler for iterate set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'iterate condition for sqlstate '02000';
declare exit handler for iterate set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare join condition for sqlstate '02000';
declare exit handler for join set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'join condition for sqlstate '02000';
declare exit handler for join set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare key condition for sqlstate '02000';
declare exit handler for key set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key condition for sqlstate '02000';
declare exit handler for key set @var2 = 1;
' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare keys condition for sqlstate '02000';
declare exit handler for keys set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'keys condition for sqlstate '02000';
declare exit handler for keys set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare kill condition for sqlstate '02000';
declare exit handler for kill set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'kill condition for sqlstate '02000';
declare exit handler for kill set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare leading condition for sqlstate '02000';
declare exit handler for leading set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'leading condition for sqlstate '02000';
declare exit handler for leading set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare leave condition for sqlstate '02000';
declare exit handler for leave set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'leave condition for sqlstate '02000';
declare exit handler for leave set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare left condition for sqlstate '02000';
declare exit handler for left set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'left condition for sqlstate '02000';
declare exit handler for left set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare like condition for sqlstate '02000';
declare exit handler for like set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'like condition for sqlstate '02000';
declare exit handler for like set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare limit condition for sqlstate '02000';
declare exit handler for limit set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'limit condition for sqlstate '02000';
declare exit handler for limit set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare linear condition for sqlstate '02000';
declare exit handler for int set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'linear condition for sqlstate '02000';
declare exit handler for int set @var2 = ' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare lines condition for sqlstate '02000';
declare exit handler for lines set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'lines condition for sqlstate '02000';
declare exit handler for lines set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare load condition for sqlstate '02000';
declare exit handler for load set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'load condition for sqlstate '02000';
declare exit handler for load set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare localtime condition for sqlstate '02000';
declare exit handler for localtime set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'localtime condition for sqlstate '02000';
declare exit handler for localtime set' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare localtimestamp condition for sqlstate '02000';
declare exit handler for localtimestamp set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'localtimestamp condition for sqlstate '02000';
declare exit handler for localtim' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare lock condition for sqlstate '02000';
declare exit handler for lock set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'lock condition for sqlstate '02000';
declare exit handler for lock set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare long condition for sqlstate '02000';
declare exit handler for long set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'long condition for sqlstate '02000';
declare exit handler for long set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare longblob condition for sqlstate '02000';
declare exit handler for longblob set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'longblob condition for sqlstate '02000';
declare exit handler for longblob set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare longtext condition for sqlstate '02000';
declare exit handler for longtext set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'longtext condition for sqlstate '02000';
declare exit handler for longtext set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare loop condition for sqlstate '02000';
declare exit handler for loop set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'loop condition for sqlstate '02000';
declare exit handler for loop set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare low_priority condition for sqlstate '02000';
declare exit handler for low_priority set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'low_priority condition for sqlstate '02000';
declare exit handler for low_priori' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare master_ssl_verify_server_cert condition for sqlstate '02000';
declare exit handler for int set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'master_ssl_verify_server_cert condition for sqlstate '02000';
declare exit handl' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare match condition for sqlstate '02000';
declare exit handler for match set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'match condition for sqlstate '02000';
declare exit handler for match set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare mediumblob condition for sqlstate '02000';
declare exit handler for mediumblob set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumblob condition for sqlstate '02000';
declare exit handler for mediumblob s' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare mediumint condition for sqlstate '02000';
declare exit handler for mediumint set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumint condition for sqlstate '02000';
declare exit handler for mediumint set' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare mediumtext condition for sqlstate '02000';
declare exit handler for mediumtext set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumtext condition for sqlstate '02000';
declare exit handler for mediumtext s' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare middleint condition for sqlstate '02000';
declare exit handler for middleint set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'middleint condition for sqlstate '02000';
declare exit handler for middleint set' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare minute_microsecond condition for sqlstate '02000';
declare exit handler for minute_microsecond set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'minute_microsecond condition for sqlstate '02000';
declare exit handler for minu' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare minute_second condition for sqlstate '02000';
declare exit handler for minute_second set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'minute_second condition for sqlstate '02000';
declare exit handler for minute_se' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare mod condition for sqlstate '02000';
declare exit handler for mod set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mod condition for sqlstate '02000';
declare exit handler for mod set @var2 = 1;
' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare modifies condition for sqlstate '02000';
declare exit handler for modifies set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'modifies condition for sqlstate '02000';
declare exit handler for modifies set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare natural condition for sqlstate '02000';
declare exit handler for natural set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'natural condition for sqlstate '02000';
declare exit handler for natural set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare not condition for sqlstate '02000';
declare exit handler for not set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not condition for sqlstate '02000';
declare exit handler for not set @var2 = 1;
' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare no_write_to_binlog condition for sqlstate '02000';
declare exit handler for no_write_to_binlog set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'no_write_to_binlog condition for sqlstate '02000';
declare exit handler for no_w' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare null condition for sqlstate '02000';
declare exit handler for null set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null condition for sqlstate '02000';
declare exit handler for null set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare numeric condition for sqlstate '02000';
declare exit handler for numeric set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric condition for sqlstate '02000';
declare exit handler for numeric set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare on condition for sqlstate '02000';
declare exit handler for on set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'on condition for sqlstate '02000';
declare exit handler for on set @var2 = 1;
EN' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare optimize condition for sqlstate '02000';
declare exit handler for optimize set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'optimize condition for sqlstate '02000';
declare exit handler for optimize set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare option condition for sqlstate '02000';
declare exit handler for option set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'option condition for sqlstate '02000';
declare exit handler for option set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare optionally condition for sqlstate '02000';
declare exit handler for optionally set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'optionally condition for sqlstate '02000';
declare exit handler for optionally s' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare or condition for sqlstate '02000';
declare exit handler for or set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or condition for sqlstate '02000';
declare exit handler for or set @var2 = 1;
EN' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare order condition for sqlstate '02000';
declare exit handler for order set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order condition for sqlstate '02000';
declare exit handler for order set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare out condition for sqlstate '02000';
declare exit handler for out set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'out condition for sqlstate '02000';
declare exit handler for out set @var2 = 1;
' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare outer condition for sqlstate '02000';
declare exit handler for outer set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'outer condition for sqlstate '02000';
declare exit handler for outer set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare outfile condition for sqlstate '02000';
declare exit handler for outfile set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'outfile condition for sqlstate '02000';
declare exit handler for outfile set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare precision condition for sqlstate '02000';
declare exit handler for precision set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'precision condition for sqlstate '02000';
declare exit handler for precision set' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare primary condition for sqlstate '02000';
declare exit handler for primary set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'primary condition for sqlstate '02000';
declare exit handler for primary set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare procedure condition for sqlstate '02000';
declare exit handler for procedure set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure condition for sqlstate '02000';
declare exit handler for procedure set' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare purge condition for sqlstate '02000';
declare exit handler for purge set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'purge condition for sqlstate '02000';
declare exit handler for purge set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare range condition for sqlstate '02000';
declare exit handler for int set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'range condition for sqlstate '02000';
declare exit handler for int set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare read condition for sqlstate '02000';
declare exit handler for read set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'read condition for sqlstate '02000';
declare exit handler for read set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare reads condition for sqlstate '02000';
declare exit handler for reads set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'reads condition for sqlstate '02000';
declare exit handler for reads set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare read_only condition for sqlstate '02000';
declare exit handler for int set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int set @var2 = 1;
END' at line 4
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare read_write condition for sqlstate '02000';
declare exit handler for int set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'read_write condition for sqlstate '02000';
declare exit handler for int set @var' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare real condition for sqlstate '02000';
declare exit handler for real set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'real condition for sqlstate '02000';
declare exit handler for real set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare references condition for sqlstate '02000';
declare exit handler for references set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'references condition for sqlstate '02000';
declare exit handler for references s' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare regexp condition for sqlstate '02000';
declare exit handler for regexp set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'regexp condition for sqlstate '02000';
declare exit handler for regexp set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare release condition for sqlstate '02000';
declare exit handler for int set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release condition for sqlstate '02000';
declare exit handler for int set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare rename condition for sqlstate '02000';
declare exit handler for rename set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'rename condition for sqlstate '02000';
declare exit handler for rename set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare repeat condition for sqlstate '02000';
declare exit handler for repeat set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'repeat condition for sqlstate '02000';
declare exit handler for repeat set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare replace condition for sqlstate '02000';
declare exit handler for replace set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'replace condition for sqlstate '02000';
declare exit handler for replace set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare require condition for sqlstate '02000';
declare exit handler for require set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'require condition for sqlstate '02000';
declare exit handler for require set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare restrict condition for sqlstate '02000';
declare exit handler for restrict set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'restrict condition for sqlstate '02000';
declare exit handler for restrict set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare return condition for sqlstate '02000';
declare exit handler for return set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return condition for sqlstate '02000';
declare exit handler for return set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare revoke condition for sqlstate '02000';
declare exit handler for revoke set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'revoke condition for sqlstate '02000';
declare exit handler for revoke set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare right condition for sqlstate '02000';
declare exit handler for right set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'right condition for sqlstate '02000';
declare exit handler for right set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare rlike condition for sqlstate '02000';
declare exit handler for rlike set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'rlike condition for sqlstate '02000';
declare exit handler for rlike set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare schema condition for sqlstate '02000';
declare exit handler for schema set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'schema condition for sqlstate '02000';
declare exit handler for schema set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare schemas condition for sqlstate '02000';
declare exit handler for schemas set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'schemas condition for sqlstate '02000';
declare exit handler for schemas set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare second_microsecond condition for sqlstate '02000';
declare exit handler for second_microsecond set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'second_microsecond condition for sqlstate '02000';
declare exit handler for seco' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare select condition for sqlstate '02000';
declare exit handler for SELECT set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select condition for sqlstate '02000';
declare exit handler for SELECT set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare sensitive condition for sqlstate '02000';
declare exit handler for sensitive set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sensitive condition for sqlstate '02000';
declare exit handler for sensitive set' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare separator condition for sqlstate '02000';
declare exit handler for separator set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'separator condition for sqlstate '02000';
declare exit handler for separator set' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare set condition for sqlstate '02000';
declare exit handler for set set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set condition for sqlstate '02000';
declare exit handler for set set @var2 = 1;
' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare show condition for sqlstate '02000';
declare exit handler for show set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'show condition for sqlstate '02000';
declare exit handler for show set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare smallint condition for sqlstate '02000';
declare exit handler for smallint set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'smallint condition for sqlstate '02000';
declare exit handler for smallint set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare spatial condition for sqlstate '02000';
declare exit handler for spatial set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'spatial condition for sqlstate '02000';
declare exit handler for spatial set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare specific condition for sqlstate '02000';
declare exit handler for specific set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'specific condition for sqlstate '02000';
declare exit handler for specific set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare sql condition for sqlstate '02000';
declare exit handler for sql set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql condition for sqlstate '02000';
declare exit handler for sql set @var2 = 1;
' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare sqlexception condition for sqlstate '02000';
declare exit handler for sqlexception set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sqlexception condition for sqlstate '02000';
declare exit handler for sqlexcepti' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare sqlstate condition for sqlstate '02000';
declare exit handler for sqlstate set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sqlstate condition for sqlstate '02000';
declare exit handler for sqlstate set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare sqlwarning condition for sqlstate '02000';
declare exit handler for sqlwarning set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sqlwarning condition for sqlstate '02000';
declare exit handler for sqlwarning s' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare sql_big_result condition for sqlstate '02000';
declare exit handler for sql_big_result set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql_big_result condition for sqlstate '02000';
declare exit handler for sql_big_' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare sql_calc_found_rows condition for sqlstate '02000';
declare exit handler for sql_calc_found_rows set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql_calc_found_rows condition for sqlstate '02000';
declare exit handler for sql' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare sql_small_result condition for sqlstate '02000';
declare exit handler for sql_small_result set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql_small_result condition for sqlstate '02000';
declare exit handler for sql_sm' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare ssl condition for sqlstate '02000';
declare exit handler for ssl set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ssl condition for sqlstate '02000';
declare exit handler for ssl set @var2 = 1;
' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare starting condition for sqlstate '02000';
declare exit handler for starting set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'starting condition for sqlstate '02000';
declare exit handler for starting set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare straight_join condition for sqlstate '02000';
declare exit handler for straight_join set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'straight_join condition for sqlstate '02000';
declare exit handler for straight_' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare table condition for sqlstate '02000';
declare exit handler for table set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'table condition for sqlstate '02000';
declare exit handler for table set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare terminated condition for sqlstate '02000';
declare exit handler for terminated set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'terminated condition for sqlstate '02000';
declare exit handler for terminated s' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare then condition for sqlstate '02000';
declare exit handler for then set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'then condition for sqlstate '02000';
declare exit handler for then set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare tinyblob condition for sqlstate '02000';
declare exit handler for tinyblob set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyblob condition for sqlstate '02000';
declare exit handler for tinyblob set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare tinyint condition for sqlstate '02000';
declare exit handler for tinyint set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyint condition for sqlstate '02000';
declare exit handler for tinyint set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare tinytext condition for sqlstate '02000';
declare exit handler for tinytext set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinytext condition for sqlstate '02000';
declare exit handler for tinytext set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare to condition for sqlstate '02000';
declare exit handler for to set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to condition for sqlstate '02000';
declare exit handler for to set @var2 = 1;
EN' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare trailing condition for sqlstate '02000';
declare exit handler for trailing set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trailing condition for sqlstate '02000';
declare exit handler for trailing set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare trigger condition for sqlstate '02000';
declare exit handler for trigger set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger condition for sqlstate '02000';
declare exit handler for trigger set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare true condition for sqlstate '02000';
declare exit handler for true set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'true condition for sqlstate '02000';
declare exit handler for true set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare undo condition for sqlstate '02000';
declare exit handler for undo set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'undo condition for sqlstate '02000';
declare exit handler for undo set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare union condition for sqlstate '02000';
declare exit handler for union set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'union condition for sqlstate '02000';
declare exit handler for union set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare unique condition for sqlstate '02000';
declare exit handler for unique set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'unique condition for sqlstate '02000';
declare exit handler for unique set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare unlock condition for sqlstate '02000';
declare exit handler for unlock set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'unlock condition for sqlstate '02000';
declare exit handler for unlock set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare unsigned condition for sqlstate '02000';
declare exit handler for unsigned set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'unsigned condition for sqlstate '02000';
declare exit handler for unsigned set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare update condition for sqlstate '02000';
declare exit handler for update set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'update condition for sqlstate '02000';
declare exit handler for update set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare usage condition for sqlstate '02000';
declare exit handler for usage set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'usage condition for sqlstate '02000';
declare exit handler for usage set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare use condition for sqlstate '02000';
declare exit handler for USE set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'use condition for sqlstate '02000';
declare exit handler for USE set @var2 = 1;
' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare using condition for sqlstate '02000';
declare exit handler for using set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using condition for sqlstate '02000';
declare exit handler for using set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare utc_date condition for sqlstate '02000';
declare exit handler for utc_date set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utc_date condition for sqlstate '02000';
declare exit handler for utc_date set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare utc_time condition for sqlstate '02000';
declare exit handler for utc_time set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utc_time condition for sqlstate '02000';
declare exit handler for utc_time set @' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare utc_timestamp condition for sqlstate '02000';
declare exit handler for utc_timestamp set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utc_timestamp condition for sqlstate '02000';
declare exit handler for utc_times' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare values condition for sqlstate '02000';
declare exit handler for values set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'values condition for sqlstate '02000';
declare exit handler for values set @var2' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare varbinary condition for sqlstate '02000';
declare exit handler for varbinary set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varbinary condition for sqlstate '02000';
declare exit handler for varbinary set' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare varchar condition for sqlstate '02000';
declare exit handler for varchar set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varchar condition for sqlstate '02000';
declare exit handler for varchar set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare varcharacter condition for sqlstate '02000';
declare exit handler for varcharacter set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varcharacter condition for sqlstate '02000';
declare exit handler for varcharact' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare varying condition for sqlstate '02000';
declare exit handler for varying set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varying condition for sqlstate '02000';
declare exit handler for varying set @va' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare when condition for sqlstate '02000';
declare exit handler for when set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'when condition for sqlstate '02000';
declare exit handler for when set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare where condition for sqlstate '02000';
declare exit handler for where set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where condition for sqlstate '02000';
declare exit handler for where set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare while condition for sqlstate '02000';
declare exit handler for while set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'while condition for sqlstate '02000';
declare exit handler for while set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare with condition for sqlstate '02000';
declare exit handler for with set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'with condition for sqlstate '02000';
declare exit handler for with set @var2 = 1' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare write condition for sqlstate '02000';
declare exit handler for write set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'write condition for sqlstate '02000';
declare exit handler for write set @var2 =' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare xor condition for sqlstate '02000';
declare exit handler for xor set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'xor condition for sqlstate '02000';
declare exit handler for xor set @var2 = 1;
' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare year_month condition for sqlstate '02000';
declare exit handler for year_month set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'year_month condition for sqlstate '02000';
declare exit handler for year_month s' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare zerofill condition for sqlstate '02000';
declare exit handler for zerofill set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'zerofill condition for sqlstate '02000';
declare exit handler for zerofill set @' at line 3
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase :
----------
Ensure that every possible type of handler may be declared for
a stored procedure (continue- handler_type ).
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare continue handler for sqlstate '23000' set @x2 = 1;
set @x = 1;
insert into t2(f1) values (1);
set @x = 2;
insert into t2(f1) values (1);
set @x = 3;
END//
CALL sp1();
DROP PROCEDURE sp1;
DROP PROCEDURE IF EXISTS handler1;
Warnings:
Note	1305	PROCEDURE db_storedproc.handler1 does not exist
CREATE PROCEDURE handler1()
BEGIN
declare undo handler for sqlstate '23000' set @x2 = 1;
set @x = 1;
insert into t values (1);
set @x = 2;
insert into t values (1);
set @x = 3;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'undo handler for sqlstate '23000' set @x2 = 1;
set @x = 1;
insert into t values ' at line 3
DROP PROCEDURE IF EXISTS handler1;
Warnings:
Note	1305	PROCEDURE db_storedproc.handler1 does not exist
CREATE PROCEDURE handler1()
BEGIN
declare continueinv handler for sqlstate '2300' set @x2 = 1;
set @x = 1;
insert into t values (1);
set @x = 2;
insert into t values (1);
set @x = 3;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'handler for sqlstate '2300' set @x2 = 1;
set @x = 1;
insert into t values (1);
s' at line 3
DROP PROCEDURE IF EXISTS handler1;
Warnings:
Note	1305	PROCEDURE db_storedproc.handler1 does not exist
CREATE PROCEDURE handler1()
BEGIN
declare undoinv handler for sqlstate '2300' set @x2 = 1;
set @x = 1;
insert into t values (1);
set @x = 2;
insert into t values (1);
set @x = 3;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'handler for sqlstate '2300' set @x2 = 1;
set @x = 1;
insert into t values (1);
s' at line 3
DROP PROCEDURE IF EXISTS handler1;
Warnings:
Note	1305	PROCEDURE db_storedproc.handler1 does not exist
CREATE PROCEDURE handler1 ()
BEGIN
declare exitinv handler for sqlstate '2300' set @x2 = 1;
set @x = 1;
insert into t values (1);
set @x = 2;
insert into t values (1);
set @x = 3;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'handler for sqlstate '2300' set @x2 = 1;
set @x = 1;
insert into t values (1);
s' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare accessible handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'accessible handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare add handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'add handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare all handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'all handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare alter handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'alter handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare analyze handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'analyze handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare and handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'and handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare as handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'as handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare asc handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'asc handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare asensitive handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'asensitive handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare before handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'before handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare between handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'between handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare bigint handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'bigint handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare binary handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'binary handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare blob handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'blob handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare both handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'both handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare by handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'by handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare call handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'call handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare cascade handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cascade handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare case handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'case handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare change handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'change handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare char handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'char handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare character handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'character handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare check handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'check handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare collate handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'collate handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare column handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'column handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare condition handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'condition handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare constraint handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'constraint handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare continue handler for sqlstate '02000' set @var2 = 1;
END//
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare convert handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'convert handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare create handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'create handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare cross handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cross handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare current_date handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_date handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare current_time handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_time handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare current_timestamp handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_timestamp handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare current_user handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'current_user handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare cursor handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'cursor handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare database handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'database handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare databases handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'databases handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare day_hour handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_hour handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare day_microsecond handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_microsecond handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare day_minute handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_minute handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare day_second handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'day_second handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare dec handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'dec handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare decimal handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'decimal handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare declare handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare default handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'default handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare delayed handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delayed handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare delete handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare desc handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare describe handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'describe handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare deterministic handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'deterministic handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare distinct handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinct handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare distinctrow handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'distinctrow handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare div handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'div handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare double handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'double handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare drop handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'drop handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare dual handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'dual handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare each handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'each handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare else handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'else handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare elseif handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'elseif handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare enclosed handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'enclosed handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare escaped handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'escaped handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare exists handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'exists handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare exit handler for sqlstate '02000' set @var2 = 1;
END//
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare explain handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'explain handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare false handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'false handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare fetch handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'fetch handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare float handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare float4 handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float4 handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare float8 handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'float8 handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare for handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'for handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare force handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'force handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare foreign handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'foreign handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare from handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'from handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare fulltext handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'fulltext handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare grant handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'grant handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare group handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'group handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare having handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'having handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare high_priority handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'high_priority handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare hour_microsecond handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'hour_microsecond handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare hour_minute handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'hour_minute handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare hour_second handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'hour_second handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare if handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'if handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare ignore handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ignore handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare in handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'in handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare index handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare infile handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'infile handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare inner handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'inner handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare inout handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'inout handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare insensitive handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'insensitive handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare insert handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'insert handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare int handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare int1 handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int1 handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare int2 handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int2 handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare int3 handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int3 handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare int4 handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int4 handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare int8 handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'int8 handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare integer handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'integer handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare interval handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'interval handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare into handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'into handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare is handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'is handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare iterate handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'iterate handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare join handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'join handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare key handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare keys handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'keys handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare kill handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'kill handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare leading handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'leading handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare leave handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'leave handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare left handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'left handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare like handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'like handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare limit handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'limit handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare linear handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'linear handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare lines handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'lines handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare load handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'load handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare localtime handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'localtime handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare localtimestamp handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'localtimestamp handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare lock handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'lock handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare long handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'long handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare longblob handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'longblob handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare longtext handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'longtext handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare loop handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'loop handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare low_priority handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'low_priority handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare master_ssl_verify_server_cert handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'master_ssl_verify_server_cert handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare match handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'match handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare mediumblob handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumblob handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare mediumint handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumint handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare mediumtext handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mediumtext handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare middleint handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'middleint handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare minute_microsecond handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'minute_microsecond handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare minute_second handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'minute_second handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare mod handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'mod handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare modifies handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'modifies handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare natural handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'natural handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare not handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'not handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare no_write_to_binlog handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'no_write_to_binlog handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare null handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare numeric handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'numeric handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare on handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'on handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare optimize handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'optimize handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare option handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'option handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare optionally handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'optionally handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare or handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'or handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare order handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'order handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare out handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'out handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare outer handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'outer handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare outfile handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'outfile handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare precision handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'precision handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare primary handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'primary handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare privileges handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare procedure handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'procedure handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare purge handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'purge handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare range handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'range handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare read handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'read handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare reads handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'reads handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare read_only handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare read_write handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'read_write handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare real handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'real handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare references handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'references handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare regexp handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'regexp handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare release handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'release handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare rename handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'rename handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare repeat handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'repeat handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare replace handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'replace handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare require handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'require handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare restrict handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'restrict handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare return handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'return handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare revoke handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'revoke handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare right handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'right handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare rlike handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'rlike handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare schema handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'schema handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare schemas handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'schemas handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare second_microsecond handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'second_microsecond handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare select handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'select handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare sensitive handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sensitive handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare separator handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'separator handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare set handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'set handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare show handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'show handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare smallint handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'smallint handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare spatial handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'spatial handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare specific handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'specific handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare sql handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare sqlexception handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sqlexception handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare sqlstate handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sqlstate handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare sqlwarning handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sqlwarning handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare sql_big_result handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql_big_result handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare sql_calc_found_rows handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql_calc_found_rows handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare sql_small_result handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'sql_small_result handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare ssl handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ssl handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare starting handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'starting handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare straight_join handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'straight_join handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare table handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'table handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare terminated handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'terminated handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare then handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'then handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare tinyblob handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyblob handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare tinyint handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinyint handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare tinytext handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'tinytext handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare to handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'to handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare trailing handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trailing handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare trigger handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'trigger handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare true handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'true handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare undo handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'undo handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare union handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'union handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare unique handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'unique handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare unlock handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'unlock handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare unsigned handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'unsigned handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare update handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'update handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare usage handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'usage handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare use handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'use handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare using handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'using handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare utc_date handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utc_date handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare utc_time handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utc_time handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare utc_timestamp handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'utc_timestamp handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare values handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'values handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare varbinary handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varbinary handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare varchar handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varchar handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare varcharacter handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varcharacter handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare varying handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'varying handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare when handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'when handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare where handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'where handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare while handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'while handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare with handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'with handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare write handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'write handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare xor handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'xor handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare year_month handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'year_month handler for sqlstate '02000' set @var2 = 1;
END' at line 3
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare zerofill handler for sqlstate '02000' set @var2 = 1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'zerofill handler for sqlstate '02000' set @var2 = 1;
END' at line 3
USE db_storedproc;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.26:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
set @v1='0';
set @v2='0';
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x char;
declare y char;
declare cond1 condition for sqlstate '42000';
declare cur1 cursor for SELECT f1 from t2 limit 1;
declare continue handler for cond1 set @x = 4;
set @x = '1';
set @y = '2';
BEGIN
declare x char;
declare y char;
declare cur1 cursor for SELECT f1 from t2 limit 2, 1;
declare continue handler for sqlstate '42000' set @x = 3;
open cur1;
fetch cur1 into y;
close cur1;
CALL nonsexist();
SELECT x, y, @x;
END;
open cur1;
fetch cur1 into y;
close cur1;
CALL nonsexist();
set @v1 = @x;
set @v2 = y;
END//
CALL sp1();
x	y	@x
NULL	a	3
SELECT @v1, @v2;
@v1	@v2
4	a
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.28:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
SET @x = 0;
SET @y = 0;
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
SET @start_global_value = @@GLOBAL.sort_buffer_size;
CREATE PROCEDURE sp1()
BEGIN
DECLARE CONTINUE HANDLER FOR SQLSTATE '42000' SET @x2 = 1;
SET SESSION SORT_BUFFER_SIZE = 10 * 1024 * 1024;
SELECT @@sort_buffer_size;
SET @x = 4;
SET @y = 3;
SET GLOBAL SORT_BUFFER_SIZE = 2 * 1024 * 1024;
SELECT @@sort_buffer_size;
SET @@sort_buffer_size = 10 * 1024 * 1024;
SELECT @@sort_buffer_size;
END//
CALL sp1();
@@sort_buffer_size
10485760
@@sort_buffer_size
10485760
@@sort_buffer_size
10485760
SELECT @x, @y;
@x	@y
4	3
SET @@GLOBAL.sort_buffer_size = @start_global_value;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.29:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare xx char default 'x';
declare xy char default 'y';
declare xz char default 'z';
set @xx = xx, @xy = xy;
set @xz = xz;
SELECT @xx, @xy, @xz;
END//
CALL sp1();
@xx	@xy	@xz
x	y	z
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.30:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
set @xx=0;
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare xx int;
set xx = 'asd';
GET DIAGNOSTICS @n = NUMBER;
GET DIAGNOSTICS CONDITION @n @err_no = MYSQL_ERRNO, @err_txt = MESSAGE_TEXT;
SELECT @err_no, @err_txt;
set @xx = xx;
SELECT @xx;
END//
CALL sp1();
@err_no	@err_txt
1366	Incorrect integer value: 'asd' for column 'xx' at row 1
@xx
0
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare xx int;
set xx = 5;
set @xx = xx;
SELECT @xx;
END//
CALL sp1();
@xx
5
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.31 - a:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
set @xx=0;
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare xx char;
set xx = 'temp';
GET DIAGNOSTICS @n = NUMBER;
GET DIAGNOSTICS CONDITION @n @err_no = MYSQL_ERRNO, @err_txt = MESSAGE_TEXT;
SELECT @err_no, @err_txt;
set @xx = xx;
END//
CALL sp1();
@err_no	@err_txt
1265	Data truncated for column 'xx' at row 1
SELECT @xx;
@xx
t
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.31 - b:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare xx float;
set xx = 'asd';
GET DIAGNOSTICS @n = NUMBER;
GET DIAGNOSTICS CONDITION @n @err_no = MYSQL_ERRNO, @err_txt = MESSAGE_TEXT;
SELECT @err_no, @err_txt;
SELECT xx;
END//
CALL sp1();
@err_no	@err_txt
1265	Data truncated for column 'xx' at row 1
xx
0
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare xx float;
set xx = 1.6;
SELECT xx;
END//
CALL sp1();
xx
1.6
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.31 - c:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare xx datetime;
set xx = 'asd';
GET DIAGNOSTICS @n = NUMBER;
GET DIAGNOSTICS CONDITION @n @err_no = MYSQL_ERRNO, @err_txt = MESSAGE_TEXT;
SELECT @err_no, @err_txt;
SELECT xx;
END//
CALL sp1();
@err_no	@err_txt
1265	Data truncated for column 'xx' at row 1
xx
0000-00-00 00:00:00
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare xx datetime;
set xx = '2006-06-06 01:01:01';
SELECT xx;
END//
CALL sp1();
xx
2006-06-06 01:01:01
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.31 - d:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare xx varchar(20);
set xx = "abcdefghijk";
SELECT xx;
END//
CALL sp1();
xx
abcdefghijk
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.31 - e:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare xx tinyint;
set xx = 'asd';
GET DIAGNOSTICS @n = NUMBER;
GET DIAGNOSTICS CONDITION @n @err_no = MYSQL_ERRNO, @err_txt = MESSAGE_TEXT;
SELECT @err_no, @err_txt;
SELECT xx;
END//
CALL sp1();
@err_no	@err_txt
1366	Incorrect integer value: 'asd' for column 'xx' at row 1
xx
0
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare xx tinyint;
set xx = -125;
SELECT xx;
END//
CALL sp1();
xx
-125
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.37:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare x integer; declare y integer;
SELECT sal, f2 into x, y from t2 limit 1;
set @x=x; set @y=y;
END//
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x char ascii;
SELECT f1 into x from t2 limit 1;
END//
Warnings:
Warning	1287	'ASCII' is deprecated and will be removed in a future release. Please use CHARACTER SET charset_name instead
CALL sp1();
Warnings:
Warning	1265	Data truncated for column 'x' at row 1
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x tinytext;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x text;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x mediumtext;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x longtext;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x tinyblob;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x blob;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x mediumblob;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x longblob;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x binary;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
Warnings:
Warning	1265	Data truncated for column 'x' at row 1
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x tinyint;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x tinyint unsigned;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x tinyint zerofill;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x tinyint unsigned zerofill;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x smallint;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x smallint unsigned;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x smallint zerofill;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x smallint unsigned zerofill;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x mediumint;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x mediumint unsigned;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x mediumint zerofill;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x mediumint unsigned zerofill;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x int;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x int unsigned;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x int zerofill;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x int unsigned zerofill;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x bigint;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x bigint unsigned;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x bigint zerofill;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x bigint unsigned zerofill;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x decimal;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x decimal unsigned;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x decimal zerofill;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x decimal unsigned zerofill;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x numeric;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x numeric unsigned;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x numeric zerofill;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x numeric unsigned zerofill;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x real;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x real unsigned;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x real zerofill;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x real unsigned zerofill;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x float;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x float unsigned;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x float zerofill;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x float unsigned zerofill;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x date;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x time;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x datetime;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x timestamp;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x year;
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x year(4);
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x enum("1enum", "2enum");
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare x set("1set", "2set");
SELECT f1 into x from t2 limit 1;
END//
CALL sp1();
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.38:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare notable condition for sqlstate '42S02';
declare continue handler for notable set @x2=1;
set @x = 1;
insert into t2(f1) values (1);
set @x = 2;
insert into t2(f1) values (1);
set @x = 3;
END//
CALL sp1();
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.39:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare cond1 condition for sqlstate '42000';
declare cond1 condition for sqlstate '23000';
declare continue handler for cond1 set @var2 = 1;
insert into tnull values(1);
END//
ERROR 42000: Duplicate condition: cond1
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.41:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare cond1 condition for sqlstate '1';
declare continue handler for cond1 set @var2 = 1;
insert into tnull values( 1);
END//
ERROR 42000: Bad SQLSTATE: '1'
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare cond1 condition for sqlstate '12';
declare continue handler for cond1 set @var2 = 1;
insert into tnull values( 1);
END//
ERROR 42000: Bad SQLSTATE: '12'
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare cond1 condition for sqlstate '123';
declare continue handler for cond1 set @var2 = 1;
insert into tnull values( 1);
END//
ERROR 42000: Bad SQLSTATE: '123'
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare cond1 condition for sqlstate '1234';
declare continue handler for cond1 set @var2 = 1;
insert into tnull values( 1);
END//
ERROR 42000: Bad SQLSTATE: '1234'
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare cond1 condition for sqlstate '123456';
declare continue handler for cond1 set @var2 = 1;
insert into tnull values( 1);
END//
ERROR 42000: Bad SQLSTATE: '123456'
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.42:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare cond1 condition for sqlstate 'abcdefghi';
declare continue handler for cond1 set @var2 = 1;
insert into tnull values( 1);
END//
ERROR 42000: Bad SQLSTATE: 'abcdefghi'
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare cond1 condition for sqlstate '42000test';
declare continue handler for cond1 set @var2 = 1;
insert into tnull values( 1);
END//
ERROR 42000: Bad SQLSTATE: '42000test'
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare cond1 condition for sqlstate '00000@#$%^&';
declare continue handler for cond1 set @var2 = 1;
insert into tnull values( 1);
END//
ERROR 42000: Bad SQLSTATE: '00000@#$%^&'
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare cond1 condition for sqlstate '123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890';
declare continue handler for cond1 set @var2 = 1;
insert into tnull values( 1);
END//
ERROR 42000: Bad SQLSTATE: '123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890'
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare cond1 condition for sqlstate 'null';
declare continue handler for cond1 set @var2 = 1;
insert into tnull values( 1);
END//
ERROR 42000: Bad SQLSTATE: 'null'
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare cond1 condition for sqlstate ' ';
declare continue handler for cond1 set @var2 = 1;
insert into tnull values( 1);
END//
ERROR 42000: Bad SQLSTATE: ' '
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare cond1 condition for sqlstate 1234567890;
declare continue handler for cond1 set @var2 = 1;
insert into tnull values( 1);
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1234567890;
declare continue handler for cond1 set @var2 = 1;
insert into tnull ' at line 3
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare cond1 condition for sqlstate '2005-03-03';
declare continue handler for cond1 set @var2 = 1;
insert into tnull values( 1);
END//
ERROR 42000: Bad SQLSTATE: '2005-03-03'
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.43:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
expect failure, SQLSTATE 00000 is not an acceptable value
for an SP's handler
CREATE PROCEDURE sp1()
BEGIN
declare cond1 condition for sqlstate '00000';
declare continue handler for cond1 set @var2 = 1;
set @x=1;
SELECT @var2;
END//
ERROR 42000: Bad SQLSTATE: '00000'
ensure SP doesn't exist
CALL sp1();
ERROR 42000: PROCEDURE db_storedproc.sp1 does not exist
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.45:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE handler1 ()
BEGIN
declare continue handler for sqlstate '23000' set @varr1 = 5;
declare continue handler for sqlstate '23000' set @varr3 = 7;
END//
ERROR 42000: Duplicate handler declared in the same block
DROP PROCEDURE IF EXISTS handler1;
Warnings:
Note	1305	PROCEDURE db_storedproc.handler1 does not exist
CREATE PROCEDURE handler1 ()
BEGIN
declare mycondition condition for sqlstate '23000';
declare continue handler for mycondition set @varr3 = 7;
declare continue handler for sqlstate '23000' set @varr3 = 7;
END//
ERROR 42000: Duplicate handler declared in the same block
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.46:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare continue handler for sqlstate '1' set @var2 = 1;
END//
ERROR 42000: Bad SQLSTATE: '1'
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare continue handler for sqlstate '12' set @var2 = 1;
END//
ERROR 42000: Bad SQLSTATE: '12'
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare continue handler for sqlstate '123' set @var2 = 1;
END//
ERROR 42000: Bad SQLSTATE: '123'
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare continue handler for sqlstate '1234' set @var2 = 1;
END//
ERROR 42000: Bad SQLSTATE: '1234'
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare continue handler for sqlstate '123456' set @var2 = 1;
END//
ERROR 42000: Bad SQLSTATE: '123456'
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.47:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
declare continue handler for sqlstate '42s0200test'  set @var2 = 1;
insert into tnull values( 1);
SELECT @var2;
END//
ERROR 42000: Bad SQLSTATE: '42s0200test'
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.48:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
This creation should fail, SQLSTATE 00000 is unacceptable
CREATE PROCEDURE sp1()
BEGIN
declare continue handler for sqlstate '00000'  set @var2 = 1;
set @x=1;
SELECT @var2;
END//
ERROR 42000: Bad SQLSTATE: '00000'
Verify SP wasn't created
CALL sp1();
ERROR 42000: PROCEDURE db_storedproc.sp1 does not exist
DROP PROCEDURE IF EXISTSsp1;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'EXISTSsp1' at line 1
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.52:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare done int default 0;
declare count integer default 20;
declare newf1 char(20);
declare newf2 char(20);
declare newf3 char(20);
declare newf4 integer;
declare cur1 cursor for SELECT f1, f2, f3, f4 from t2;
declare cur1 cursor for SELECT f1, f2 from t2;
declare continue handler for sqlstate '02000' set done = 1;
BEGIN
open cur1;
set count = count - 1;
while count > 0 do
fetch cur1 into newf1, newlf1, newf3, newsal;
set count = count - 1;
END while;
close cur1;
END;
END//
ERROR 42000: Duplicate cursor: cur1
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.53:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare done int default 0;
declare count integer default 20;
declare newf1 char(20);
declare newf2 char(20);
declare newf3 char(20);
declare newf4 integer;
declare cur1 cursor for SELECT f1, lf1, f3, f4 into @w, @x, @y, @z from t2;
declare continue handler for sqlstate '02000' set done = 1;
BEGIN
open cur1;
set count = count - 1;
while count > 0 do
fetch cur1 into newf1, newlf1, newf3, newsal;
set count = count - 1;
END while;
close cur1;
END;
END//
ERROR 42000: Cursor SELECT must not have INTO
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.54:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.55:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare done int default 0;
declare count integer default 20;
declare newf1 char(20);
declare newf2 char(20);
declare newf3 char(20);
declare newf4 integer;
declare continue handler for sqlstate '02000' set done = 1;
BEGIN
open cur1;
set count = count - 1;
while count > 0 do
fetch cur1 into newf1, newf2, newf4, newf3;
set count = count - 1;
END while;
close cur1;
END;
END//
ERROR 42000: Undefined CURSOR: cur1
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare done int default 0;
declare count integer default 0;
declare newf1 char(20);
declare newf2 char(20);
declare newf3 char(20);
declare newf4 integer;
declare cur1 cursor for SELECT f1, f2, f3, f4 from t2;
declare continue handler for sqlstate '02000' set done = 1;
BEGIN
open cur1;
BEGIN
open cur1;
set count = count - 1;
while count > 0 do
fetch cur1 into newf1, newf2, newf3, newf4;
set count = count - 1;
END while;
END;
close cur1;
END;
END//
CALL sp1();
ERROR 24000: Cursor is already open
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.56:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare done int default 0;
declare count integer default 20;
declare newf1 char(20);
declare newf2 char(20);
declare newf3 char(20);
declare newf4 integer;
declare cur1 cursor for SELECT f1, f2, f4, f5 from t2;
declare continue handler for sqlstate '02000' set done = 1;
BEGIN
open cur1;
open cur1;
set count = count - 1;
while count > 0 do
fetch cur1 into newf1, newf2, newf4, newf3;
set count = count - 1;
END while;
close cur1;
END;
END//
CALL sp1();
ERROR 24000: Cursor is already open
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.57:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare done int default 0;
declare count integer default 20;
declare newf1 char(20);
declare newf2 char(20);
declare newf3 char(20);
declare newf4 integer;
declare cur1 cursor for SELECT f1, f2, f4, f5 from t2;
declare cur2 cursor for SELECT f1, f2 from t2;
declare continue handler for sqlstate '02000' set done = 1;
BEGIN
open cur2;
set count = count - 1;
while count > 0 do
fetch cur1 into newf1, newf2, newf4, newf3;
set count = count - 1;
END while;
close cur1;
END;
END//
CALL sp1();
ERROR 24000: Cursor is not open
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.59:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare done int default 0;
declare count integer default 20;
declare newf1 char(20);
declare newf2 char(20);
declare newf3 char(20);
declare newf4 integer;
declare cur1 cursor for SELECT f1, f2, f4, f5 from t2 limit 20, 10;
declare continue handler for sqlstate '02000' set done = 1;
BEGIN
set count = count - 1;
while count > 0 do
fetch cur1 into newf1, newf2, newf4, newf3;
set count = count - 1;
END while;
open cur1;
close cur1;
END;
END//
CALL sp1();
ERROR 24000: Cursor is not open
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare done int default 0;
declare count integer default 10;
declare newf1 char(20);
declare newf2 char(20);
declare newf3 char(20);
declare newf4 integer;
declare cur1 cursor for SELECT f1, f2, f3, f4 from t2;
declare continue handler for sqlstate '02000' set done = 1;
open cur1;
BEGIN
declare cur1 cursor for SELECT f1, f2, f3, f4 from t2;
set count = count - 1;
while count > 0 do
fetch cur1 into newf1, newf2, newf3, newf4;
set count = count - 1;
END while;
open cur1;
close cur1;
END;
close cur1;
END//
CALL sp1();
ERROR 24000: Cursor is not open
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.60:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare done int default 0;
declare count integer default 20;
declare newf1 char(20);
declare newf2 char(20);
declare newf3 char(20);
declare newf4 integer;
declare cur1 cursor for SELECT f1, f2, f4, f5 from t2 limit 20, 10;
declare continue handler for sqlstate '02000' set done = 1;
BEGIN
open cur1;
close cur1;
set count = count - 1;
while count > 0 do
fetch cur1 into newf1, newf2, newf4, newf3;
set count = count - 1;
END while;
END;
END//
CALL sp1();
ERROR 24000: Cursor is not open
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare done int default 0;
declare count integer default 20;
declare newf1 char(20);
declare newf2 char(20);
declare newf3 char(20);
declare newf4 integer;
declare cur1 cursor for SELECT f1, f2, f3, f4 from t2;
declare continue handler for sqlstate '02000' set done = 1;
open cur1;
close cur1;
BEGIN
declare cur1 cursor for SELECT f1, f2, f3, f4 from t2;
open cur1;
END;
fetch cur1 into newf1, newf2, newf3, newf4;
END//
CALL sp1();
ERROR 24000: Cursor is not open
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.62:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare done int default 0;
declare count integer default 20;
declare newf2 char(20);
declare newf1 int1;
declare cur1 cursor for SELECT f1, f3 from t2 limit 20, 10;
declare continue handler for sqlstate '02000' set done = 1;
BEGIN
open cur1;
set count = count - 1;
while count > 0 do
fetch cur1 into newf1, newf2;
set @x = newf1;
set @y = newf2;
SELECT @x, @y;
set count = count - 1;
END while;
close cur1;
END;
END//
CALL sp1();
@x	@y
NULL	NULL
@x	@y
NULL	NULL
@x	@y
NULL	NULL
@x	@y
NULL	NULL
@x	@y
NULL	NULL
@x	@y
NULL	NULL
@x	@y
NULL	NULL
@x	@y
NULL	NULL
@x	@y
NULL	NULL
@x	@y
NULL	NULL
@x	@y
NULL	NULL
@x	@y
NULL	NULL
@x	@y
NULL	NULL
@x	@y
NULL	NULL
@x	@y
NULL	NULL
@x	@y
NULL	NULL
@x	@y
NULL	NULL
@x	@y
NULL	NULL
@x	@y
NULL	NULL
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.63:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1()
BEGIN
declare done int default 0;
declare count integer default 20;
declare newf1 char(20);
declare newf2 char(20);
declare newf3 char(20);
declare newf4 integer;
declare cur1 cursor for SELECT f1, f2, f4, f5 from t2 limit 20, 10;
declare continue handler for sqlstate '02000' set done = 1;
BEGIN
close cur1;
open cur1;
set count = count - 1;
while count > 0 do
fetch cur1 into newf1, newf2, newf4, newf3;
set count = count - 1;
END while;
close cur1;
END;
END//
CALL sp1();
ERROR 24000: Cursor is not open
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( )
BEGIN
declare done int default 0;
declare count integer default 0;
declare newf1 char(20);
declare newf2 char(20);
declare newf3 char(20);
declare newf4 integer;
declare cur1 cursor for SELECT f1, f2, f3, f4 from t2;
declare continue handler for sqlstate '02000' set done = 1;
BEGIN
declare cur1 cursor for SELECT f1, f2, f3, f4 from t2;
open cur1;
END;
close cur1;
END//
CALL sp1();
ERROR 24000: Cursor is not open
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.64:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare done int default 0;
declare count integer default 20;
declare newf1 char(20);
declare newf2 char(20);
declare newf3 char(20);
declare newf4 integer;
declare cur1 cursor for SELECT f1, f2, f4, f5 from t2 limit 20, 10;
BEGIN
open cur1;
start transaction;
fetch cur1 into newf1, newf2, newf4, newf3;
commit;
fetch cur1 into newf1, newf2, newf4, newf3;
END;
END//
CALL sp1();
ERROR 02000: No data - zero rows fetched, selected, or processed
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.65:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare done int default 0;
declare count integer default 20;
declare newf1 char(20);
declare newf2 char(20);
declare newf3 char(20);
declare newf4 integer;
declare cur1 cursor for SELECT f1, f2, f4, f5 from t2 limit 20, 10;
BEGIN
open cur1;
fetch cur1 into newf1, newf2, newf4, newf3;
rollback;
fetch cur1 into newf1, newf2, newf4, newf3;
commit;
END;
END//
CALL sp1();
ERROR 02000: No data - zero rows fetched, selected, or processed
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.66:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare done int default 0;
declare count integer default 20;
declare newf1 char(20);
declare newf2 char(20);
declare newf3 char(20);
declare newf4 integer;
declare cur1 cursor for SELECT f1, f2, f4, f5 from t2 limit 20, 10;
declare continue handler for sqlstate '02000' set done = 1;
BEGIN
open cur1;
set count = count - 1;
while count > 0 do
fetch cur1 into newf1, newf2, newf4, newf3;
set count = count - 1;
END while;
close cur1;
fetch cur1 into newf1, newf2, newf4, newf3;
END;
END//
CALL sp1();
ERROR 24000: Cursor is not open
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.67:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare done int default 0;
declare count integer default 20;
declare newf1 char(20);
declare newf2 char(20);
declare newf3 char(20);
declare newf4 integer;
declare cur1 cursor for SELECT f1, f2, f4, f5 from t2 limit 20, 10;
declare continue handler for sqlstate '02000' set done = 1;
BEGIN
open cur1;
#      set count = count - 1;
#      while count > 0 do
fetch cur1 into newf1, newf2, newf4, newf3;
#        set count = count - 1;
#      END while;
END;
fetch cur1 into newf1, newf2, newf4, newf3;
END//
CALL sp1();
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.2.70:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
create table temp1( f1 char(20), f2 char(20), f3 int, f4 char(20) );
create table temp2( f1 char(20), f2 char(20), f3 int, f4 char(20) );
DROP PROCEDURE IF EXISTS sp1;
Warnings:
Note	1305	PROCEDURE db_storedproc.sp1 does not exist
CREATE PROCEDURE sp1( )
BEGIN
declare done int default 0;
declare count integer default 20;
declare newf1 char(20);
declare newf2 char(20);
declare newf3 char(20);
declare newf4 integer;
declare newf21 char(20);
declare newf22 char(20);
declare newf23 char(20);
declare newf24 integer;
declare cur1 cursor for SELECT f1, f2, f4, f5 from t2 limit 7, 1;
declare cur2 cursor for SELECT f1, f2, f4, f5 from t2 limit 15, 1;
declare continue handler for sqlstate '02000' set done = 1;
open cur1;
BEGIN
set count = 10;
BEGIN
open cur2;
while count > 0 do
fetch cur1 into newf1, newf2, newf4, newf3;
set count = count - 1;
END while;
END;
insert into temp1 values(newf1, newf2, newf4, newf3);
close cur1;
END;
BEGIN
set count = 10;
while count > 0 do
fetch cur2 into newf21, newf22, newf24, newf23;
set count = count - 1;
END while;
END;
insert into temp2 values(newf21, newf22, newf24, newf23);
close cur2;
END//
CALL sp1();
SELECT count(*) from temp1;
count(*)
1
SELECT * from temp2;
f1	f2	f3	f4
NULL	NULL	NULL	NULL
DROP PROCEDURE sp1;
drop table temp1;
drop table temp2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Section 3.1.3 - Syntax checks for the stored procedure-specific flow control statements
.               IF, CASE, LOOP, LEAVE, ITERATE, REPEAT, WHILE:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
USE db_storedproc;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.1:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
DROP TABLE IF EXISTS res_t3_itisalongname_1381742_itsaverylongname_1381742;
CREATE TABLE res_t3_itisalongname_1381742_itsaverylongname_1381742(
middleinitial CHAR, lastname VARCHAR(50),
age_averylongfieldname_averylongname_1234569 INT, COMMENT VARCHAR(100))
ENGINE=<engine_to_be_tested>;
INSERT INTO res_t3_itisalongname_1381742_itsaverylongname_1381742
VALUES('a', 'aaaaaaaaaabbbbbbbbc', 0, 'default');
CREATE PROCEDURE sp1(a INT)
BEGIN
DECLARE itisjustaverylargevariablename_xxxxxxxxxxxxxxxxxxxxx CHAR;
DECLARE itisjustaverylargevarcharvariablename_xxxxxxxxxxxxxxxxxxxxx VARCHAR(100);
DECLARE itisjustamediumsizeintintegervariablename INTEGER;
SET itisjustaverylargevariablename_xxxxxxxxxxxxxxxxxxxxx = 'b';
SET itisjustaverylargevarcharvariablename_xxxxxxxxxxxxxxxxxxxxx
= 'oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%';
SET itisjustamediumsizeintintegervariablename = 5;
SET @comment='a';
label1: LOOP
IF a > 100 THEN
SET @comment = 'value of a is greater than 100';
ELSEIF a < 100 THEN
IF a < 50 THEN
SET @comment = 'value of a is less than 50';
ELSEIF a < 25 THEN
SET @comment = 'value of a is less than 25';
ELSE
SET @comment = 'value of a is greater than 50 and less than 100';
END IF;
ELSE
SET @comment = 'value of a is 100';
END IF;
IF itisjustamediumsizeintintegervariablename = 0 THEN LEAVE label1;
END IF;
INSERT INTO res_t3_itisalongname_1381742_itsaverylongname_1381742
VALUES(itisjustaverylargevariablename_xxxxxxxxxxxxxxxxxxxxx,
CONCAT(itisjustaverylargevarcharvariablename_xxxxxxxxxxxxxxxxxxxxx,
'  ', a), a, @comment);
SET itisjustamediumsizeintintegervariablename
= itisjustamediumsizeintintegervariablename - 1;
ITERATE label1;
END LOOP label1;
END//
CALL sp1(101);
CALL sp1(100);
CALL sp1(75);
CALL sp1(40);
CALL sp1(20);
CALL sp1(-1);
SELECT * from res_t3_itisalongname_1381742_itsaverylongname_1381742
ORDER BY middleinitial, lastname, age_averylongfieldname_averylongname_1234569;
middleinitial	lastname	age_averylongfieldname_averylongname_1234569	COMMENT
a	aaaaaaaaaabbbbbbbbc	0	default
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  -1	-1	value of a is less than 50
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  -1	-1	value of a is less than 50
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  -1	-1	value of a is less than 50
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  -1	-1	value of a is less than 50
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  -1	-1	value of a is less than 50
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  100	100	value of a is 100
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  100	100	value of a is 100
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  100	100	value of a is 100
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  100	100	value of a is 100
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  100	100	value of a is 100
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  101	101	value of a is greater than 100
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  101	101	value of a is greater than 100
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  101	101	value of a is greater than 100
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  101	101	value of a is greater than 100
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  101	101	value of a is greater than 100
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  20	20	value of a is less than 50
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  20	20	value of a is less than 50
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  20	20	value of a is less than 50
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  20	20	value of a is less than 50
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  20	20	value of a is less than 50
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  40	40	value of a is less than 50
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  40	40	value of a is less than 50
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  40	40	value of a is less than 50
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  40	40	value of a is less than 50
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  40	40	value of a is less than 50
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  75	75	value of a is greater than 50 and less than 100
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  75	75	value of a is greater than 50 and less than 100
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  75	75	value of a is greater than 50 and less than 100
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  75	75	value of a is greater than 50 and less than 100
b	oldmacdonalds)(*&(^^%$&^%$&^%*^)(*^#@$@%  75	75	value of a is greater than 50 and less than 100
drop table res_t3_itisalongname_1381742_itsaverylongname_1381742;
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.2:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp2;
CREATE PROCEDURE sp2( action char(20) )
BEGIN
declare v1 char(20);
declare v2 char(20);
declare count integer;
set v1 = 'f1';
set v2 = 'address';
set count = 1;
case when action = 'delete'  then
insert into t3 values(v1, v2, count);
delete from t3 where f1=v1;
when action = 'insert' then
repeat
insert into t3 values(v1, v2, count);
set count = count + 1;
until count > 5
END repeat;
set count = 1;
label1: repeat
insert into t3 values(v1, v2, count);
if count > 5 then leave label1;
END if;
set count = count + 1;
until count > 5
END repeat;
set count = 1;
while count < 5 do
insert into t3 values(v1, v2, count);
set count = count + 1;
END while;
set count = 1;
label1: while count < 5 do
insert into t3 values(v1, v2, count);
if count > 5 then leave label1;
END if;
set count = count + 1;
END while;
else
set @dummystring = 'temp value';
END case;
END//
CALL sp2( 'insert' );
SELECT * from t3 where f3 <=5 && f3 >= 0;
f1	f2	f3
Warning	1287	'&&' is deprecated and will be removed in a future release. Please use AND instead
Warnings:
f1	address	1
f1	address	1
f1	address	1
f1	address	1
f1	address	2
f1	address	2
f1	address	2
f1	address	2
f1	address	3
f1	address	3
f1	address	3
f1	address	3
f1	address	4
f1	address	4
f1	address	4
f1	address	4
f1	address	5
f1	address	5
SELECT count(*) from t3;
count(*)
28
CALL sp2( 'delete' );
SELECT count(*) from t3;
count(*)
10
CALL sp2 ('test');
SELECT @dummystring;
@dummystring
temp value
DROP PROCEDURE sp2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.1.2:
---------------
Ensure that all sub-clauses that should not be supported are disallowed with
an appropriate error message. (case)
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
drop table IF EXISTS res_t3_itisalongname_1381742_itsaverylongname_1381742;
DROP PROCEDURE IF EXISTS sp3;
create table res_t3_itisalongname_1381742_itsaverylongname_1381742 (name char, address varchar(50), age_averylongfieldname_averylongname_1234569 smallint);
CREATE PROCEDURE sp3( action char(20) )
BEGIN
label1: case
when action = 'delete'  then
delete from res_t3_itisalongname_1381742_itsaverylongname_1381742;
else
set @dummystring = 'temp value';
iterate label1;
END case label1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'case
when action = 'delete'  then
delete from res_t3_itisalongname_1381742_itsav' at line 3
DROP PROCEDURE IF EXISTS sp3;
CREATE PROCEDURE sp3( action char(20) )
BEGIN
label1: BEGIN
case
action = 'delete'  then
delete from res_t3_itisalongname_1381742_itsaverylongname_1381742;
else
set @dummystring = 'temp value';
iterate label1;
END case;
END label1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'then
delete from res_t3_itisalongname_1381742_itsaverylongname_1381742;
else
set' at line 5
DROP PROCEDURE IF EXISTS sp3;
CREATE PROCEDURE sp3( action char(20) )
BEGIN
case
when action = 'delete'  then
delete from res_t3_itisalongname_1381742_itsaverylongname_1381742;
then action = 'truncate'  when
truncate from res_t3_itisalongname_1381742_itsaverylongname_1381742;
else
set @dummystring = 'temp value';
iterate label1;
END case;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'then action = 'truncate'  when
truncate from res_t3_itisalongname_1381742_itsave' at line 6
DROP PROCEDURE IF EXISTS sp3;
CREATE PROCEDURE sp3( action char(20) )
BEGIN
declare v1 char(20);
declare v2 char(20);
declare count integer;
set v1 = 'f1';
set v2= 'address';
set count = 1;
case action
when 'delete'  then
when 'delete'  then
delete from res_t3_itisalongname_1381742_itsaverylongname_1381742;
END case;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'when 'delete'  then
delete from res_t3_itisalongname_1381742_itsaverylongname_13' at line 11
DROP PROCEDURE IF EXISTS sp3;
CREATE PROCEDURE sp3( action char(20) )
BEGIN
declare count int default 1;
declare done int default 0;
declare continue handler for sqlstate 'HY000' set done=1;
label1: loop
case
when action = 'delete'  then
label3:BEGIN
delete from res_t3_itisalongname_1381742_itsaverylongname_1381742;
END label3;
when action = 'insert' then
label2: while count < 10 do
BEGIN
insert into res_t3_itisalongname_1381742_itsaverylongname_1381742
values('xxxxxxxxxxxxxxxxxxx', '1231230981(*&(*&)(*&(', count);
GET DIAGNOSTICS @n = NUMBER;
GET DIAGNOSTICS CONDITION @n @err_no = MYSQL_ERRNO, @err_txt = MESSAGE_TEXT;
set count = count + 1;
if count= 10 then
set done=1;
END if;
END;
END while label2;
else
set @dummystring = 'temp value';
iterate label1;
END case;
if done=1 then
leave label1;
END if;
END loop label1;
SELECT count, done;
SELECT @err_no, @err_txt;
END//
CALL sp3('insert');
count	done
10	1
@err_no	@err_txt
1265	Data truncated for column 'name' at row 1
DROP PROCEDURE sp3;
drop table res_t3_itisalongname_1381742_itsaverylongname_1381742;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.4:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp4;
CREATE PROCEDURE sp4()
BEGIN
declare count int;
set count = 1;
label1: loop
if count > 10 then leave label1;
else
set count = count + 1;
elseif count > 20 then
leave label1;
END if;
iterate label1;
END loop label1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'elseif count > 20 then
leave label1;
END if;
iterate label1;
END loop label1;
EN' at line 9
DROP PROCEDURE IF EXISTS sp4;
CREATE PROCEDURE sp4()
BEGIN
declare count int;
set count = 1;
label1: loop
else
set count = count + 1;
if count > 20 then
leave label1;
END if;
iterate label1;
END loop label1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'else
set count = count + 1;
if count > 20 then
leave label1;
END if;
iterate lab' at line 6
DROP PROCEDURE IF EXISTS sp4;
CREATE PROCEDURE sp4()
BEGIN
declare count int;
set count = 1;
label1: loop
elseif count > 20 then
leave label1;
else
set count=count+1;
END if;
iterate label1;
END loop label1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'elseif count > 20 then
leave label1;
else
set count=count+1;
END if;
iterate lab' at line 6
DROP PROCEDURE IF EXISTS sp4;
CREATE PROCEDURE sp4()
BEGIN
declare count int;
set count = 1;
label1: loop
END if;
if count > 20 then
leave label1;
else
set count=count+1;
iterate label1;
END loop label1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END if;
if count > 20 then
leave label1;
else
set count=count+1;
iterate label1;' at line 6
DROP PROCEDURE IF EXISTS sp4;
CREATE PROCEDURE sp4()
BEGIN
declare i int default 10;
if i > 20 then
set i=25;
END if
declare count int;
set count = 1;
label1: loop
if count > 20 then
leave label1;
else
set count=count+1;
iterate label1;
END loop label1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'declare count int;
set count = 1;
label1: loop
if count > 20 then
leave label1;
' at line 7
DROP PROCEDURE IF EXISTS sp4;
CREATE PROCEDURE sp4()
BEGIN
declare idummy int default 10;
declare count int;
set count = 1;
label1: loop
BEGIN
if count < 20 then
BEGIN
declare idummy2 int default 10;
set count=count+1;
END;
else
BEGIN
SELECT idummy2;
leave label1;
END;
END if;
iterate label1;
END;
END loop label1;
END//
CALL sp4();
ERROR 42S22: Unknown column 'idummy2' in 'field list'
DROP PROCEDURE sp4;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.5:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp5;
CREATE PROCEDURE sp5()
BEGIN
declare count integer default 1;
set count = 1;
case
else
set count = 10;
when count  = 1 then
set count =  count + 1;
END case;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'else
set count = 10;
when count  = 1 then
set count =  count + 1;
END case;
END' at line 6
DROP PROCEDURE IF EXISTS sp5;
CREATE PROCEDURE sp5(count int)
BEGIN
when case count = 1 then
set count = 10;
when count  = 2 then
set count =  count + 1;
END case;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'when case count = 1 then
set count = 10;
when count  = 2 then
set count =  count' at line 3
DROP PROCEDURE IF EXISTS sp5;
CREATE PROCEDURE sp5(count int)
BEGIN
END case;
when count = 1 then
set count = 10;
when count  = 2 then
set count =  count + 1;
END case;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'case;
when count = 1 then
set count = 10;
when count  = 2 then
set count =  coun' at line 3
DROP PROCEDURE IF EXISTS sp5;
CREATE PROCEDURE sp5(count int)
BEGIN
when count = 1 then
set count = 10;
case when count  = 2 then
set count =  count + 1;
END case;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'when count = 1 then
set count = 10;
case when count  = 2 then
set count =  count' at line 3
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.6:
---------------
Ensure that all supported sub-clauses are supported only in the correct order (repeat).
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6()
BEGIN
declare count1 integer default 1;
label1: repeat
set count1 = count1 + 1;
if count1 > 5 then leave label1; END if;
END repeat;
until count1 > 5
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END repeat;
until count1 > 5
END' at line 7
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6()
BEGIN
declare count1 integer default 1;
label1:   until count1 > 5
repeat
set count1 = count1 + 1;
if count1 > 5 then leave label1; END if;
END repeat;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'until count1 > 5
repeat
set count1 = count1 + 1;
if count1 > 5 then leave label1' at line 4
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6()
BEGIN
declare count1 integer default 1;
label1: END repeat
set count1 = count1 + 1;
if count1 > 5 then leave label1; END if;
until count1 > 5
repeat;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END repeat
set count1 = count1 + 1;
if count1 > 5 then leave label1; END if;
unt' at line 4
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6()
BEGIN
declare count1 integer default 1;
label1: repeat
set count1 = count1 + 1;
if count1 > 5 then leave label1; END if;
END repeat;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END repeat;
END' at line 7
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6()
BEGIN
declare count1 integer default 1;
label1: repeat
set count1 = count1 + 1;
if count1 > 5 then leave label1; END if;
until count1 > 10;
SELECT count1;
END repeat;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ';
SELECT count1;
END repeat;
END' at line 7
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6()
BEGIN
declare count1 integer default 1;
label1: repeat
set count1 = count1-1;
until count1 < 0
END repeat label1;
SELECT count1;
END//
CALL sp6();
count1
-1
DROP PROCEDURE sp6;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.7:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp7;
CREATE PROCEDURE sp7()
BEGIN
label1: loop
set @dummystring = 'temp value';
if count > 10 then leave label1;
END if;
label1 iterate;
END label1 loop;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'iterate;
END label1 loop;
END' at line 7
DROP PROCEDURE IF EXISTS sp7;
CREATE PROCEDURE sp7()
BEGIN
label1: END loop;
set @dummystring = 'temp value';
if count > 10 then leave label1;
END if;
iterate label1;
loop;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'END loop;
set @dummystring = 'temp value';
if count > 10 then leave label1;
END ' at line 3
DROP PROCEDURE IF EXISTS sp7;
CREATE PROCEDURE sp7()
BEGIN
label1: iterate label1;
loop
set @dummystring = 'temp value';
if count > 10 then leave label1;
END if;
END loop label1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'iterate label1;
loop
set @dummystring = 'temp value';
if count > 10 then leave l' at line 3
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.8:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp8;
CREATE PROCEDURE sp8()
BEGIN
declare v1 int default 5;
do while v1 > 0
set v1 = v1 - 1;
END while;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'while v1 > 0
set v1 = v1 - 1;
END while;
END' at line 4
DROP PROCEDURE IF EXISTS sp8;
CREATE PROCEDURE sp8()
BEGIN
declare v1 int default 5;
do v1 > 0 while
set v1 = v1 - 1;
END while;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'while
set v1 = v1 - 1;
END while;
END' at line 4
DROP PROCEDURE IF EXISTS sp8;
CREATE PROCEDURE sp8()
BEGIN
declare v1 int default 5;
END while;
set v1 = v1 - 1;
while v1 > 0 do;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'while;
set v1 = v1 - 1;
while v1 > 0 do;
END' at line 4
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.12:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
drop table IF EXISTS res_t3_itisalongname_1381742_itsaverylongname_1381742;
DROP PROCEDURE IF EXISTS sp12;
create table res_t3_itisalongname_1381742_itsaverylongname_1381742( f1 char(20), f2 varchar(20), f3 smallint);
CREATE PROCEDURE sp12( )
BEGIN
declare count1 integer default 1;
declare count2 int;
label1: loop
if count1 > 2 then leave label1;
END if;
insert into res_t3_itisalongname_1381742_itsaverylongname_1381742 values( 'xyz' , 'pqr', count1);
label2: loop
if count2 > 2 then leave label2;
END if;
set count2 = count2 + 1;
END loop label1;
set count1 = count1 + 1;
iterate label1;
END loop label2;
END//
ERROR 42000: End-label label1 without match
drop table res_t3_itisalongname_1381742_itsaverylongname_1381742;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.13:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
drop table IF EXISTS res_t3_itisalongname_1381742_itsaverylongname_1381742;
DROP PROCEDURE IF EXISTS sp13;
create table res_t3_itisalongname_1381742_itsaverylongname_1381742( f1 char(20), f2 varchar(20), f3 smallint);
CREATE PROCEDURE sp13( )
BEGIN
declare count1 integer default 1;
lable1: loop
if count1 > 2 then leave lable1;
END if;
insert into res_t3_itisalongname_1381742_itsaverylongname_1381742 values( 'xyz' , 'pqr', count1);
set count1 = count1 + 1;
iterate lable1;
END loop;
END//
CALL sp13();
SELECT * from res_t3_itisalongname_1381742_itsaverylongname_1381742;
f1	f2	f3
xyz	pqr	1
xyz	pqr	2
DROP PROCEDURE sp13;
drop table res_t3_itisalongname_1381742_itsaverylongname_1381742;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.14:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
drop table IF EXISTS res_t3_itisalongname_1381742_itsaverylongname_1381742;
DROP PROCEDURE IF EXISTS sp14;
create table res_t3_itisalongname_1381742_itsaverylongname_1381742( f1 char(20), f2 varchar(20), f3 smallint);
CREATE PROCEDURE sp14( )
BEGIN
declare count1 integer default 1;
loop
if count1 > 2 then leave lable1;
END if;
insert into res_t3_itisalongname_1381742_itsaverylongname_1381742 values( 'xyz' , 'pqr', count1);
set count1 = count1 + 1;
iterate lable1;
END loop label1;
END//
ERROR 42000: LEAVE with no matching label: lable1
drop table res_t3_itisalongname_1381742_itsaverylongname_1381742;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.15:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
drop table IF EXISTS res_t3_itisalongname_1381742_itsaverylongname_1381742;
DROP PROCEDURE IF EXISTS sp15;
create table res_t3_itisalongname_1381742_itsaverylongname_1381742( f1 char(20), f2 varchar(20), f3 smallint);
CREATE PROCEDURE sp15( )
BEGIN
declare count1 integer default 1;
label1 loop
if count1 > 2 then leave lable1;
END if;
insert into res_t3_itisalongname_1381742_itsaverylongname_1381742 values( 'xyz' , 'pqr', count1);
set count1 = count1 + 1;
iterate lable1;
END loop label1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'loop
if count1 > 2 then leave lable1;
END if;
insert into res_t3_itisalongname_1' at line 4
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.16:
----------------
Ensure that every beginning label with the same scope must be unique.
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp16;
delete from res_t3_itisalongname_1381742_itsaverylongname_1381742;
CREATE PROCEDURE sp16( )
BEGIN
declare count1 integer default 1;
declare count2 integer default 1;
label1: repeat
set count1 = count1 + 1;
set count2 = 1;
label1: repeat
set count2 = count2 + 1;
insert into res_t3_itisalongname_1381742_itsaverylongname_1381742 values( xyz , pqr, count1);
until count2 > 3
END repeat label1;
until count1 > 3
END repeat label1;
END//
ERROR 42000: Redefining label label1
DROP PROCEDURE IF EXISTS sp16;
CREATE PROCEDURE sp16( )
BEGIN
declare count1 integer default 1;
declare count2 integer default 1;
declare count3 integer default 1;
label1: repeat
set count1 = count1 + 1;
label1: repeat
set count2 = count2 + 1;
SELECT count2;
until count2 > 3
END repeat label1;
SELECT count1;
until count1 > 3
END repeat label1;
label1: repeat
set count3 = count3 + 1;
SELECT count3;
until count3 > 3
END repeat label1;
END//
ERROR 42000: Redefining label label1
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.17:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.18:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp18;
delete from res_t3_itisalongname_1381742_itsaverylongname_1381742;
CREATE PROCEDURE sp18( )
BEGIN
declare count1 integer default 1;
label1: repeat
set count1 = count1 + 1;
insert into res_t3_itisalongname_1381742_itsaverylongname_1381742 values( 'xyz' , 'pqr', count1);
until count1 < 3
END repeat label2;
END//
ERROR 42000: End-label label2 without match
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.19:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
delete from res_t3_itisalongname_1381742_itsaverylongname_1381742;
DROP PROCEDURE IF EXISTS sp19;
CREATE PROCEDURE sp19( )
BEGIN
declare count1 integer default 1;
label1: repeat
set count1 = count1 + 1;
insert into res_t3_itisalongname_1381742_itsaverylongname_1381742 values( 'xyz' , 'pqr', count1);
until count1 < 3
END repeat;
END//
CALL sp19();
SELECT * from res_t3_itisalongname_1381742_itsaverylongname_1381742;
f1	f2	f3
xyz	pqr	2
DROP PROCEDURE sp19;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.20:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
delete from res_t3_itisalongname_1381742_itsaverylongname_1381742;
DROP PROCEDURE IF EXISTS sp20;
CREATE PROCEDURE sp20( )
BEGIN
declare count1 integer default 1;
repeat
set count1 = count1 + 1;
insert into res_t3_itisalongname_1381742_itsaverylongname_1381742 values( 'xyz' , 'pqr', count1);
until count1 < 3
END repeat label1;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'label1;
END' at line 8
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.21:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.22:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
delete from res_t3_itisalongname_1381742_itsaverylongname_1381742;
DROP PROCEDURE IF EXISTS sp22;
CREATE PROCEDURE sp22( )
BEGIN
declare count1 integer default 1;
declare count2 integer default 1;
while count1 < 3 do
set count1 = count1 + 1;
set count2 = 1;
label1: while count2 < 3 do
set count2 = count2 + 1;
insert into res_t3_itisalongname_1381742_itsaverylongname_1381742 values( 'xyz' , 'pqr', count1);
END while label2;
END while;
END//
ERROR 42000: End-label label2 without match
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.23:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
delete from res_t3_itisalongname_1381742_itsaverylongname_1381742;
DROP PROCEDURE IF EXISTS sp23;
CREATE PROCEDURE sp23( )
BEGIN
declare count1 integer default 1;
declare count2 integer default 1;
while count1 < 3 do
set count1 = count1 + 1;
set count2 = 1;
while count2 < 3 do
set count2 = count2 + 1;
insert into res_t3_itisalongname_1381742_itsaverylongname_1381742 values( 'xyz' , 'pqr', count1);
END while label1;
END while;
END//
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'label1;
END while;
END' at line 11
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.3.25:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
delete from res_t3_itisalongname_1381742_itsaverylongname_1381742;
DROP PROCEDURE IF EXISTS sp25;
CREATE PROCEDURE sp25( )
BEGIN
declare count1 integer default 1;
declare count2 integer default 1;
while count1 < 3 do
set count1 = count1 + 1;
set count2 = 1;
label1: while count2 < 3 do
set count2 = count2 + 1;
insert into res_t3_itisalongname_1381742_itsaverylongname_1381742 values( 'xyz' , 'pqr', count1);
END while;
END while;
END//
CALL sp25 ();
SELECT * from res_t3_itisalongname_1381742_itsaverylongname_1381742;
f1	f2	f3
xyz	pqr	2
xyz	pqr	2
xyz	pqr	3
xyz	pqr	3
DROP PROCEDURE sp25;
drop table res_t3_itisalongname_1381742_itsaverylongname_1381742;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Section 3.1.4 - Checks for the global nature of stored procedures:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
USE db_storedproc;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.4.1:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
DROP DATABASE IF EXISTS d40401;
CREATE PROCEDURE sp1 ( n char(20) )
BEGIN
SELECT n;
END//
CREATE DATABASE d40401;
USE d40401;
CALL db_storedproc.sp1('abcd');
n
abcd
USE db_storedproc;
DROP PROCEDURE sp1;
DROP DATABASE d40401;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.4.2:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP FUNCTION IF EXISTS fn1;
DROP FUNCTION IF EXISTS fn11;
DROP DATABASE IF EXISTS d40402;
CREATE FUNCTION fn1(n int) returns int
BEGIN
declare a int;
set a = 9 * n;
return a;
END//
CREATE DATABASE d40402;
USE d40402;
SELECT db_storedproc.fn1(100);
db_storedproc.fn1(100)
900
SELECT db_storedproc.fn1(1000);
db_storedproc.fn1(1000)
9000
CREATE FUNCTION db_storedproc.fn11(n int) returns int
BEGIN
declare a int;
set a = 9 * n;
return a;
END//
SELECT db_storedproc.fn11(100);
db_storedproc.fn11(100)
900
SELECT db_storedproc.fn11(1000);
db_storedproc.fn11(1000)
9000
USE db_storedproc;
DROP FUNCTION fn1;
DROP FUNCTION fn11;
DROP DATABASE d40402;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.4.3:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP DATABASE IF EXISTS d1;
DROP DATABASE IF EXISTS d2;
CREATE DATABASE d1;
CREATE DATABASE d2;
USE d1;
create table res_t41(a char(5), b char(10));
insert into res_t41 values('abcde', 'a!@#$%^&*(');
USE d2;
create table res_t42(a char(5), b char(10));
USE d1;
CREATE PROCEDURE sp2(n char (20))
BEGIN
SELECT res_t41.a, res_t41.b into @a, @b from res_t41 where res_t41.b = n;
insert into d2.res_t42 values (@a, @b);
END//
USE d2;
CALL d1.sp2('a!@#$%^&*(');
show warnings;
Level	Code	Message
SELECT * from d1.res_t41;
a	b
abcde	a!@#$%^&*(
SELECT * from res_t42;
a	b
abcde	a!@#$%^&*(
USE db_storedproc;
DROP DATABASE d1;
DROP DATABASE d2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.4.4:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
CREATE DATABASE d1;
USE d1;
CREATE PROCEDURE sp3()
BEGIN
USE d1;
END//
ERROR 0A000: USE is not allowed in stored procedures
USE db_storedproc;
DROP DATABASE d1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.4.5:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
CREATE DATABASE d1;
USE d1;
create table t43(a char(5), b char(10));
insert into t43 values('abcde', 'a!@#$%^&*(');
CREATE PROCEDURE d1.sp4()
SELECT * from d1.t43;
SELECT * from information_schema.routines where specific_name = 'sp4';
SPECIFIC_NAME	ROUTINE_CATALOG	ROUTINE_SCHEMA	ROUTINE_NAME	ROUTINE_TYPE	DATA_TYPE	CHARACTER_MAXIMUM_LENGTH	CHARACTER_OCTET_LENGTH	NUMERIC_PRECISION	NUMERIC_SCALE	DATETIME_PRECISION	CHARACTER_SET_NAME	COLLATION_NAME	DTD_IDENTIFIER	ROUTINE_BODY	ROUTINE_DEFINITION	EXTERNAL_NAME	EXTERNAL_LANGUAGE	PARAMETER_STYLE	IS_DETERMINISTIC	SQL_DATA_ACCESS	SQL_PATH	SECURITY_TYPE	CREATED	LAST_ALTERED	SQL_MODE	ROUTINE_COMMENT	DEFINER	CHARACTER_SET_CLIENT	COLLATION_CONNECTION	DATABASE_COLLATION
sp4	def	d1	sp4	PROCEDURE		NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL	SQL	SELECT * from d1.t43	NULL	SQL	SQL	NO	CONTAINS SQL	NULL	DEFINER	modified	created	NO_ENGINE_SUBSTITUTION		root@localhost	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
USE db_storedproc;
DROP DATABASE d1;
CREATE DATABASE d1;
USE d1;
create table t44(a char(5), b char(10));
SELECT * from information_schema.routines where specific_name = 'sp4';
SPECIFIC_NAME	ROUTINE_CATALOG	ROUTINE_SCHEMA	ROUTINE_NAME	ROUTINE_TYPE	DATA_TYPE	CHARACTER_MAXIMUM_LENGTH	CHARACTER_OCTET_LENGTH	NUMERIC_PRECISION	NUMERIC_SCALE	DATETIME_PRECISION	CHARACTER_SET_NAME	COLLATION_NAME	DTD_IDENTIFIER	ROUTINE_BODY	ROUTINE_DEFINITION	EXTERNAL_NAME	EXTERNAL_LANGUAGE	PARAMETER_STYLE	IS_DETERMINISTIC	SQL_DATA_ACCESS	SQL_PATH	SECURITY_TYPE	CREATED	LAST_ALTERED	SQL_MODE	ROUTINE_COMMENT	DEFINER	CHARACTER_SET_CLIENT	COLLATION_CONNECTION	DATABASE_COLLATION
USE db_storedproc;
DROP DATABASE d1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.4.6:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
USE db_storedproc;
DROP PROCEDURE IF EXISTS sp5;
CREATE PROCEDURE sp5()
SELECT * from db_storedproc.t4 limit 0, 10;
SELECT routine_schema from information_schema.routines where specific_name = 'sp5';
ROUTINE_SCHEMA
db_storedproc
DROP PROCEDURE sp5;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.4.7:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
USE db_storedproc;
drop table IF EXISTS t46;
DROP PROCEDURE IF EXISTS sp6;
create table t46(f1 char(20), f2 char(20));
insert into t46 values ('abcd', 'wxyz');
CREATE PROCEDURE db_storedproc.sp6()
SELECT * from db_storedproc.t4 limit 0, 10;
SELECT routine_schema from information_schema.routines where specific_name = 'sp6';
ROUTINE_SCHEMA
db_storedproc
drop table t46;
DROP PROCEDURE sp6;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.4.8:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP DATABASE IF EXISTS d1;
DROP DATABASE IF EXISTS d2;
CREATE DATABASE d1;
CREATE DATABASE d2;
USE d1;
CREATE PROCEDURE sp8 ( n char(20) ) sql security DEFINER comment 'initial'
  SELECT * from t1 where t1.f1 = n;
USE d2;
alter procedure d1.sp8 sql security DEFINER comment 'updated';
SELECT * from information_schema.routines where specific_name = 'sp8' and routine_schema = 'd1';
SPECIFIC_NAME	ROUTINE_CATALOG	ROUTINE_SCHEMA	ROUTINE_NAME	ROUTINE_TYPE	DATA_TYPE	CHARACTER_MAXIMUM_LENGTH	CHARACTER_OCTET_LENGTH	NUMERIC_PRECISION	NUMERIC_SCALE	DATETIME_PRECISION	CHARACTER_SET_NAME	COLLATION_NAME	DTD_IDENTIFIER	ROUTINE_BODY	ROUTINE_DEFINITION	EXTERNAL_NAME	EXTERNAL_LANGUAGE	PARAMETER_STYLE	IS_DETERMINISTIC	SQL_DATA_ACCESS	SQL_PATH	SECURITY_TYPE	CREATED	LAST_ALTERED	SQL_MODE	ROUTINE_COMMENT	DEFINER	CHARACTER_SET_CLIENT	COLLATION_CONNECTION	DATABASE_COLLATION
sp8	def	d1	sp8	PROCEDURE		NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL	SQL	SELECT * from t1 where t1.f1 = n	NULL	SQL	SQL	NO	CONTAINS SQL	NULL	DEFINER	modified	created	NO_ENGINE_SUBSTITUTION	updated	root@localhost	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.4.9:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
USE d1;
DROP FUNCTION IF EXISTS fn1;
DROP FUNCTION IF EXISTS fn11;
CREATE FUNCTION d1.fn2(n int) returns int sql security invoker comment 'initial'
BEGIN
declare a int;
set a = 0.9 * n;
return a;
END//
USE d2;
alter function d1.fn2 sql security DEFINER comment 'updated';
SELECT * from information_schema.routines where specific_name = 'fn2' and routine_schema = 'd1';
SPECIFIC_NAME	ROUTINE_CATALOG	ROUTINE_SCHEMA	ROUTINE_NAME	ROUTINE_TYPE	DATA_TYPE	CHARACTER_MAXIMUM_LENGTH	CHARACTER_OCTET_LENGTH	NUMERIC_PRECISION	NUMERIC_SCALE	DATETIME_PRECISION	CHARACTER_SET_NAME	COLLATION_NAME	DTD_IDENTIFIER	ROUTINE_BODY	ROUTINE_DEFINITION	EXTERNAL_NAME	EXTERNAL_LANGUAGE	PARAMETER_STYLE	IS_DETERMINISTIC	SQL_DATA_ACCESS	SQL_PATH	SECURITY_TYPE	CREATED	LAST_ALTERED	SQL_MODE	ROUTINE_COMMENT	DEFINER	CHARACTER_SET_CLIENT	COLLATION_CONNECTION	DATABASE_COLLATION
fn2	def	d1	fn2	FUNCTION	int	NULL	NULL	10	0	NULL	NULL	NULL	int	SQL	BEGIN
declare a int;
set a = 0.9 * n;
return a;
END	NULL	SQL	SQL	NO	CONTAINS SQL	NULL	DEFINER	modified	created	NO_ENGINE_SUBSTITUTION	updated	root@localhost	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.4.10:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
USE d1;
CREATE PROCEDURE sp9 ( n char(20) )
SELECT * from t1 where t1.f1 = n;
USE d2;
DROP PROCEDURE d1.sp9;
SELECT * from information_schema.routines where specific_name = 'sp9' and routine_schema = 'd1';
SPECIFIC_NAME	ROUTINE_CATALOG	ROUTINE_SCHEMA	ROUTINE_NAME	ROUTINE_TYPE	DATA_TYPE	CHARACTER_MAXIMUM_LENGTH	CHARACTER_OCTET_LENGTH	NUMERIC_PRECISION	NUMERIC_SCALE	DATETIME_PRECISION	CHARACTER_SET_NAME	COLLATION_NAME	DTD_IDENTIFIER	ROUTINE_BODY	ROUTINE_DEFINITION	EXTERNAL_NAME	EXTERNAL_LANGUAGE	PARAMETER_STYLE	IS_DETERMINISTIC	SQL_DATA_ACCESS	SQL_PATH	SECURITY_TYPE	CREATED	LAST_ALTERED	SQL_MODE	ROUTINE_COMMENT	DEFINER	CHARACTER_SET_CLIENT	COLLATION_CONNECTION	DATABASE_COLLATION
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.4.11:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
USE d1;
CREATE FUNCTION d1.fn3(n int) returns int
BEGIN
declare a int;
set a = 0.9 * n;
return a;
END//
USE d2;
DROP FUNCTION d1.fn3;
SELECT * from information_schema.routines where specific_name = 'fn3' and routine_schema = 'd1';
SPECIFIC_NAME	ROUTINE_CATALOG	ROUTINE_SCHEMA	ROUTINE_NAME	ROUTINE_TYPE	DATA_TYPE	CHARACTER_MAXIMUM_LENGTH	CHARACTER_OCTET_LENGTH	NUMERIC_PRECISION	NUMERIC_SCALE	DATETIME_PRECISION	CHARACTER_SET_NAME	COLLATION_NAME	DTD_IDENTIFIER	ROUTINE_BODY	ROUTINE_DEFINITION	EXTERNAL_NAME	EXTERNAL_LANGUAGE	PARAMETER_STYLE	IS_DETERMINISTIC	SQL_DATA_ACCESS	SQL_PATH	SECURITY_TYPE	CREATED	LAST_ALTERED	SQL_MODE	ROUTINE_COMMENT	DEFINER	CHARACTER_SET_CLIENT	COLLATION_CONNECTION	DATABASE_COLLATION
USE db_storedproc;
DROP DATABASE d1;
DROP DATABASE d2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Section 3.1.5 - Parameter use checks:
Functions with all data types
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
CREATE DATABASE d1;
USE d1;
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1( f1 bigint) returns bigint
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn1(-9.22e+18);
fn1(-9.22e+18)
-9220000000000000000
DROP FUNCTION IF EXISTS fn2;
CREATE FUNCTION fn2( f1 bigint unsigned) returns bigint unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn2(1.84e+19);
fn2(1.84e+19)
18400000000000000000
DROP FUNCTION IF EXISTS fn3;
CREATE FUNCTION fn3( f1 bigint unsigned zerofill) returns bigint unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn3(1.84e+17);
fn3(1.84e+17)
184000000000000000
DROP FUNCTION IF EXISTS fn4;
CREATE FUNCTION fn4( f1 bigint zerofill) returns bigint zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn4(-9.22e+15);
ERROR 22003: BIGINT UNSIGNED value is out of range in '(f1@0 - 10)'
DROP FUNCTION IF EXISTS fn5;
CREATE FUNCTION fn5( f1 decimal) returns decimal
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn5(-1.00e+09);
fn5(-1.00e+09)
-1000000000
DROP FUNCTION IF EXISTS fn6;
CREATE FUNCTION fn6( f1 decimal (0)) returns decimal (0)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn6(-1.00e+09);
fn6(-1.00e+09)
-1000000000
DROP FUNCTION IF EXISTS fn7;
CREATE FUNCTION fn7( f1 decimal (0) unsigned) returns decimal (0) unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn7(99999999999);
fn7(99999999999)
9999999999
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP FUNCTION IF EXISTS fn8;
CREATE FUNCTION fn8( f1 decimal (0) unsigned zerofill) returns decimal (0) unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn8(999999999);
fn8(999999999)
1000000000
DROP FUNCTION IF EXISTS fn9;
CREATE FUNCTION fn9( f1 decimal (0) zerofill) returns decimal (0) zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn9(-1.00e+09);
fn9(-1.00e+09)
0000000010
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP FUNCTION IF EXISTS fn10;
CREATE FUNCTION fn10( f1 decimal (0, 0)) returns decimal (0, 0)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn10(-1.00e+09);
fn10(-1.00e+09)
-1000000000
DROP FUNCTION IF EXISTS fn11;
CREATE FUNCTION fn11( f1 decimal (0, 0) unsigned) returns decimal (0, 0) unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn11(99999999999);
fn11(99999999999)
9999999999
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP FUNCTION IF EXISTS fn12;
CREATE FUNCTION fn12( f1 decimal (0, 0) unsigned zerofill) returns decimal (0, 0) unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn12(999999999);
fn12(999999999)
1000000000
DROP FUNCTION IF EXISTS fn13;
CREATE FUNCTION fn13( f1 decimal (0, 0) zerofill) returns decimal (0, 0) zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn13(-1.00e+09);
fn13(-1.00e+09)
0000000010
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP FUNCTION IF EXISTS fn14;
CREATE FUNCTION fn14( f1 decimal (63, 30)) returns decimal (63, 30)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn14(-1.00e+21);
fn14(-1.00e+21)
-1000000000000000000000.000000000000000000000000000000
DROP FUNCTION IF EXISTS fn15;
CREATE FUNCTION fn15( f1 decimal (63, 30) unsigned) returns decimal (63, 30) unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn15(1.00e+16);
fn15(1.00e+16)
10000000000000000.000000000000000000000000000000
DROP FUNCTION IF EXISTS fn16;
CREATE FUNCTION fn16( f1 decimal (63, 30) unsigned zerofill) returns decimal (63, 30) unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn16(1.00e+16);
fn16(1.00e+16)
000000000000000010000000000000000.000000000000000000000000000000
DROP FUNCTION IF EXISTS fn17;
CREATE FUNCTION fn17( f1 decimal (63, 30) zerofill) returns decimal (63, 30) zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn17(-1.00e+21);
fn17(-1.00e+21)
000000000000000000000000000000010.000000000000000000000000000000
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP FUNCTION IF EXISTS fn18_d;
CREATE FUNCTION fn18_d( f1 decimal (64)) returns decimal (64)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn18_d( -1000000000000000000000000000000 );
fn18_d( -1000000000000000000000000000000 )
-1000000000000000000000000000000
DROP FUNCTION IF EXISTS fn19_du;
CREATE FUNCTION fn19_du( f1 decimal (64) unsigned) returns decimal (64) unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn19_du( 100000000000000000000 );
fn19_du( 100000000000000000000 )
100000000000000000000
DROP FUNCTION IF EXISTS fn20_duz;
CREATE FUNCTION fn20_duz( f1 decimal (64) unsigned zerofill) returns decimal (64) unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn20_duz( 1000000000000000000000000 );
fn20_duz( 1000000000000000000000000 )
0000000000000000000000000000000000000001000000000000000000000000
DROP FUNCTION IF EXISTS fn21_d_z;
CREATE FUNCTION fn21_d_z( f1 decimal (64) zerofill) returns decimal (64) zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn21_d_z(1.00e+00);
fn21_d_z(1.00e+00)
0000000000000000000000000000000000000000000000000000000000000010
DROP FUNCTION IF EXISTS fn22;
CREATE FUNCTION fn22( f1 decimal unsigned) returns decimal unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn22(1.00e+00);
fn22(1.00e+00)
10
DROP FUNCTION IF EXISTS fn23;
CREATE FUNCTION fn23( f1 decimal unsigned zerofill) returns decimal unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn23(1.00e+00);
fn23(1.00e+00)
0000000010
DROP FUNCTION IF EXISTS fn24;
CREATE FUNCTION fn24( f1 decimal zerofill) returns decimal zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn24(-1.00e+09);
fn24(-1.00e+09)
0000000010
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP FUNCTION IF EXISTS fn25;
CREATE FUNCTION fn25( f1 double) returns double
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn25(1.00e+00);
fn25(1.00e+00)
1
DROP FUNCTION IF EXISTS fn26;
CREATE FUNCTION fn26( f1 double unsigned) returns double unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn26(1.00e+00);
fn26(1.00e+00)
10
DROP FUNCTION IF EXISTS fn27;
CREATE FUNCTION fn27( f1 double unsigned zerofill) returns double unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn27(1.00e+00);
fn27(1.00e+00)
10
DROP FUNCTION IF EXISTS fn28;
CREATE FUNCTION fn28( f1 double zerofill) returns double zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn28(1.00e+00);
fn28(1.00e+00)
10
DROP FUNCTION IF EXISTS fn29;
CREATE FUNCTION fn29( f1 float) returns float
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn29(1.00e+00);
fn29(1.00e+00)
1
DROP FUNCTION IF EXISTS fn30;
CREATE FUNCTION fn30( f1 float unsigned) returns float unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn30(1.00e+00);
fn30(1.00e+00)
10
DROP FUNCTION IF EXISTS fn31;
CREATE FUNCTION fn31( f1 float unsigned zerofill) returns float unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn31(1.00e+00);
fn31(1.00e+00)
10
DROP FUNCTION IF EXISTS fn32;
CREATE FUNCTION fn32( f1 float zerofill) returns float zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn32(1.00e+00);
fn32(1.00e+00)
10
DROP FUNCTION IF EXISTS fn33;
CREATE FUNCTION fn33( f1 float(0)) returns float(0)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn33(1.00e+00);
fn33(1.00e+00)
1
DROP FUNCTION IF EXISTS fn34;
CREATE FUNCTION fn34( f1 float(0) unsigned) returns float(0) unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn34(1.00e+00);
fn34(1.00e+00)
10
DROP FUNCTION IF EXISTS fn35;
CREATE FUNCTION fn35( f1 float(0) unsigned zerofill) returns float(0) unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn35(1.00e+00);
fn35(1.00e+00)
10
DROP FUNCTION IF EXISTS fn36;
CREATE FUNCTION fn36( f1 float(0) zerofill) returns float(0) zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn36(1.00e+00);
fn36(1.00e+00)
10
DROP FUNCTION IF EXISTS fn37;
CREATE FUNCTION fn37( f1 float(23)) returns float(23)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn37(1.00e+00);
fn37(1.00e+00)
1
DROP FUNCTION IF EXISTS fn38;
CREATE FUNCTION fn38( f1 float(23) unsigned) returns float(23) unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn38(1.00e+00);
fn38(1.00e+00)
10
DROP FUNCTION IF EXISTS fn39;
CREATE FUNCTION fn39( f1 float(23) unsigned zerofill) returns float(23) unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn39(1.00e+00);
fn39(1.00e+00)
10
DROP FUNCTION IF EXISTS fn40;
CREATE FUNCTION fn40( f1 float(23) zerofill) returns float(23) zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn40(1.00e+00);
fn40(1.00e+00)
10
DROP FUNCTION IF EXISTS fn41;
CREATE FUNCTION fn41( f1 float(24)) returns float(24)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn41(1.00e+00);
fn41(1.00e+00)
1
DROP FUNCTION IF EXISTS fn42;
CREATE FUNCTION fn42( f1 float(24) unsigned) returns float(24) unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn42(1.00e+00);
fn42(1.00e+00)
10
DROP FUNCTION IF EXISTS fn43;
CREATE FUNCTION fn43( f1 float(24) unsigned zerofill) returns float(24) unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn43(1.00e+00);
fn43(1.00e+00)
10
DROP FUNCTION IF EXISTS fn44;
CREATE FUNCTION fn44( f1 float(24) zerofill) returns float(24) zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn44(1.00e+00);
fn44(1.00e+00)
10
DROP FUNCTION IF EXISTS fn45;
CREATE FUNCTION fn45( f1 float(53)) returns float(53)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn45(1.00e+00);
fn45(1.00e+00)
1
DROP FUNCTION IF EXISTS fn46;
CREATE FUNCTION fn46( f1 float(53) unsigned) returns float(53) unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn46(1.00e+00);
fn46(1.00e+00)
10
DROP FUNCTION IF EXISTS fn47;
CREATE FUNCTION fn47( f1 float(53) unsigned zerofill) returns float(53) unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn47(1.00e+00);
fn47(1.00e+00)
10
DROP FUNCTION IF EXISTS fn48;
CREATE FUNCTION fn48( f1 float(53) zerofill) returns float(53) zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn48(1.00e+00);
fn48(1.00e+00)
10
DROP FUNCTION IF EXISTS fn49;
CREATE FUNCTION fn49( f1 int) returns int
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn49(-2.15e+09);
fn49(-2.15e+09)
-2147483638
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP FUNCTION IF EXISTS fn50;
CREATE FUNCTION fn50( f1 int unsigned) returns int unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn50(4.29e+09);
fn50(4.29e+09)
4290000000
DROP FUNCTION IF EXISTS fn51;
CREATE FUNCTION fn51( f1 int unsigned zerofill) returns int unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn51(4.29e+09);
fn51(4.29e+09)
4290000000
DROP FUNCTION IF EXISTS fn52;
CREATE FUNCTION fn52( f1 int zerofill) returns int zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn52(2.15e+08);
fn52(2.15e+08)
215000000
DROP FUNCTION IF EXISTS fn53;
CREATE FUNCTION fn53( f1 mediumint) returns mediumint
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn53(-8388600);
fn53(-8388600)
-8388598
DROP FUNCTION IF EXISTS fn54;
CREATE FUNCTION fn54( f1 mediumint unsigned) returns mediumint unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn54(16777201);
fn54(16777201)
16777202
DROP FUNCTION IF EXISTS fn55;
CREATE FUNCTION fn55( f1 mediumint unsigned zerofill) returns mediumint unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn55(16777210);
fn55(16777210)
16777210
DROP FUNCTION IF EXISTS fn56;
CREATE FUNCTION fn56( f1 mediumint zerofill) returns mediumint zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn56(-8388601);
ERROR 22003: BIGINT UNSIGNED value is out of range in '(f1@0 - 10)'
DROP FUNCTION IF EXISTS fn57;
CREATE FUNCTION fn57( f1 numeric) returns numeric
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn57(-999999999);
fn57(-999999999)
-1000000000
DROP FUNCTION IF EXISTS fn58;
CREATE FUNCTION fn58( f1 numeric (0)) returns numeric (0)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn58(-999999999);
fn58(-999999999)
-1000000000
DROP FUNCTION IF EXISTS fn59;
CREATE FUNCTION fn59( f1 numeric (0) unsigned) returns numeric (0) unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn59(9999999999);
fn59(9999999999)
9999999999
DROP FUNCTION IF EXISTS fn60;
CREATE FUNCTION fn60( f1 numeric (0) unsigned zerofill) returns numeric (0) unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn60(99999999);
fn60(99999999)
0100000000
DROP FUNCTION IF EXISTS fn61;
CREATE FUNCTION fn61( f1 numeric (0) zerofill) returns numeric (0) zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn61(-99999999);
fn61(-99999999)
0000000010
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP FUNCTION IF EXISTS fn62;
CREATE FUNCTION fn62( f1 numeric (0, 0)) returns numeric (0, 0)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn62(-999999999);
fn62(-999999999)
-1000000000
DROP FUNCTION IF EXISTS fn63;
CREATE FUNCTION fn63( f1 numeric (0, 0) unsigned) returns numeric (0, 0) unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn63(9999999999);
fn63(9999999999)
9999999999
DROP FUNCTION IF EXISTS fn64;
CREATE FUNCTION fn64( f1 numeric (0, 0) unsigned zerofill) returns numeric (0, 0) unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn64(99999999);
fn64(99999999)
0100000000
DROP FUNCTION IF EXISTS fn65;
CREATE FUNCTION fn65( f1 numeric (0, 0) zerofill) returns numeric (0, 0) zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn65(-99999999);
fn65(-99999999)
0000000010
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP FUNCTION IF EXISTS fn66;
CREATE FUNCTION fn66( f1 numeric (63, 30)) returns numeric (63, 30)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn66(-1e+36);
fn66(-1e+36)
-999999999999999999999999999999989.999999999999999999999999999999
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP FUNCTION IF EXISTS fn67;
CREATE FUNCTION fn67( f1 numeric (63, 30) unsigned) returns numeric (63, 30) unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn67(1e+36);
fn67(1e+36)
999999999999999999999999999999999.999999999999999999999999999999
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP FUNCTION IF EXISTS fn68;
CREATE FUNCTION fn68( f1 numeric (63, 30) unsigned zerofill) returns numeric (63, 30) unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn68(1e+36);
fn68(1e+36)
999999999999999999999999999999999.999999999999999999999999999999
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP FUNCTION IF EXISTS fn69;
CREATE FUNCTION fn69( f1 numeric (63, 30) zerofill) returns numeric (63, 30) zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn69(-1e+36);
fn69(-1e+36)
000000000000000000000000000000010.000000000000000000000000000000
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP FUNCTION IF EXISTS fn70_n;
CREATE FUNCTION fn70_n( f1 numeric (64)) returns numeric (64)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn70_n( -1000000000000000000000000000000 );
fn70_n( -1000000000000000000000000000000 )
-1000000000000000000000000000000
SELECT fn70_n( -10000000000000000000000000000000000000000 );
fn70_n( -10000000000000000000000000000000000000000 )
-10000000000000000000000000000000000000000
DROP FUNCTION IF EXISTS fn71_nu;
CREATE FUNCTION fn71_nu( f1 numeric (64) unsigned) returns numeric (64) unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn71_nu( 10000000000000000000000000000000000000000 );
fn71_nu( 10000000000000000000000000000000000000000 )
10000000000000000000000000000000000000000
DROP FUNCTION IF EXISTS fn72_nuz;
CREATE FUNCTION fn72_nuz( f1 numeric (64) unsigned zerofill) returns numeric (64) unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn72_nuz( 10000000000000000000000000000000000000000 );
fn72_nuz( 10000000000000000000000000000000000000000 )
0000000000000000000000010000000000000000000000000000000000000000
DROP FUNCTION IF EXISTS fn73_n_z;
CREATE FUNCTION fn73_n_z( f1 numeric (64) zerofill) returns numeric (64) zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn73_n_z( 10000000000000000000000000000000000000000 );
fn73_n_z( 10000000000000000000000000000000000000000 )
0000000000000000000000010000000000000000000000000000000000000000
DROP FUNCTION IF EXISTS fn74;
CREATE FUNCTION fn74( f1 numeric unsigned) returns numeric unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn74(999999999);
fn74(999999999)
1000000000
DROP FUNCTION IF EXISTS fn75;
CREATE FUNCTION fn75( f1 numeric unsigned zerofill) returns numeric unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn75(999999999);
fn75(999999999)
1000000000
DROP FUNCTION IF EXISTS fn76;
CREATE FUNCTION fn76( f1 numeric zerofill) returns numeric zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn76(-999999999);
fn76(-999999999)
0000000010
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP FUNCTION IF EXISTS fn77;
CREATE FUNCTION fn77( f1 real) returns real
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn77(1.1);
fn77(1.1)
1.0999999999999996
DROP FUNCTION IF EXISTS fn78;
CREATE FUNCTION fn78( f1 real unsigned) returns real unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn78(1.1);
fn78(1.1)
10
DROP FUNCTION IF EXISTS fn79;
CREATE FUNCTION fn79( f1 real unsigned zerofill) returns real unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
SELECT fn79(1.1);
fn79(1.1)
10
DROP FUNCTION IF EXISTS fn80;
CREATE FUNCTION fn80( f1 real zerofill) returns real zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn80(1.1);
fn80(1.1)
10
DROP FUNCTION IF EXISTS fn81;
CREATE FUNCTION fn81( f1 smallint) returns smallint
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn81(-32701);
fn81(-32701)
-32702
DROP FUNCTION IF EXISTS fn82;
CREATE FUNCTION fn82( f1 smallint unsigned) returns smallint unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn82(65531);
fn82(65531)
65532
DROP FUNCTION IF EXISTS fn83;
CREATE FUNCTION fn83( f1 smallint unsigned zerofill) returns smallint unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn83(65531);
fn83(65531)
65532
DROP FUNCTION IF EXISTS fn84;
CREATE FUNCTION fn84( f1 smallint zerofill) returns smallint zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn84(-32601);
ERROR 22003: BIGINT UNSIGNED value is out of range in '(f1@0 - 10)'
DROP FUNCTION IF EXISTS fn85;
CREATE FUNCTION fn85( f1 tinyint) returns tinyint
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn85(-115);
fn85(-115)
-116
DROP FUNCTION IF EXISTS fn86;
CREATE FUNCTION fn86( f1 tinyint unsigned) returns tinyint unsigned
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
SELECT fn86(251);
fn86(251)
252
DROP FUNCTION IF EXISTS fn87;
CREATE FUNCTION fn87( f1 tinyint unsigned zerofill) returns tinyint unsigned zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn87(201);
fn87(201)
202
DROP FUNCTION IF EXISTS fn88;
CREATE FUNCTION fn88( f1 tinyint zerofill) returns tinyint zerofill
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
return f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
SELECT fn88(-101);
ERROR 22003: BIGINT UNSIGNED value is out of range in '(f1@0 - 10)'
DROP FUNCTION IF EXISTS fn89;
CREATE FUNCTION fn89( f1 enum('1enum', '2enum')) returns enum('1enum', '2enum')
BEGIN
IF f1 = '1enum' THEN
SET f1 = '2enum';
ELSE
SET f1 = '1enum';
END IF;
RETURN f1;
END//
SELECT fn89( '1enum');
fn89( '1enum')
2enum
DROP FUNCTION IF EXISTS fn90;
CREATE FUNCTION fn90( f1 set('1set', '2set')) returns set('1set', '2set')
BEGIN
IF f1 = '1set' THEN
SET f1 = '2set';
ELSE
SET f1 = '1set';
END IF;
RETURN f1;
END//
SELECT fn90( '1set');
fn90( '1set')
2set
DROP FUNCTION IF EXISTS fn91;
CREATE FUNCTION fn91( f1 date) returns date
BEGIN
set f1 = adddate(f1, interval 31 day);
return f1;
END//
SELECT fn91('1997-12-31');
fn91('1997-12-31')
1998-01-31
DROP FUNCTION IF EXISTS fn92;
CREATE FUNCTION fn92( f1 time) returns time
BEGIN
set f1 = addtime(f1, '02:00:00.999998');
return f1;
END//
SELECT fn92( '23:59:59.999999');
fn92( '23:59:59.999999')
26:00:01
DROP FUNCTION IF EXISTS fn93;
CREATE FUNCTION fn93( f1 datetime) returns datetime
BEGIN
set f1 = addtime(f1, '1 1:1:1.000002');
return f1;
END//
SELECT fn93('1997-12-31 23:59:59.999999');
fn93('1997-12-31 23:59:59.999999')
1998-01-02 01:01:01
DROP FUNCTION IF EXISTS fn94;
CREATE FUNCTION fn94( f1 char) returns char
BEGIN
set f1 = concat('a', f1);
return f1;
END//
SELECT fn94( 'h');
fn94( 'h')
a
DROP FUNCTION IF EXISTS fn95;
CREATE FUNCTION fn95( f1 char ascii) returns char ascii
BEGIN
set f1 = concat('a', f1);
return f1;
END//
Warnings:
Warning	1287	'ASCII' is deprecated and will be removed in a future release. Please use CHARACTER SET charset_name instead
Warning	1287	'ASCII' is deprecated and will be removed in a future release. Please use CHARACTER SET charset_name instead
SELECT fn95('h');
fn95('h')
a
DROP FUNCTION IF EXISTS fn96;
CREATE FUNCTION fn96( f1 binary) returns binary(2)
BEGIN
set f1 = concat('a', f1);
return f1;
END//
SELECT fn96( 'h');
fn96( 'h')
a 
DROP FUNCTION IF EXISTS fn97;
CREATE FUNCTION fn97( f1 longtext) returns longtext
BEGIN
set f1 = concat('hello', f1);
return f1;
END//
SELECT fn97( 'world');
fn97( 'world')
helloworld
DROP FUNCTION IF EXISTS fn98;
CREATE FUNCTION fn98( f1 mediumtext) returns mediumtext
BEGIN
set f1 = concat('hello', f1);
return f1;
END//
SELECT fn98( 'world');
fn98( 'world')
helloworld
DROP FUNCTION IF EXISTS fn99;
CREATE FUNCTION fn99( f1 text) returns text
BEGIN
set f1 = concat('hello', f1);
return f1;
END//
SELECT fn99( 'world');
fn99( 'world')
helloworld
DROP FUNCTION IF EXISTS fn100;
CREATE FUNCTION fn100( f1 tinytext) returns tinytext
BEGIN
set f1 = concat('hello', f1);
return f1;
END//
SELECT fn100( 'world');
fn100( 'world')
helloworld
DROP FUNCTION IF EXISTS fn101;
CREATE FUNCTION fn101( f1 year) returns year
BEGIN
set f1 = f1 + 10;
return f1;
END//
SELECT fn101(51);
fn101(51)
2061
DROP FUNCTION IF EXISTS fn102;
CREATE FUNCTION fn102( f1 year) returns year
BEGIN
set f1 = f1 + 51;
return f1;
END//
SELECT fn102(1982);
fn102(1982)
2033
DROP FUNCTION IF EXISTS fn103;
CREATE FUNCTION fn103( f1 geometrycollection) returns geometrycollection
BEGIN
set f1 = f1;
return f1;
END//
SELECT fn103('\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0?\0\0\0\0\0\0?\0\0\0\0\0\04@\0\0\0\0\0\0?\0\0\0\0\0\04@\0\0\0\0\0\04@\0\0\0\0\0\0?\0\0\0\0\0\04@\0\0\0\0\0\0?\0\0\0\0\0\0?\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0@\0\0\0\0\0\0 @\0\0\0\0\0\0@\0\0\0\0\0\0 @\0\0\0\0\0\0 @\0\0\0\0\0\0@\0\0\0\0\0\0 @\0\0\0\0\0\0@\0\0\0\0\0\0@');
ERROR 22003: Cannot get geometry object from data you send to the GEOMETRY field
DROP FUNCTION IF EXISTS fn104;
CREATE FUNCTION fn104( f1 linestring) returns linestring
BEGIN
set f1 = f1;
return f1;
END//
SELECT fn104('\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0?\0\0\0\0\0\0?\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0@\0\0\0\0\0\0@');
ERROR 22003: Cannot get geometry object from data you send to the GEOMETRY field
DROP FUNCTION IF EXISTS fn105;
CREATE FUNCTION fn105( f1 point) returns point
BEGIN
set f1 = f1;
return f1;
END//
SELECT fn105('\0\0\0\0\0\0\0\0\0\0\0\0\04@\0\0\0\0\0\04@');
fn105('\0\0\0\0\0\0\0\0\0\0\0\0\04@\0\0\0\0\0\04@')
             4@      4@
DROP FUNCTION IF EXISTS fn106;
CREATE FUNCTION fn106( f1 polygon) returns polygon
BEGIN
set f1 = f1;
return f1;
END//
SELECT fn106('\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0?\0\0\0\0\0\0?\0\0\0\0\0\04@\0\0\0\0\0\0?\0\0\0\0\0\04@\0\0\0\0\0\04@\0\0\0\0\0\0?\0\0\0\0\0\04@\0\0\0\0\0\0?\0\0\0\0\0\0?\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0@\0\0\0\0\0\0 @\0\0\0\0\0\0@\0\0\0\0\0\0 @\0\0\0\0\0\0 @\0\0\0\0\0\0@\0\0\0\0\0\0 @\0\0\0\0\0\0@\0\0\0\0\0\0@');
ERROR 22003: Cannot get geometry object from data you send to the GEOMETRY field
DROP FUNCTION IF EXISTS fn107;
CREATE FUNCTION fn107( f1 timestamp) returns timestamp
BEGIN
set f1 = now();
return f1;
END//
SELECT fn107(20050510080451);
fn107(20050510080451)
returned
USE db_storedproc;
DROP DATABASE d1;
CREATE DATABASE db1;
USE db1;
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( f1 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp1(-9.22e+18);
f1
-9220000000000000000
DROP PROCEDURE IF EXISTS sp2;
CREATE PROCEDURE sp2( f1 bigint unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp2(1.84e+19);
f1
18400000000000000000
DROP PROCEDURE IF EXISTS sp3;
CREATE PROCEDURE sp3( f1 bigint unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp3(1.84e+17);
f1
00184000000000000000
DROP PROCEDURE IF EXISTS sp4;
CREATE PROCEDURE sp4( f1 bigint zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp4(-9.22e+15);
ERROR 22003: BIGINT UNSIGNED value is out of range in '(f1@0 - 10)'
DROP PROCEDURE IF EXISTS sp5;
CREATE PROCEDURE sp5( f1 decimal)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp5(-1.00e+09);
f1
-1000000000
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( f1 decimal (0))
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp6(-1.00e+09);
f1
-1000000000
DROP PROCEDURE IF EXISTS sp7;
CREATE PROCEDURE sp7( f1 decimal (0) unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp7(99999999999);
f1
9999999999
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP PROCEDURE IF EXISTS sp8;
CREATE PROCEDURE sp8( f1 decimal (0) unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp8(999999999);
f1
1000000000
DROP PROCEDURE IF EXISTS sp9;
CREATE PROCEDURE sp9( f1 decimal (0) zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp9(-1.00e+09);
f1
0000000010
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP PROCEDURE IF EXISTS sp10;
CREATE PROCEDURE sp10( f1 decimal (0, 0))
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp10(-1.00e+09);
f1
-1000000000
DROP PROCEDURE IF EXISTS sp11;
CREATE PROCEDURE sp11( f1 decimal (0, 0) unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp11(99999999999);
f1
9999999999
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP PROCEDURE IF EXISTS sp12;
CREATE PROCEDURE sp12( f1 decimal (0, 0) unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp12(999999999);
f1
1000000000
DROP PROCEDURE IF EXISTS sp13;
CREATE PROCEDURE sp13( f1 decimal (0, 0) zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp13(-1.00e+09);
f1
0000000010
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP PROCEDURE IF EXISTS sp14;
CREATE PROCEDURE sp14( f1 decimal (63, 30))
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp14(-1.00e+21);
f1
-1000000000000000000000.000000000000000000000000000000
DROP PROCEDURE IF EXISTS sp15;
CREATE PROCEDURE sp15( f1 decimal (63, 30) unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp15(1.00e+16);
f1
10000000000000000.000000000000000000000000000000
DROP PROCEDURE IF EXISTS sp16;
CREATE PROCEDURE sp16( f1 decimal (63, 30) unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp16(1.00e+16);
f1
000000000000000010000000000000000.000000000000000000000000000000
DROP PROCEDURE IF EXISTS sp17;
CREATE PROCEDURE sp17( f1 decimal (63, 30) zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp17(-1.00e+21);
f1
000000000000000000000000000000010.000000000000000000000000000000
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP PROCEDURE IF EXISTS sp18_d;
CREATE PROCEDURE sp18_d( f1 decimal (64))
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp18_d(-1.00e+30);
f1
-1000000000000000000000000000000
CALL sp18_d( -1000000000000000000000000000000 );
f1
-1000000000000000000000000000000
DROP PROCEDURE IF EXISTS sp19_du;
CREATE PROCEDURE sp19_du( f1 decimal (64) unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp19_du(1.00e+20);
f1
100000000000000000000
CALL sp19_du( 100000000000000000000 );
f1
100000000000000000000
CALL sp19_du(1.00e+24);
f1
1000000000000000000000000
CALL sp19_du( 1000000000000000000000000 );
f1
1000000000000000000000000
DROP PROCEDURE IF EXISTS sp20_duz;
CREATE PROCEDURE sp20_duz( f1 decimal (64) unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp20_duz(1.00e+20);
f1
0000000000000000000000000000000000000000000100000000000000000000
CALL sp20_duz( 100000000000000000000 );
f1
0000000000000000000000000000000000000000000100000000000000000000
CALL sp20_duz(1.00e+24);
f1
0000000000000000000000000000000000000001000000000000000000000000
CALL sp20_duz( 1000000000000000000000000 );
f1
0000000000000000000000000000000000000001000000000000000000000000
DROP PROCEDURE IF EXISTS sp21;
CREATE PROCEDURE sp21( f1 decimal (64) zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp21(1.00e+00);
f1
0000000000000000000000000000000000000000000000000000000000000010
DROP PROCEDURE IF EXISTS sp22;
CREATE PROCEDURE sp22( f1 decimal unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp22(1.00e+00);
f1
10
DROP PROCEDURE IF EXISTS sp23;
CREATE PROCEDURE sp23( f1 decimal unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp23(1.00e+00);
f1
0000000010
DROP PROCEDURE IF EXISTS sp24;
CREATE PROCEDURE sp24( f1 decimal zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp24(-1.00e+09);
f1
0000000010
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP PROCEDURE IF EXISTS sp25;
CREATE PROCEDURE sp25( f1 double)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp25(1.00e+00);
f1
1
DROP PROCEDURE IF EXISTS sp26;
CREATE PROCEDURE sp26( f1 double unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp26(1.00e+00);
f1
10
DROP PROCEDURE IF EXISTS sp27;
CREATE PROCEDURE sp27( f1 double unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp27(1.00e+00);
f1
0000000000000000000010
DROP PROCEDURE IF EXISTS sp28;
CREATE PROCEDURE sp28( f1 double zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp28(1.00e+00);
f1
0000000000000000000010
DROP PROCEDURE IF EXISTS sp29;
CREATE PROCEDURE sp29( f1 float)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp29(1.00e+00);
f1
1
DROP PROCEDURE IF EXISTS sp30;
CREATE PROCEDURE sp30( f1 float unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp30(1.00e+00);
f1
10
DROP PROCEDURE IF EXISTS sp31;
CREATE PROCEDURE sp31( f1 float unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp31(1.00e+00);
f1
000000000010
DROP PROCEDURE IF EXISTS sp32;
CREATE PROCEDURE sp32( f1 float zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp32(1.00e+00);
f1
000000000010
DROP PROCEDURE IF EXISTS sp33;
CREATE PROCEDURE sp33( f1 float(0))
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp33(1.00e+00);
f1
1
DROP PROCEDURE IF EXISTS sp34;
CREATE PROCEDURE sp34( f1 float(0) unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp34(1.00e+00);
f1
10
DROP PROCEDURE IF EXISTS sp35;
CREATE PROCEDURE sp35( f1 float(0) unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp35(1.00e+00);
f1
000000000010
DROP PROCEDURE IF EXISTS sp36;
CREATE PROCEDURE sp36( f1 float(0) zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp36(1.00e+00);
f1
000000000010
DROP PROCEDURE IF EXISTS sp37;
CREATE PROCEDURE sp37( f1 float(23))
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp37(1.00e+00);
f1
1
DROP PROCEDURE IF EXISTS sp38;
CREATE PROCEDURE sp38( f1 float(23) unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp38(1.00e+00);
f1
10
DROP PROCEDURE IF EXISTS sp39;
CREATE PROCEDURE sp39( f1 float(23) unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp39(1.00e+00);
f1
000000000010
DROP PROCEDURE IF EXISTS sp40;
CREATE PROCEDURE sp40( f1 float(23) zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp40(1.00e+00);
f1
000000000010
DROP PROCEDURE IF EXISTS sp41;
CREATE PROCEDURE sp41( f1 float(24))
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp41(1.00e+00);
f1
1
DROP PROCEDURE IF EXISTS sp42;
CREATE PROCEDURE sp42( f1 float(24) unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp42(1.00e+00);
f1
10
DROP PROCEDURE IF EXISTS sp43;
CREATE PROCEDURE sp43( f1 float(24) unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp43(1.00e+00);
f1
000000000010
DROP PROCEDURE IF EXISTS sp44;
CREATE PROCEDURE sp44( f1 float(24) zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp44(1.00e+00);
f1
000000000010
DROP PROCEDURE IF EXISTS sp45;
CREATE PROCEDURE sp45( f1 float(53))
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp45(1.00e+00);
f1
1
DROP PROCEDURE IF EXISTS sp46;
CREATE PROCEDURE sp46( f1 float(53) unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp46(1.00e+00);
f1
10
DROP PROCEDURE IF EXISTS sp47;
CREATE PROCEDURE sp47( f1 float(53) unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp47(1.00e+00);
f1
0000000000000000000010
DROP PROCEDURE IF EXISTS sp48;
CREATE PROCEDURE sp48( f1 float(53) zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp48(1.00e+00);
f1
0000000000000000000010
DROP PROCEDURE IF EXISTS sp49;
CREATE PROCEDURE sp49( f1 int)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp49(-2.15e+09);
f1
-2147483638
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP PROCEDURE IF EXISTS sp50;
CREATE PROCEDURE sp50( f1 int unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp50(4.29e+09);
f1
4290000000
DROP PROCEDURE IF EXISTS sp51;
CREATE PROCEDURE sp51( f1 int unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp51(4.29e+09);
f1
4290000000
DROP PROCEDURE IF EXISTS sp52;
CREATE PROCEDURE sp52( f1 int zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp52(2.15e+08);
f1
0215000000
DROP PROCEDURE IF EXISTS sp53;
CREATE PROCEDURE sp53( f1 mediumint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp53(-8388600);
f1
-8388598
DROP PROCEDURE IF EXISTS sp54;
CREATE PROCEDURE sp54( f1 mediumint unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp54(16777201);
f1
16777202
DROP PROCEDURE IF EXISTS sp55;
CREATE PROCEDURE sp55( f1 mediumint unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp55(16777210);
f1
16777210
DROP PROCEDURE IF EXISTS sp56;
CREATE PROCEDURE sp56( f1 mediumint zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp56(-8388601);
ERROR 22003: BIGINT UNSIGNED value is out of range in '(f1@0 - 10)'
DROP PROCEDURE IF EXISTS sp57;
CREATE PROCEDURE sp57( f1 numeric)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp57(-999999999);
f1
-1000000000
DROP PROCEDURE IF EXISTS sp58;
CREATE PROCEDURE sp58( f1 numeric (0))
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp58(-999999999);
f1
-1000000000
DROP PROCEDURE IF EXISTS sp59;
CREATE PROCEDURE sp59( f1 numeric (0) unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp59(9999999999);
f1
9999999999
DROP PROCEDURE IF EXISTS sp60;
CREATE PROCEDURE sp60( f1 numeric (0) unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp60(99999999);
f1
0100000000
DROP PROCEDURE IF EXISTS sp61;
CREATE PROCEDURE sp61( f1 numeric (0) zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp61(-99999999);
f1
0000000010
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP PROCEDURE IF EXISTS sp62;
CREATE PROCEDURE sp62( f1 numeric (0, 0))
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp62(-999999999);
f1
-1000000000
DROP PROCEDURE IF EXISTS sp63;
CREATE PROCEDURE sp63( f1 numeric (0, 0) unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp63(9999999999);
f1
9999999999
DROP PROCEDURE IF EXISTS sp64;
CREATE PROCEDURE sp64( f1 numeric (0, 0) unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp64(99999999);
f1
0100000000
DROP PROCEDURE IF EXISTS sp65;
CREATE PROCEDURE sp65( f1 numeric (0, 0) zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp65(-99999999);
f1
0000000010
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP PROCEDURE IF EXISTS sp66_n;
CREATE PROCEDURE sp66_n( f1 numeric (63, 30))
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp66_n(-1e+36);
f1
-999999999999999999999999999999989.999999999999999999999999999999
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
CALL sp66_n( -1000000000000000000000000000000000000 );
f1
-999999999999999999999999999999989.999999999999999999999999999999
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP PROCEDURE IF EXISTS sp67_nu;
CREATE PROCEDURE sp67_nu( f1 numeric (63, 30) unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp67_nu(1e+36);
f1
999999999999999999999999999999999.999999999999999999999999999999
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
CALL sp67_nu( 1000000000000000000000000000000000000 );
f1
999999999999999999999999999999999.999999999999999999999999999999
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP PROCEDURE IF EXISTS sp68_nuz;
CREATE PROCEDURE sp68_nuz( f1 numeric (63, 30) unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp68_nuz(1e+36);
f1
999999999999999999999999999999999.999999999999999999999999999999
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
CALL sp68_nuz( 1000000000000000000000000000000000000 );
f1
999999999999999999999999999999999.999999999999999999999999999999
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP PROCEDURE IF EXISTS sp69_n_z;
CREATE PROCEDURE sp69_n_z( f1 numeric (63, 30) zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp69_n_z(-1e+36);
f1
000000000000000000000000000000010.000000000000000000000000000000
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
CALL sp69_n_z( -1000000000000000000000000000000000000 );
f1
000000000000000000000000000000010.000000000000000000000000000000
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP PROCEDURE IF EXISTS sp70_n;
CREATE PROCEDURE sp70_n( f1 numeric (64))
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp70_n(-1e+40);
f1
-10000000000000000000000000000000000000000
CALL sp70_n( -10000000000000000000000000000000000000000 );
f1
-10000000000000000000000000000000000000000
DROP PROCEDURE IF EXISTS sp71_nu;
CREATE PROCEDURE sp71_nu( f1 numeric (64) unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp71_nu(1.00e+40);
f1
10000000000000000000000000000000000000000
CALL sp71_nu( 10000000000000000000000000000000000000000 );
f1
10000000000000000000000000000000000000000
DROP PROCEDURE IF EXISTS sp72_nuz;
CREATE PROCEDURE sp72_nuz( f1 numeric (64) unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp72_nuz(1.00e+40);
f1
0000000000000000000000010000000000000000000000000000000000000000
CALL sp72_nuz( 10000000000000000000000000000000000000000 );
f1
0000000000000000000000010000000000000000000000000000000000000000
DROP PROCEDURE IF EXISTS sp73_n_z;
CREATE PROCEDURE sp73_n_z( f1 numeric (64) zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp73_n_z(1.00e+40);
f1
0000000000000000000000010000000000000000000000000000000000000000
CALL sp73_n_z( 10000000000000000000000000000000000000000 );
f1
0000000000000000000000010000000000000000000000000000000000000000
DROP PROCEDURE IF EXISTS sp74;
CREATE PROCEDURE sp74( f1 numeric unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp74(999999999);
f1
1000000000
DROP PROCEDURE IF EXISTS sp75;
CREATE PROCEDURE sp75( f1 numeric unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp75(999999999);
f1
1000000000
DROP PROCEDURE IF EXISTS sp76;
CREATE PROCEDURE sp76( f1 numeric zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp76(-999999999);
f1
0000000010
Warnings:
Warning	1264	Out of range value for column 'f1' at row 1
DROP PROCEDURE IF EXISTS sp77;
CREATE PROCEDURE sp77( f1 real)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp77(1.1);
f1
1.0999999999999996
DROP PROCEDURE IF EXISTS sp78;
CREATE PROCEDURE sp78( f1 real unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp78(1.1);
f1
10
DROP PROCEDURE IF EXISTS sp79;
CREATE PROCEDURE sp79( f1 real unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
Warning	1681	UNSIGNED for decimal and floating point data types is deprecated and support for it will be removed in a future release.
CALL sp79(1.1);
f1
0000000000000000000010
DROP PROCEDURE IF EXISTS sp80;
CREATE PROCEDURE sp80( f1 real zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp80(1.1);
f1
0000000000000000000010
DROP PROCEDURE IF EXISTS sp81;
CREATE PROCEDURE sp81( f1 smallint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp81(-32701);
f1
-32702
DROP PROCEDURE IF EXISTS sp82;
CREATE PROCEDURE sp82( f1 smallint unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp82(65531);
f1
65532
DROP PROCEDURE IF EXISTS sp83;
CREATE PROCEDURE sp83( f1 smallint unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp83(65531);
f1
65532
DROP PROCEDURE IF EXISTS sp84;
CREATE PROCEDURE sp84( f1 smallint zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp84(-32601);
ERROR 22003: BIGINT UNSIGNED value is out of range in '(f1@0 - 10)'
DROP PROCEDURE IF EXISTS sp85;
CREATE PROCEDURE sp85( f1 tinyint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp85(-115);
f1
-116
DROP PROCEDURE IF EXISTS sp86;
CREATE PROCEDURE sp86( f1 tinyint unsigned)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
CALL sp86(251);
f1
252
DROP PROCEDURE IF EXISTS sp87;
CREATE PROCEDURE sp87( f1 tinyint unsigned zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp87(201);
f1
202
DROP PROCEDURE IF EXISTS sp88;
CREATE PROCEDURE sp88( f1 tinyint zerofill)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
SELECT f1;
END//
Warnings:
Warning	1681	The ZEROFILL attribute is deprecated and will be removed in a future release. Use the LPAD function to zero-pad numbers, or store the formatted numbers in a CHAR column.
CALL sp88(-101);
ERROR 22003: BIGINT UNSIGNED value is out of range in '(f1@0 - 10)'
DROP PROCEDURE IF EXISTS sp89;
CREATE PROCEDURE sp89( f1 enum('1enum', '2enum'))
BEGIN
IF f1 = '1enum' THEN set f1 = '2enum'; ELSE  set f1 = '1enum'; END IF;
END//
CALL sp89( '1enum');
DROP PROCEDURE IF EXISTS sp90;
CREATE PROCEDURE sp90( f1 set('1set', '2set'))
BEGIN
IF f1 = '1set' THEN  set f1 = '2set';  ELSE set f1 = '1set'; END IF;
END//
CALL sp90( '1set');
DROP PROCEDURE IF EXISTS sp91;
CREATE PROCEDURE sp91( f1 date)
BEGIN
set f1 = adddate(f1, interval 31 day);
SELECT f1;
END//
CALL sp91( '1997-12-31');
f1
1998-01-31
DROP PROCEDURE IF EXISTS sp92;
CREATE PROCEDURE sp92( f1 time)
BEGIN
set f1 = addtime(f1, '02:00:00.999998');
SELECT f1;
END//
CALL sp92( '23:59:59.999999');
f1
26:00:01
DROP PROCEDURE IF EXISTS sp93;
CREATE PROCEDURE sp93( f1 datetime)
BEGIN
set f1 = addtime(f1, '1 1:1:1.000002');
SELECT f1;
END//
CALL sp93('1997-12-31 23:59:59.999999');
f1
1998-01-02 01:01:01
DROP PROCEDURE IF EXISTS sp94;
CREATE PROCEDURE sp94( f1 char)
BEGIN
set f1 = concat('a', f1);
SELECT f1;
END//
CALL sp94( 'h');
f1
a
DROP PROCEDURE IF EXISTS sp95;
CREATE PROCEDURE sp95( f1 char ascii)
BEGIN
set f1 = concat('a', f1);
SELECT f1;
END//
Warnings:
Warning	1287	'ASCII' is deprecated and will be removed in a future release. Please use CHARACTER SET charset_name instead
CALL sp95( 'h');
f1
a
DROP PROCEDURE IF EXISTS sp96;
CREATE PROCEDURE sp96( f1 char binary)
BEGIN
set f1 = concat('a', f1);
SELECT f1;
END//
Warnings:
Warning	1287	'BINARY as attribute of a type' is deprecated and will be removed in a future release. Please use a CHARACTER SET clause with _bin collation instead
CALL sp96( 'h');
f1
a
DROP PROCEDURE IF EXISTS sp97;
CREATE PROCEDURE sp97( f1 longtext)
BEGIN
set f1 = concat('hello', f1);
SELECT f1;
END//
CALL sp97( 'world');
f1
helloworld
DROP PROCEDURE IF EXISTS sp98;
CREATE PROCEDURE sp98( f1 mediumtext)
BEGIN
set f1 = concat('hello', f1);
SELECT f1;
END//
CALL sp98( 'world');
f1
helloworld
DROP PROCEDURE IF EXISTS sp99;
CREATE PROCEDURE sp99( f1 text)
BEGIN
set f1 = concat('hello', f1);
SELECT f1;
END//
CALL sp99( 'world');
f1
helloworld
DROP PROCEDURE IF EXISTS sp100;
CREATE PROCEDURE sp100( f1 tinytext)
BEGIN
set f1 = concat('hello', f1);
SELECT f1;
END//
CALL sp100( 'world');
f1
helloworld
DROP PROCEDURE IF EXISTS sp101;
CREATE PROCEDURE sp101( f1 year)
BEGIN
set f1 = f1 + 10;
SELECT f1;
END//
CALL sp101(51);
f1
2061
DROP PROCEDURE IF EXISTS sp102;
CREATE PROCEDURE sp102( f1 year)
BEGIN
set f1 = f1 + 51;
SELECT f1;
END//
CALL sp102(1982);
f1
2033
DROP PROCEDURE IF EXISTS sp103;
CREATE PROCEDURE sp103( f1 geometrycollection)
BEGIN
set f1 = f1;
SELECT f1;
END//
CALL sp103('\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0?\0\0\0\0\0\0?\0\0\0\0\0\04@\0\0\0\0\0\0?\0\0\0\0\0\04@\0\0\0\0\0\04@\0\0\0\0\0\0?\0\0\0\0\0\04@\0\0\0\0\0\0?\0\0\0\0\0\0?\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0@\0\0\0\0\0\0 @\0\0\0\0\0\0@\0\0\0\0\0\0 @\0\0\0\0\0\0 @\0\0\0\0\0\0@\0\0\0\0\0\0 @\0\0\0\0\0\0@\0\0\0\0\0\0@');
ERROR 22003: Cannot get geometry object from data you send to the GEOMETRY field
DROP PROCEDURE IF EXISTS sp104;
CREATE PROCEDURE sp104( f1 linestring)
BEGIN
set f1 = f1;
SELECT f1;
END//
CALL sp104('\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0?\0\0\0\0\0\0?\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0@\0\0\0\0\0\0@');
ERROR 22003: Cannot get geometry object from data you send to the GEOMETRY field
DROP PROCEDURE IF EXISTS sp105;
CREATE PROCEDURE sp105( f1 point)
BEGIN
set f1 = f1;
SELECT f1;
END//
CALL sp105('\0\0\0\0\0\0\0\0\0\0\0\0\04@\0\0\0\0\0\04@');
f1
             4@      4@
DROP PROCEDURE IF EXISTS sp106;
CREATE PROCEDURE sp106( f1 polygon)
BEGIN
set f1 = f1;
SELECT f1;
END//
CALL sp106('\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0?\0\0\0\0\0\0?\0\0\0\0\0\04@\0\0\0\0\0\0?\0\0\0\0\0\04@\0\0\0\0\0\04@\0\0\0\0\0\0?\0\0\0\0\0\04@\0\0\0\0\0\0?\0\0\0\0\0\0?\0\0\0\0\0\0\0\0\0@\0\0\0\0\0\0@\0\0\0\0\0\0 @\0\0\0\0\0\0@\0\0\0\0\0\0 @\0\0\0\0\0\0 @\0\0\0\0\0\0@\0\0\0\0\0\0 @\0\0\0\0\0\0@\0\0\0\0\0\0@');
ERROR 22003: Cannot get geometry object from data you send to the GEOMETRY field
DROP PROCEDURE IF EXISTS sp107;
CREATE PROCEDURE sp107( f1 timestamp)
BEGIN
set f1 = now() + 0 + f1;
SELECT f1;
END//
CALL sp107(2.00e+13);
f1
returned
Warnings:
returned	1265	Data truncated for column 'f1' at row 1
USE db_storedproc;
DROP DATABASE db1;
CREATE DATABASE db1;
USE db1;
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1( in f1 year, inout f2 year, out f3 year, in f4 year,
inout f5 year, out f6 year, in f7 year(4), inout f8 year(4),
out f9 year(4), in f10 year(4), inout f11 year(4), out f12 year(4))
BEGIN
set f1 = f1 + 10; set f2 = f2 + 10; set f3 = f2 + 10;
set f4 = f4 + 10; set f5 = f5 + 10; set f6 = f5 + 10;
set f7 = f7 + 51; set f8 = f8 + 51; set f9 = f8 + 51;
set f10 = f10 + 51; set f11 = f11 + 51; set f12 = f11 + 51;
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute01;
CREATE PROCEDURE spexecute01()
BEGIN
declare var1 year;
declare var2 year;
declare var3 year;
declare var4 year;
declare var5 year(4);
declare var6 year(4);
declare var7 year(4);
declare var8 year(4);
set var1 = 51;
set var3 = 51;
set var5 = 1982;
set var7 = 1982;
CALL sp1(51, var1, var2, 51, var3, var4, 1982, var5, var6, 1982, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute01();
f1	f2	f3	f4	f5	f6	f7	f8	f9	f10	f11	f12
2061	2061	2071	2061	2061	2071	2033	2033	2084	2033	2033	2084
var1	var2	var3	var4	var5	var6	var7	var8
2061	2071	2061	2071	2033	2084	2033	2084
DROP PROCEDURE spexecute01;
DROP PROCEDURE sp1;
DROP PROCEDURE IF EXISTS sp2;
CREATE PROCEDURE sp2( in f1 text, inout f2 text, out f3 text, in f4 text, inout f5 text,
out f6 text, in f7 tinytext, inout f8 tinytext, out f9 tinytext,
in f10 tinytext, inout f11 tinytext, out f12 tinytext)
BEGIN
set f1 = concat('hello', f1); set f2 = concat('hello', f2); set f3 = concat('hello', f2);
set f4 = concat('hello', f4); set f5 = concat('hello', f5); set f6 = concat('hello', f5);
set f7 = concat('hello', f7); set f8 = concat('hello', f8); set f9 = concat('hello', f8);
set f10 = concat('hello', f10); set f11 = concat('hello', f11); set f12 = concat('hello', f11);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute02;
CREATE PROCEDURE spexecute02()
BEGIN
declare var1 text;
declare var2 text;
declare var3 text;
declare var4 text;
declare var5 tinytext;
declare var6 tinytext;
declare var7 tinytext;
declare var8 tinytext;
set var1 =  'world';
set var3 =  'world';
set var5 =  'world';
set var7 =  'world';
CALL sp2( 'world', var1, var2, 'world', var3, var4, 'world', var5, var6, 'world', var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute02();
f1	f2	f3	f4	f5	f6	f7	f8	f9	f10	f11	f12
helloworld	helloworld	hellohelloworld	helloworld	helloworld	hellohelloworld	helloworld	helloworld	hellohelloworld	helloworld	helloworld	hellohelloworld
var1	var2	var3	var4	var5	var6	var7	var8
helloworld	hellohelloworld	helloworld	hellohelloworld	helloworld	hellohelloworld	helloworld	hellohelloworld
DROP PROCEDURE spexecute02;
DROP PROCEDURE sp2;
DROP PROCEDURE IF EXISTS sp3;
CREATE PROCEDURE sp3( in f1 char, inout f2 char, out f3 char, in f4 char ascii,
inout f5 char ascii, out f6 char ascii, in f7 longtext,
inout f8 longtext, out f9 longtext, in f10 mediumtext,
inout f11 mediumtext, out f12 mediumtext)
BEGIN
set f1 = concat('a', f1); set f2 = concat('a', f2); set f3 = concat('a', f1);
set f4 = concat('a', f4); set f5 = concat('a', f5); set f6 = concat('a', f4);
set f7 = concat('hello', f7); set f8 = concat('hello', f8); set f9 = concat('hello', f9);
set f10 = concat('hello', f10); set f11 = concat('hello', f11); set f12 = concat('hello', f11);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute03;
CREATE PROCEDURE spexecute03()
BEGIN
declare var1 char;
declare var2 char;
declare var3 char ascii;
declare var4 char ascii;
declare var5 longtext;
declare var6 longtext;
declare var7 mediumtext;
declare var8 mediumtext;
set var1 =  'h';
set var3 =  'h';
set var5 =  'world';
set var7 =  'world';
CALL sp3( 'h', var1, var2, 'h', var3, var4, 'world', var5, var6, 'world', var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute03();
f1	f2	f3	f4	f5	f6	f7	f8	f9	f10	f11	f12
a	a	a	a	a	a	helloworld	helloworld	NULL	helloworld	helloworld	hellohelloworld
var1	var2	var3	var4	var5	var6	var7	var8
a	a	a	a	helloworld	NULL	helloworld	hellohelloworld
DROP PROCEDURE spexecute03;
DROP PROCEDURE sp3;
DROP PROCEDURE IF EXISTS sp4;
CREATE PROCEDURE sp4( in f1 bigint, inout f2 bigint, out f3 bigint,
in f4 bigint, inout f5 bigint, out f6 bigint,
in f7 bigint, inout f8 bigint, out f9 bigint,
in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f3 = f2;
set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10);
set f6 = f5;
set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10);
set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8;
set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10);
set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11;
set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10);
set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute04;
CREATE PROCEDURE spexecute04()
BEGIN
declare var1 bigint;
declare var2 bigint;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -9.22e+18;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp4(-9.22e+18, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute04();
ERROR 22003: BIGINT value is out of range in '(f1@0 * 2)'
DROP PROCEDURE spexecute04;
DROP PROCEDURE sp4;
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6( in f1 timestamp, inout f2 timestamp, out f3 timestamp, in f4 timestamp, inout f5 timestamp, out f6 timestamp, in f7 timestamp, inout f8 timestamp, out f9 timestamp, in f10 timestamp, inout f11 timestamp, out f12 timestamp)
BEGIN
set f1 = now() + 0 + f1; set f2 = now() + 0 + f2; set f3 = now() + 0 + f1;
set f4 = now() + 0 + f4; set f5 = now() + 0 + f5; set f6 = now() + 0 + f5;
set f7 = now() + 0 + f7; set f8 = now() + 0 + f8; set f9 = now() + 0 + f8;
set f10 = now() + 0 + f10; set f11 = now() + 0 + f11; set f12 = now() + 0 + f11;
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute06;
CREATE PROCEDURE spexecute06()
BEGIN
declare var1 timestamp;
declare var2 timestamp;
declare var3 timestamp;
declare var4 timestamp;
declare var5 timestamp;
declare var6 timestamp;
declare var7 timestamp;
declare var8 timestamp;
set var1 = 2.00e+13;
set var3 = 2.00e+13;
set var5 = 2.00e+13;
set var7 = 2.00e+13;
CALL sp6(2.00e+13, var1, var2, 2.00e+13, var3, var4, 2.00e+13, var5, var6, 2.00e+13, var7, var8);
END//
CALL spexecute06();
f1	f2	f3	f4	f5	f6	f7	f8	f9	f10	f11	f12
returned	returned	returned	returned	returned	returned	returned	returned	returned	returned	returned	returned
DROP PROCEDURE spexecute06;
DROP PROCEDURE sp6;
DROP PROCEDURE IF EXISTS sp07;
CREATE PROCEDURE sp07( IN  f1 BIGINT UNSIGNED,
INOUT f2 BIGINT UNSIGNED,
OUT   f3 BIGINT UNSIGNED,
IN    f4 BIGINT,
INOUT f5 BIGINT,
OUT   f6 BIGINT,
IN    f7 BIGINT,
INOUT f8 BIGINT,
OUT   f9 BIGINT,
IN    f10 BIGINT,
INOUT f11 BIGINT,
OUT   f12 BIGINT)
BEGIN
SELECT f1, f2, f3;
SELECT f4, f5, f6;
SELECT f7, f8, f9;
SELECT f10, f11, f12;
set f3 = f2;
set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10);
set f3 = (f3 * 2); set f3 = (f3 - 10); set f3 = (f3 + 10);
set f6 = f5;
set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10);
set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8;
set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10);
set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11;
set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10);
set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3;
SELECT f4, f5, f6;
SELECT f7, f8, f9;
SELECT f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute07;
CREATE PROCEDURE spexecute07()
BEGIN
declare var1 bigint unsigned;
declare var2 bigint unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 =  1.84e+19;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
SELECT var1, var2;
SELECT var3, var4;
SELECT var5, var6;
SELECT var7, var8;
CALL sp07( var1, var1, var2, var3, var3, var4,
var5, var5, var6, var7, var7, var8 );
SELECT var1, var2;
SELECT var3, var4;
SELECT var5, var6;
SELECT var7, var8;
END//
CALL spexecute07();
var1	var2
18400000000000000000	NULL
var3	var4
-9220000000000000000	NULL
var5	var6
-9220000000000000000	NULL
var7	var8
-9220000000000000000	NULL
f1	f2	f3
18400000000000000000	18400000000000000000	NULL
f4	f5	f6
-9220000000000000000	-9220000000000000000	NULL
f7	f8	f9
-9220000000000000000	-9220000000000000000	NULL
f10	f11	f12
-9220000000000000000	-9220000000000000000	NULL
ERROR 22003: BIGINT UNSIGNED value is out of range in '(f1@0 * 2)'
DROP PROCEDURE spexecute07;
DROP PROCEDURE sp07;
DROP PROCEDURE IF EXISTS sp8;
CREATE PROCEDURE sp8( in   f1 bigint unsigned zerofill,
inout f2 bigint unsigned zerofill,
out   f3 bigint unsigned zerofill,
in    f4 bigint,
inout f5 bigint,
out   f6 bigint,
in    f7 bigint,
inout f8 bigint,
out   f9 bigint,
in    f10 bigint,
inout f11 bigint,
out   f12 bigint)
BEGIN
set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10);
set f3 = (f2 * 2); set f3 = (f2 - 10); set f3 = (f2 + 10);
set f6 = f5;
set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10);
set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8;
set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10);
set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11;
set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10);
set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute08;
CREATE PROCEDURE spexecute08()
BEGIN
declare var1 bigint unsigned zerofill;
declare var2 bigint unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.84e+17;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp8(1.84e+17, var1, var2, -9.22e+18, var3, var4,
-9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute08();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute08;
DROP PROCEDURE sp8;
DROP PROCEDURE IF EXISTS sp9;
CREATE PROCEDURE sp9( in   f1 bigint zerofill,
inout f2 bigint zerofill,
out   f3 bigint zerofill,
in    f4 bigint,
inout f5 bigint,
out   f6 bigint,
in    f7 bigint,
inout f8 bigint,
out   f9 bigint,
in    f10 bigint,
inout f11 bigint,
out   f12 bigint)
BEGIN
set f3 = f2;
set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10);
set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10);
set f3 = (f2 * 2); set f3 = (f2 - 10); set f3 = (f2 + 10);
set f6 = f5;
set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10);
set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8;
set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10);
set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11;
set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10);
set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute09;
CREATE PROCEDURE spexecute09()
BEGIN
declare var1 bigint zerofill;
declare var2 bigint zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -9.22e+15;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp9(-9.22e+15, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute09();
ERROR 22003: BIGINT UNSIGNED value is out of range in '(f1@0 - 10)'
DROP PROCEDURE spexecute09;
DROP PROCEDURE sp9;
DROP PROCEDURE IF EXISTS sp10;
CREATE PROCEDURE sp10( in f1 decimal,
inout f2 decimal,
out f3 decimal,
in f4 bigint,
inout f5 bigint,
out f6 bigint,
in f7 bigint,
inout f8 bigint,
out f9 bigint,
in f10 bigint,
inout f11 bigint,
out f12 bigint)
BEGIN
set f3 = f2;
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f2 / 2); set f3 = (f2 * 2); set f3 = (f2 - 10); set f3 = (f2 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute10;
CREATE PROCEDURE spexecute10()
BEGIN
declare var1 decimal;
declare var2 decimal;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -1.00e+09;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp10(-1.00e+09, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute10();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute10;
DROP PROCEDURE sp10;
DROP PROCEDURE IF EXISTS sp11;
CREATE PROCEDURE sp11( in f1 decimal (0), inout f2 decimal (0), out f3 decimal (0), in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f3 = f2;
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f2 / 2); set f3 = (f2 * 2); set f3 = (f2 - 10); set f3 = (f2 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute11;
CREATE PROCEDURE spexecute11()
BEGIN
declare var1 decimal (0);
declare var2 decimal (0);
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = --1.00e+09;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp11(--1.00e+09, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute11();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute11;
DROP PROCEDURE sp11;
DROP PROCEDURE IF EXISTS sp12;
CREATE PROCEDURE sp12( in f1 decimal (0) unsigned, inout f2 decimal (0) unsigned, out f3 decimal (0) unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f3 = f2;
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f2 / 2); set f3 = (f2 * 2); set f3 = (f2 - 10); set f3 = (f2 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute12;
CREATE PROCEDURE spexecute12()
BEGIN
declare var1 decimal (0) unsigned;
declare var2 decimal (0) unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 99999999999;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp12(99999999999, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute12();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute12;
DROP PROCEDURE sp12;
DROP PROCEDURE IF EXISTS sp13;
CREATE PROCEDURE sp13( in f1 decimal (0, 0) zerofill, inout f2 decimal (0, 0) zerofill, out f3 decimal (0, 0) zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f3 = f2;
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f2 / 2); set f3 = (f2 * 2); set f3 = (f2 - 10); set f3 = (f2 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute13;
CREATE PROCEDURE spexecute13()
BEGIN
declare var1 decimal (0, 0) zerofill;
declare var2 decimal (0, 0) zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -1.00e+09;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp13(-1.00e+09, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute13();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute13;
DROP PROCEDURE sp13;
DROP PROCEDURE IF EXISTS sp14;
CREATE PROCEDURE sp14( in f1 decimal (63, 30), inout f2 decimal (63, 30), out f3 decimal (63, 30), in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f3 = f2;
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f2 / 2); set f3 = (f2 * 2); set f3 = (f2 - 10); set f3 = (f2 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute14;
CREATE PROCEDURE spexecute14()
BEGIN
declare var1 decimal (63, 30);
declare var2 decimal (63, 30);
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -1.00e+21;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp14(-1.00e+21, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute14();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute14;
DROP PROCEDURE sp14;
DROP PROCEDURE IF EXISTS sp15;
CREATE PROCEDURE sp15( in f1 double, inout f2 double, out f3 double, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f2 / 2); set f3 = (f2 * 2); set f3 = (f2 - 10); set f3 = (f2 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute15;
CREATE PROCEDURE spexecute15()
BEGIN
declare var1 double;
declare var2 double;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp15(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute15();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute15;
DROP PROCEDURE sp15;
DROP PROCEDURE IF EXISTS sp16;
CREATE PROCEDURE sp16( in f1 double zerofill, inout f2 double zerofill, out f3 double zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f2 / 2); set f3 = (f2 * 2); set f3 = (f2 - 10); set f3 = (f2 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute16;
CREATE PROCEDURE spexecute16()
BEGIN
declare var1 double zerofill;
declare var2 double zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp16(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute16();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute16;
DROP PROCEDURE sp16;
DROP PROCEDURE IF EXISTS sp17;
CREATE PROCEDURE sp17( in f1 double unsigned, inout f2 double unsigned, out f3 double unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f2 / 2); set f3 = (f2 * 2); set f3 = (f2 - 10); set f3 = (f2 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute17;
CREATE PROCEDURE spexecute17()
BEGIN
declare var1 double unsigned;
declare var2 double unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp17(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute17();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute17;
DROP PROCEDURE sp17;
DROP PROCEDURE IF EXISTS sp18;
CREATE PROCEDURE sp18( in f1 double unsigned zerofill, inout f2 double unsigned zerofill, out f3 double unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f2 / 2); set f3 = (f2 * 2); set f3 = (f2 - 10); set f3 = (f2 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute18;
CREATE PROCEDURE spexecute18()
BEGIN
declare var1 double unsigned zerofill;
declare var2 double unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp18(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute18();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute18;
DROP PROCEDURE sp18;
DROP PROCEDURE IF EXISTS sp19;
CREATE PROCEDURE sp19( in f1 float unsigned, inout f2 float unsigned, out f3 float unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f2 / 2); set f3 = (f2 * 2); set f3 = (f2 - 10); set f3 = (f2 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute19;
CREATE PROCEDURE spexecute19()
BEGIN
declare var1 float unsigned;
declare var2 float unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp19(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute19();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute19;
DROP PROCEDURE sp19;
DROP PROCEDURE IF EXISTS sp20;
CREATE PROCEDURE sp20( in f1 float unsigned zerofill, inout f2 float unsigned zerofill, out f3 float unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f2 / 2); set f3 = (f2 * 2); set f3 = (f2 - 10); set f3 = (f2 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute20;
CREATE PROCEDURE spexecute20()
BEGIN
declare var1 float unsigned zerofill;
declare var2 float unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp20(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute20();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute20;
DROP PROCEDURE sp20;
DROP PROCEDURE IF EXISTS sp21;
CREATE PROCEDURE sp21( in f1 float zerofill, inout f2 float zerofill, out f3 float zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f2 / 2); set f3 = (f2 * 2); set f3 = (f2 - 10); set f3 = (f2 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute21;
CREATE PROCEDURE spexecute21()
BEGIN
declare var1 float zerofill;
declare var2 float zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp21(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute21();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute21;
DROP PROCEDURE sp21;
DROP PROCEDURE IF EXISTS sp22;
CREATE PROCEDURE sp22( in f1 float(0), inout f2 float(0), out f3 float(0), in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f2 / 2); set f3 = (f2 * 2); set f3 = (f2 - 10); set f3 = (f2 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute22;
CREATE PROCEDURE spexecute22()
BEGIN
declare var1 float(0);
declare var2 float(0);
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp22(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute22();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute22;
DROP PROCEDURE sp22;
DROP PROCEDURE IF EXISTS sp23;
CREATE PROCEDURE sp23( in f1 numeric, inout f2 numeric, out f3 numeric, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f2 / 2); set f3 = (f2 * 2); set f3 = (f2 - 10); set f3 = (f2 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute23;
CREATE PROCEDURE spexecute23()
BEGIN
declare var1 numeric;
declare var2 numeric;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -999999999;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp23(-999999999, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute23();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute23;
DROP PROCEDURE sp23;
DROP PROCEDURE IF EXISTS sp24;
CREATE PROCEDURE sp24( in f1 real, inout f2 real, out f3 real, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f2 / 2); set f3 = (f2 * 2); set f3 = (f2 - 10); set f3 = (f2 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute24;
CREATE PROCEDURE spexecute24()
BEGIN
declare var1 real;
declare var2 real;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.1;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp24(1.1, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute24();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute24;
DROP PROCEDURE sp24;
DROP PROCEDURE IF EXISTS sp25;
CREATE PROCEDURE sp25( in f1 smallint, inout f2 smallint, out f3 smallint, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f2 * 2); set f3 = (f2 - 10); set f3 = (f2 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute25;
CREATE PROCEDURE spexecute25()
BEGIN
declare var1 smallint;
declare var2 smallint;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -32701;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp25(-32701, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute25();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute25;
DROP PROCEDURE sp25;
DROP PROCEDURE IF EXISTS sp26;
CREATE PROCEDURE sp26( in f1 date, inout f2 date, out f3 date, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = adddate(f1, interval 31 day); set f2 = adddate(f2, interval 31 day); set f3 = adddate(f2, interval 31 day);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute26;
CREATE PROCEDURE spexecute26()
BEGIN
declare var1 date;
declare var2 date;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 =  '1997-12-31';
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp26( '1997-12-31', var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute26();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute26;
DROP PROCEDURE sp26;
DROP PROCEDURE IF EXISTS sp27;
CREATE PROCEDURE sp27( in f1 time, inout f2 time, out f3 time, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = addtime(f1, '02:00:00.999998'); set f2 = addtime(f2, '02:00:00.999998'); set f3 = addtime(f2, '02:00:00.999998');
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute27;
CREATE PROCEDURE spexecute27()
BEGIN
declare var1 time;
declare var2 time;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 =  '23:59:59.999999';
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp27( '23:59:59.999999', var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute27();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute27;
DROP PROCEDURE sp27;
DROP PROCEDURE IF EXISTS sp28;
CREATE PROCEDURE sp28( in f1 datetime, inout f2 datetime, out f3 datetime, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = addtime(f1, '1 1:1:1.000002'); set f2 = addtime(f2, '1 1:1:1.000002'); set f3 = addtime(f1, '1 1:1:1.000002');
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute28;
CREATE PROCEDURE spexecute28()
BEGIN
declare var1 datetime;
declare var2 datetime;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = '1997-12-31 23:59:59.999999';
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp28('1997-12-31 23:59:59.999999', var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute28();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute28;
DROP PROCEDURE sp28;
DROP PROCEDURE IF EXISTS sp29;
CREATE PROCEDURE sp29( in f1 float(0) unsigned, inout f2 float(0) unsigned, out f3 float(0) unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute29;
CREATE PROCEDURE spexecute29()
BEGIN
declare var1 float(0) unsigned;
declare var2 float(0) unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp29(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute29();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute29;
DROP PROCEDURE sp29;
DROP PROCEDURE IF EXISTS sp30;
CREATE PROCEDURE sp30( in f1 float(0) zerofill, inout f2 float(0) zerofill, out f3 float(0) zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute30;
CREATE PROCEDURE spexecute30()
BEGIN
declare var1 float(0) zerofill;
declare var2 float(0) zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp30(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute30();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute30;
DROP PROCEDURE sp30;
DROP PROCEDURE IF EXISTS sp31;
CREATE PROCEDURE sp31( in f1 float(23), inout f2 float(23), out f3 float(23), in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute31;
CREATE PROCEDURE spexecute31()
BEGIN
declare var1 float(23);
declare var2 float(23);
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp31(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute31();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute31;
DROP PROCEDURE sp31;
DROP PROCEDURE IF EXISTS sp32;
CREATE PROCEDURE sp32( in f1 float(23) unsigned, inout f2 float(23) unsigned, out f3 float(23) unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute32;
CREATE PROCEDURE spexecute32()
BEGIN
declare var1 float(23) unsigned;
declare var2 float(23) unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp32(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute32();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute32;
DROP PROCEDURE sp32;
DROP PROCEDURE IF EXISTS sp33;
CREATE PROCEDURE sp33( in f1 float(23) zerofill, inout f2 float(23) zerofill, out f3 float(23) zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute33;
CREATE PROCEDURE spexecute33()
BEGIN
declare var1 float(23) zerofill;
declare var2 float(23) zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp33(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute33();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute33;
DROP PROCEDURE sp33;
DROP PROCEDURE IF EXISTS sp34;
CREATE PROCEDURE sp34( in f1 float(24), inout f2 float(24), out f3 float(24), in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute34;
CREATE PROCEDURE spexecute34()
BEGIN
declare var1 float(24);
declare var2 float(24);
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp34(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute34();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute34;
DROP PROCEDURE sp34;
DROP PROCEDURE IF EXISTS sp35;
CREATE PROCEDURE sp35( in f1 float(24) unsigned, inout f2 float(24) unsigned, out f3 float(24) unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute35;
CREATE PROCEDURE spexecute35()
BEGIN
declare var1 float(24) unsigned;
declare var2 float(24) unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp35(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute35();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute35;
DROP PROCEDURE sp35;
DROP PROCEDURE IF EXISTS sp36;
CREATE PROCEDURE sp36( in f1 float(24) zerofill, inout f2 float(24) zerofill, out f3 float(24) zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute36;
CREATE PROCEDURE spexecute36()
BEGIN
declare var1 float(24) zerofill;
declare var2 float(24) zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp36(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute36();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute36;
DROP PROCEDURE sp36;
DROP PROCEDURE IF EXISTS sp37;
CREATE PROCEDURE sp37( in f1 float(53), inout f2 float(53), out f3 float(53), in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute37;
CREATE PROCEDURE spexecute37()
BEGIN
declare var1 float(53);
declare var2 float(53);
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp37(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute37();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute37;
DROP PROCEDURE sp37;
DROP PROCEDURE IF EXISTS sp38;
CREATE PROCEDURE sp38( in f1 float(53) unsigned, inout f2 float(53) unsigned, out f3 float(53) unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute38;
CREATE PROCEDURE spexecute38()
BEGIN
declare var1 float(53) unsigned;
declare var2 float(53) unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp38(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute38();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute38;
DROP PROCEDURE sp38;
DROP PROCEDURE IF EXISTS sp39;
CREATE PROCEDURE sp39( in f1 float(53) zerofill, inout f2 float(53) zerofill, out f3 float(53) zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute39;
CREATE PROCEDURE spexecute39()
BEGIN
declare var1 float(53) zerofill;
declare var2 float(53) zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp39(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute39();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute39;
DROP PROCEDURE sp39;
DROP PROCEDURE IF EXISTS sp40;
CREATE PROCEDURE sp40( in f1 real unsigned, inout f2 real unsigned, out f3 real unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute40;
CREATE PROCEDURE spexecute40()
BEGIN
declare var1 real unsigned;
declare var2 real unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.1;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp40(1.1, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute40();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute40;
DROP PROCEDURE sp40;
DROP PROCEDURE IF EXISTS sp41;
CREATE PROCEDURE sp41( in f1 real unsigned zerofill, inout f2 real unsigned zerofill, out f3 real unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute41;
CREATE PROCEDURE spexecute41()
BEGIN
declare var1 real unsigned zerofill;
declare var2 real unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.1;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp41(1.1, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute41();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute41;
DROP PROCEDURE sp41;
DROP PROCEDURE IF EXISTS sp42;
CREATE PROCEDURE sp42( in f1 real zerofill, inout f2 real zerofill, out f3 real zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute42;
CREATE PROCEDURE spexecute42()
BEGIN
declare var1 real zerofill;
declare var2 real zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.1;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp42(1.1, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute42();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute42;
DROP PROCEDURE sp42;
DROP PROCEDURE IF EXISTS sp43;
CREATE PROCEDURE sp43( in f1 numeric (0), inout f2 numeric (0), out f3 numeric (0), in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute43;
CREATE PROCEDURE spexecute43()
BEGIN
declare var1 numeric (0);
declare var2 numeric (0);
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -999999999;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp43(-999999999, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute43();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute43;
DROP PROCEDURE sp43;
DROP PROCEDURE IF EXISTS sp44;
CREATE PROCEDURE sp44( in f1 numeric (0) unsigned, inout f2 numeric (0) unsigned, out f3 numeric (0) unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute44;
CREATE PROCEDURE spexecute44()
BEGIN
declare var1 numeric (0) unsigned;
declare var2 numeric (0) unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 9999999999;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp44(9999999999, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute44();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute44;
DROP PROCEDURE sp44;
DROP PROCEDURE IF EXISTS sp45;
CREATE PROCEDURE sp45( in f1 numeric (0) zerofill, inout f2 numeric (0) zerofill, out f3 numeric (0) zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute45;
CREATE PROCEDURE spexecute45()
BEGIN
declare var1 numeric (0) zerofill;
declare var2 numeric (0) zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -99999999;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp45(-99999999, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute45();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute45;
DROP PROCEDURE sp45;
DROP PROCEDURE IF EXISTS sp46;
CREATE PROCEDURE sp46( in f1 numeric (0, 0), inout f2 numeric (0, 0), out f3 numeric (0, 0), in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute46;
CREATE PROCEDURE spexecute46()
BEGIN
declare var1 numeric (0, 0);
declare var2 numeric (0, 0);
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -999999999;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp46(-999999999, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute46();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute46;
DROP PROCEDURE sp46;
DROP PROCEDURE IF EXISTS sp47;
CREATE PROCEDURE sp47( in f1 numeric (0, 0) unsigned, inout f2 numeric (0, 0) unsigned, out f3 numeric (0, 0) unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute47;
CREATE PROCEDURE spexecute47()
BEGIN
declare var1 numeric (0, 0) unsigned;
declare var2 numeric (0, 0) unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 9999999999;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp47(9999999999, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute47();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute47;
DROP PROCEDURE sp47;
DROP PROCEDURE IF EXISTS sp48;
CREATE PROCEDURE sp48( in f1 numeric (0, 0) zerofill, inout f2 numeric (0, 0) zerofill, out f3 numeric (0, 0) zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute48;
CREATE PROCEDURE spexecute48()
BEGIN
declare var1 numeric (0, 0) zerofill;
declare var2 numeric (0, 0) zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -99999999;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp48(-99999999, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute48();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute48;
DROP PROCEDURE sp48;
DROP PROCEDURE IF EXISTS sp49;
CREATE PROCEDURE sp49( in f1 numeric unsigned, inout f2 numeric unsigned, out f3 numeric unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute49;
CREATE PROCEDURE spexecute49()
BEGIN
declare var1 numeric unsigned;
declare var2 numeric unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -999999999;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp49(-999999999, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute49();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute49;
DROP PROCEDURE sp49;
DROP PROCEDURE IF EXISTS sp50;
CREATE PROCEDURE sp50( in f1 numeric unsigned zerofill, inout f2 numeric unsigned zerofill, out f3 numeric unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute50;
CREATE PROCEDURE spexecute50()
BEGIN
declare var1 numeric unsigned zerofill;
declare var2 numeric unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 9999999999;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp50(9999999999, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute50();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute50;
DROP PROCEDURE sp50;
DROP PROCEDURE IF EXISTS sp51;
CREATE PROCEDURE sp51( in f1 numeric zerofill, inout f2 numeric zerofill, out f3 numeric zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute51;
CREATE PROCEDURE spexecute51()
BEGIN
declare var1 numeric zerofill;
declare var2 numeric zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -99999999;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp51(-99999999, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute51();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute51;
DROP PROCEDURE sp51;
DROP PROCEDURE IF EXISTS sp52;
CREATE PROCEDURE sp52( in f1 numeric (63, 30), inout f2 numeric (63, 30), out f3 numeric (63, 30), in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute52;
CREATE PROCEDURE spexecute52()
BEGIN
declare var1 numeric (63, 30);
declare var2 numeric (63, 30);
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -1.00e+22;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp52(-1.00e+20, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute52();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute52;
DROP PROCEDURE sp52;
DROP PROCEDURE IF EXISTS sp53;
CREATE PROCEDURE sp53( in f1 numeric (64), inout f2 numeric (64), out f3 numeric (64), in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute53;
CREATE PROCEDURE spexecute53()
BEGIN
declare var1 numeric (64);
declare var2 numeric (64);
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -1.00e+22;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp53(-1.00e+20, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute53();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute53;
DROP PROCEDURE sp53;
DROP PROCEDURE IF EXISTS sp54;
CREATE PROCEDURE sp54( in f1 numeric (64) unsigned, inout f2 numeric (64) unsigned, out f3 numeric (64) unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute54;
CREATE PROCEDURE spexecute54()
BEGIN
declare var1 numeric (64) unsigned;
declare var2 numeric (64) unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+22;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp54(1.00e+20, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute54();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute54;
DROP PROCEDURE sp54;
DROP PROCEDURE IF EXISTS sp55;
CREATE PROCEDURE sp55( in f1 numeric (64) zerofill, inout f2 numeric (64) zerofill, out f3 numeric (64) zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute55;
CREATE PROCEDURE spexecute55()
BEGIN
declare var1 numeric (64) zerofill;
declare var2 numeric (64) zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -1.00e+22;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp55(-1.00e+20, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute55();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute55;
DROP PROCEDURE sp55;
DROP PROCEDURE IF EXISTS sp56;
CREATE PROCEDURE sp56( in f1 year, inout f2 year, out f3 year, in f4 year, inout f5 year, out f6 year, in f7 year, inout f8 year, out f9 year, in f10 year, inout f11 year, out f12 year)
BEGIN
set f1 = f1 + 10; set f2 = f2 + 10; set f3 = f2 + 10;
set f4 = f4 + 10; set f5 = f5 + 10; set f6 = f5 + 10;
set f7 = f7 + 10; set f8 = f8 + 10; set f9 = f8 + 10;
set f10= f10+ 10; set f11 = f11 + 10; set f12 = f11 + 10;
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute56;
CREATE PROCEDURE spexecute56()
BEGIN
declare var1 year;
declare var2 year;
declare var3 year;
declare var4 year;
declare var5 year;
declare var6 year;
declare var7 year;
declare var8 year;
set var1 = 51;
set var3 = 51;
set var5 = 51;
set var7 = 51;
CALL sp56(51, var1, var2, 51, var3, var4, 51, var5, var6, 51, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute56();
f1	f2	f3	f4	f5	f6	f7	f8	f9	f10	f11	f12
2061	2061	2071	2061	2061	2071	2061	2061	2071	2061	2061	2071
var1	var2	var3	var4	var5	var6	var7	var8
2061	2071	2061	2071	2061	2071	2061	2071
DROP PROCEDURE spexecute56;
DROP PROCEDURE sp56;
DROP PROCEDURE IF EXISTS sp57;
CREATE PROCEDURE sp57( in f1 year(4), inout f2 year(4), out f3 year(4), in f4 year(4), inout f5 year(4), out f6 year(4), in f7 year(4), inout f8 year(4), out f9 year(4), in f10 year(4), inout f11 year(4), out f12 year(4))
BEGIN
set f1 = f1 + 51; set f2 = f2 + 51; set f3 = f2 + 51;
set f4 = f4 + 51; set f5 = f5 + 51; set f6 = f5 + 51;
set f7 = f7 + 51; set f8 = f8 + 51; set f9 = f8 + 51;
set f10 = f10 + 51; set f11 = f11 + 51; set f12 = f11 + 51;
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute57;
CREATE PROCEDURE spexecute57()
BEGIN
declare var1 year(4);
declare var2 year(4);
declare var3 year(4);
declare var4 year(4);
declare var5 year(4);
declare var6 year(4);
declare var7 year(4);
declare var8 year(4);
set var1 = 1982;
set var3 = 1982;
set var5 = 1982;
set var7 = 1982;
CALL sp57(1982, var1, var2, 1982, var3, var4, 1982, var5, var6, 1982, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute57();
f1	f2	f3	f4	f5	f6	f7	f8	f9	f10	f11	f12
2033	2033	2084	2033	2033	2084	2033	2033	2084	2033	2033	2084
var1	var2	var3	var4	var5	var6	var7	var8
2033	2084	2033	2084	2033	2084	2033	2084
DROP PROCEDURE spexecute57;
DROP PROCEDURE sp57;
DROP PROCEDURE IF EXISTS sp58;
CREATE PROCEDURE sp58( in f1 text, inout f2 text, out f3 text, in f4 text, inout f5 text, out f6 text, in f7 text, inout f8 text, out f9 text, in f10 text, inout f11 text, out f12 text)
BEGIN
set f1 = concat('hello', f1); set f2 = concat('hello', f2); set f3 = concat('hello', f2);
set f4 = concat('hello', f4); set f5 = concat('hello', f5); set f6 = concat('hello', f5);
set f7 = concat('hello', f7); set f8 = concat('hello', f8); set f9 = concat('hello', f8);
set f10 = concat('hello', f10); set f11 = concat('hello', f11); set f12 = concat('hello', f11);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute58;
CREATE PROCEDURE spexecute58()
BEGIN
declare var1 text;
declare var2 text;
declare var3 text;
declare var4 text;
declare var5 text;
declare var6 text;
declare var7 text;
declare var8 text;
set var1 =  'world';
set var3 =  'world';
set var5 =  'world';
set var7 =  'world';
CALL sp58( 'world', var1, var2, 'world', var3, var4, 'world', var5, var6, 'world', var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute58();
f1	f2	f3	f4	f5	f6	f7	f8	f9	f10	f11	f12
helloworld	helloworld	hellohelloworld	helloworld	helloworld	hellohelloworld	helloworld	helloworld	hellohelloworld	helloworld	helloworld	hellohelloworld
var1	var2	var3	var4	var5	var6	var7	var8
helloworld	hellohelloworld	helloworld	hellohelloworld	helloworld	hellohelloworld	helloworld	hellohelloworld
DROP PROCEDURE spexecute58;
DROP PROCEDURE sp58;
DROP PROCEDURE IF EXISTS sp59;
CREATE PROCEDURE sp59( in f1 tinytext, inout f2 tinytext, out f3 tinytext, in f4 tinytext, inout f5 tinytext, out f6 tinytext, in f7 tinytext, inout f8 tinytext, out f9 tinytext, in f10 tinytext, inout f11 tinytext, out f12 tinytext)
BEGIN
set f1 = concat('hello', f1); set f2 = concat('hello', f2); set f3 = concat('hello', f2);
set f4 = concat('hello', f4); set f5 = concat('hello', f5); set f6 = concat('hello', f5);
set f7 = concat('hello', f7); set f8 = concat('hello', f8); set f9 = concat('hello', f8);
set f10 = concat('hello', f10); set f11 = concat('hello', f11); set f12 = concat('hello', f11);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute59;
CREATE PROCEDURE spexecute59()
BEGIN
declare var1 tinytext;
declare var2 tinytext;
declare var3 tinytext;
declare var4 tinytext;
declare var5 tinytext;
declare var6 tinytext;
declare var7 tinytext;
declare var8 tinytext;
set var1 =  'world';
set var3 =  'world';
set var5 =  'world';
set var7 =  'world';
CALL sp59( 'world', var1, var2, 'world', var3, var4, 'world', var5, var6, 'world', var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute59();
f1	f2	f3	f4	f5	f6	f7	f8	f9	f10	f11	f12
helloworld	helloworld	hellohelloworld	helloworld	helloworld	hellohelloworld	helloworld	helloworld	hellohelloworld	helloworld	helloworld	hellohelloworld
var1	var2	var3	var4	var5	var6	var7	var8
helloworld	hellohelloworld	helloworld	hellohelloworld	helloworld	hellohelloworld	helloworld	hellohelloworld
DROP PROCEDURE spexecute59;
DROP PROCEDURE sp59;
DROP PROCEDURE IF EXISTS sp60;
CREATE PROCEDURE sp60( in f1 char, inout f2 char, out f3 char, in f4 char, inout f5 char, out f6 char, in f7 char, inout f8 char, out f9 char, in f10 char, inout f11 char, out f12 char)
BEGIN
set f1 = concat('a', f1); set f2 = concat('a', f2); set f3 = concat('a', f1);
set f4 = concat('a', f4); set f5 = concat('a', f5); set f6 = concat('a', f5);
set f7 = concat('a', f7); set f8 = concat('a', f8); set f9 = concat('a', f8);
set f10 = concat('a', f10); set f11 = concat('a', f11); set f12 = concat('a', f11);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute60;
CREATE PROCEDURE spexecute60()
BEGIN
declare var1 char;
declare var2 char;
declare var3 char;
declare var4 char;
declare var5 char;
declare var6 char;
declare var7 char;
declare var8 char;
set var1 =  'h';
set var3 =  'h';
set var5 =  'h';
set var7 =  'h';
CALL sp60( 'h', var1, var2, 'h', var3, var4, 'h', var5, var6, 'h', var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute60();
f1	f2	f3	f4	f5	f6	f7	f8	f9	f10	f11	f12
a	a	a	a	a	a	a	a	a	a	a	a
var1	var2	var3	var4	var5	var6	var7	var8
a	a	a	a	a	a	a	a
DROP PROCEDURE spexecute60;
DROP PROCEDURE sp60;
DROP PROCEDURE IF EXISTS sp61;
CREATE PROCEDURE sp61( in f1 char ascii, inout f2 char ascii, out f3 char ascii, in f4 char ascii, inout f5 char ascii, out f6 char ascii, in f7 char ascii, inout f8 char ascii, out f9 char ascii, in f10 char ascii, inout f11 char ascii, out f12 char ascii)
BEGIN
set f1 = concat('a', f1); set f2 = concat('a', f2); set f3 = concat('a', f2);
set f4 = concat('a', f4); set f5 = concat('a', f5); set f6 = concat('a', f4);
set f7 = concat('a', f7); set f8 = concat('a', f8); set f9 = concat('a', f9);
set f10 = concat('a', f10); set f11 = concat('a', f11); set f12 = concat('a', f11);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute61;
CREATE PROCEDURE spexecute61()
BEGIN
declare var1 char ascii;
declare var2 char ascii;
declare var3 char ascii;
declare var4 char ascii;
declare var5 char ascii;
declare var6 char ascii;
declare var7 char ascii;
declare var8 char ascii;
set var1 =  'h';
set var3 =  'h';
set var5 =  'h';
set var7 =  'h';
CALL sp61( 'h', var1, var2, 'h', var3, var4, 'h', var5, var6, 'h', var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute61();
f1	f2	f3	f4	f5	f6	f7	f8	f9	f10	f11	f12
a	a	a	a	a	a	a	a	NULL	a	a	a
var1	var2	var3	var4	var5	var6	var7	var8
a	a	a	a	a	NULL	a	a
DROP PROCEDURE spexecute61;
DROP PROCEDURE sp61;
DROP PROCEDURE IF EXISTS sp62;
CREATE PROCEDURE sp62( in f1 longtext, inout f2 longtext, out f3 longtext, in f4 longtext, inout f5 longtext, out f6 longtext, in f7 longtext, inout f8 longtext, out f9 longtext, in f10 longtext, inout f11 longtext, out f12 longtext)
BEGIN
set f1 = concat('hello', f1); set f2 = concat('hello', f2); set f3 = concat('hello', f2);
set f4 = concat('hello', f4); set f5 = concat('hello', f5); set f6 = concat('hello', f5);
set f7 = concat('hello', f7); set f8 = concat('hello', f8); set f9 = concat('hello', f8);
set f10 = concat('hello', f10); set f11 = concat('hello', f11); set f12 = concat('hello', f11);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute62;
CREATE PROCEDURE spexecute62()
BEGIN
declare var1 longtext;
declare var2 longtext;
declare var3 longtext;
declare var4 longtext;
declare var5 longtext;
declare var6 longtext;
declare var7 longtext;
declare var8 longtext;
set var1 =  'world';
set var3 =  'world';
set var5 =  'world';
set var7 =  'world';
CALL sp62( 'world', var1, var2, 'world', var3, var4, 'world', var5, var6, 'world', var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute62();
f1	f2	f3	f4	f5	f6	f7	f8	f9	f10	f11	f12
helloworld	helloworld	hellohelloworld	helloworld	helloworld	hellohelloworld	helloworld	helloworld	hellohelloworld	helloworld	helloworld	hellohelloworld
var1	var2	var3	var4	var5	var6	var7	var8
helloworld	hellohelloworld	helloworld	hellohelloworld	helloworld	hellohelloworld	helloworld	hellohelloworld
DROP PROCEDURE spexecute62;
DROP PROCEDURE sp62;
DROP PROCEDURE IF EXISTS sp63;
CREATE PROCEDURE sp63( in f1 mediumtext, inout f2 mediumtext, out f3 mediumtext, in f4 mediumtext, inout f5 mediumtext, out f6 mediumtext, in f7 mediumtext, inout f8 mediumtext, out f9 mediumtext, in f10 mediumtext, inout f11 mediumtext, out f12 mediumtext)
BEGIN
set f1 = concat('hello', f1); set f2 = concat('hello', f2); set f3 = concat('hello', f3);
set f4 = concat('hello', f4); set f5 = concat('hello', f5); set f6 = concat('hello', f5);
set f7 = concat('hello', f7); set f8 = concat('hello', f8); set f9 = concat('hello', f8);
set f10 = concat('hello', f10); set f11 = concat('hello', f11); set f12 = concat('hello', f11);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute63;
CREATE PROCEDURE spexecute63()
BEGIN
declare var1 mediumtext;
declare var2 mediumtext;
declare var3 mediumtext;
declare var4 mediumtext;
declare var5 mediumtext;
declare var6 mediumtext;
declare var7 mediumtext;
declare var8 mediumtext;
set var1 =  'world';
set var3 =  'world';
set var5 =  'world';
set var7 =  'world';
CALL sp63( 'world', var1, var2, 'world', var3, var4, 'world', var5, var6, 'world', var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute63();
f1	f2	f3	f4	f5	f6	f7	f8	f9	f10	f11	f12
helloworld	helloworld	NULL	helloworld	helloworld	hellohelloworld	helloworld	helloworld	hellohelloworld	helloworld	helloworld	hellohelloworld
var1	var2	var3	var4	var5	var6	var7	var8
helloworld	NULL	helloworld	hellohelloworld	helloworld	hellohelloworld	helloworld	hellohelloworld
DROP PROCEDURE spexecute63;
DROP PROCEDURE sp63;
DROP PROCEDURE IF EXISTS sp64;
CREATE PROCEDURE sp64( in f1 decimal, inout f2 decimal, out f3 decimal, in f4 decimal, inout f5 decimal, out f6 decimal, in f7 decimal, inout f8 decimal, out f9 decimal, in f10 decimal, inout f11 decimal, out f12 decimal)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f2 / 2); set f3 = (f2 * 2); set f3 = (f2 - 10); set f3 = (f2 + 10);
set f4 = (f4 / 2); set f4 = (f4 * 2); set f4 = (f4 - 10); set f4 = (f4 + 10); set f5 = (f5 / 2); set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f5 / 2); set f6 = (f5 * 2); set f6 = (f5 - 10); set f6 = (f5 + 10);
set f7 = (f7 / 2); set f7 = (f7 * 2); set f7 = (f7 - 10); set f7 = (f7 + 10); set f8 = (f8 / 2); set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f8 / 2); set f9 = (f8 * 2); set f9 = (f8 - 10); set f9 = (f8 + 10);
set f10 = (f10 / 2); set f10 = (f10 * 2); set f10 = (f10 - 10); set f10 = (f10 + 10); set f11 = (f11 / 2); set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f11 / 2); set f12 = (f11 * 2); set f12 = (f11 - 10); set f12 = (f11 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute64;
CREATE PROCEDURE spexecute64()
BEGIN
declare var1 decimal;
declare var2 decimal;
declare var3 decimal;
declare var4 decimal;
declare var5 decimal;
declare var6 decimal;
declare var7 decimal;
declare var8 decimal;
set var1 = --1.00e+09;
set var3 = --1.00e+09;
set var5 = --1.00e+09;
set var7 = --1.00e+09;
CALL sp64(--1.00e+09, var1, var2, --1.00e+09, var3, var4, --1.00e+09, var5, var6, --1.00e+09, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute64();
f1	f2	f3	f4	f5	f6	f7	f8	f9	f10	f11	f12
1000000000	1000000000	1000000010	1000000000	1000000000	1000000010	1000000000	1000000000	1000000010	1000000000	1000000000	1000000010
var1	var2	var3	var4	var5	var6	var7	var8
1000000000	1000000010	1000000000	1000000010	1000000000	1000000010	1000000000	1000000010
DROP PROCEDURE spexecute64;
DROP PROCEDURE sp64;
DROP PROCEDURE IF EXISTS sp65;
CREATE PROCEDURE sp65( in f1 decimal (0, 0) unsigned zerofill, inout f2 decimal (0, 0) unsigned zerofill, out f3 decimal (0, 0) unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute65;
CREATE PROCEDURE spexecute65()
BEGIN
declare var1 decimal (0, 0) unsigned zerofill;
declare var2 decimal (0, 0) unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 999999999;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp65(999999999, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute65();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute65;
DROP PROCEDURE sp65;
DROP PROCEDURE IF EXISTS sp66;
CREATE PROCEDURE sp66( in f1 decimal (63, 30) unsigned, inout f2 decimal (63, 30) unsigned, out f3 decimal (63, 30) unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute66;
CREATE PROCEDURE spexecute66()
BEGIN
declare var1 decimal (63, 30) unsigned;
declare var2 decimal (63, 30) unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+16;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp66(1.00e+16, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute66();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute66;
DROP PROCEDURE sp66;
DROP PROCEDURE IF EXISTS sp67;
CREATE PROCEDURE sp67( in f1 decimal (63, 30) unsigned zerofill, inout f2 decimal (63, 30) unsigned zerofill, out f3 decimal (63, 30) unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute67;
CREATE PROCEDURE spexecute67()
BEGIN
declare var1 decimal (63, 30) unsigned zerofill;
declare var2 decimal (63, 30) unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+16;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp67(1.00e+16, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute67();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute67;
DROP PROCEDURE sp67;
DROP PROCEDURE IF EXISTS sp68;
CREATE PROCEDURE sp68( in f1 decimal (63, 30) zerofill, inout f2 decimal (63, 30) zerofill, out f3 decimal (63, 30) zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute68;
CREATE PROCEDURE spexecute68()
BEGIN
declare var1 decimal (63, 30) zerofill;
declare var2 decimal (63, 30) zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -1.00e+21;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp68(-1.00e+21, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute68();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute68;
DROP PROCEDURE sp68;
DROP PROCEDURE IF EXISTS sp69;
CREATE PROCEDURE sp69( in f1 decimal (64), inout f2 decimal (64), out f3 decimal (64), in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute69;
CREATE PROCEDURE spexecute69()
BEGIN
declare var1 decimal (64);
declare var2 decimal (64);
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -1.00e+22;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp69(-1.00e+20, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute69();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute69;
DROP PROCEDURE sp69;
DROP PROCEDURE IF EXISTS sp70;
CREATE PROCEDURE sp70( in f1 decimal (64) unsigned, inout f2 decimal (64) unsigned, out f3 decimal (64) unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute70;
CREATE PROCEDURE spexecute70()
BEGIN
declare var1 decimal (64) unsigned;
declare var2 decimal (64) unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+22;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp70(1.00e+20, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute70();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute70;
DROP PROCEDURE sp70;
DROP PROCEDURE IF EXISTS sp71;
CREATE PROCEDURE sp71( in f1 decimal (64) unsigned zerofill, inout f2 decimal (64) unsigned zerofill, out f3 decimal (64) unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute71;
CREATE PROCEDURE spexecute71()
BEGIN
declare var1 decimal (64) unsigned zerofill;
declare var2 decimal (64) unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+22;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp71(1.00e+20, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute71();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute71;
DROP PROCEDURE sp71;
DROP PROCEDURE IF EXISTS sp72;
CREATE PROCEDURE sp72( in f1 decimal (64) zerofill, inout f2 decimal (64) zerofill, out f3 decimal (64) zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute72;
CREATE PROCEDURE spexecute72()
BEGIN
declare var1 decimal (64) zerofill;
declare var2 decimal (64) zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp72(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute72();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute72;
DROP PROCEDURE sp72;
DROP PROCEDURE IF EXISTS sp73;
CREATE PROCEDURE sp73( in f1 decimal unsigned, inout f2 decimal unsigned, out f3 decimal unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute73;
CREATE PROCEDURE spexecute73()
BEGIN
declare var1 decimal unsigned;
declare var2 decimal unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp73(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute73();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute73;
DROP PROCEDURE sp73;
DROP PROCEDURE IF EXISTS sp74;
CREATE PROCEDURE sp74( in f1 decimal unsigned zerofill, inout f2 decimal unsigned zerofill, out f3 decimal unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute74;
CREATE PROCEDURE spexecute74()
BEGIN
declare var1 decimal unsigned zerofill;
declare var2 decimal unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp74(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute74();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute74;
DROP PROCEDURE sp74;
DROP PROCEDURE IF EXISTS sp75;
CREATE PROCEDURE sp75( in f1 decimal zerofill, inout f2 decimal zerofill, out f3 decimal zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute75;
CREATE PROCEDURE spexecute75()
BEGIN
declare var1 decimal zerofill;
declare var2 decimal zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -1.00e+09;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp75(-1.00e+09, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute75();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute75;
DROP PROCEDURE sp75;
DROP PROCEDURE IF EXISTS sp76;
CREATE PROCEDURE sp76( in f1 float(0) unsigned zerofill, inout f2 float(0) unsigned zerofill, out f3 float(0) unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute76;
CREATE PROCEDURE spexecute76()
BEGIN
declare var1 float(0) unsigned zerofill;
declare var2 float(0) unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp76(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute76();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute76;
DROP PROCEDURE sp76;
DROP PROCEDURE IF EXISTS sp77;
CREATE PROCEDURE sp77( in f1 float(23) unsigned zerofill, inout f2 float(23) unsigned zerofill, out f3 float(23) unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute77;
CREATE PROCEDURE spexecute77()
BEGIN
declare var1 float(23) unsigned zerofill;
declare var2 float(23) unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp77(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute77();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute77;
DROP PROCEDURE sp77;
DROP PROCEDURE IF EXISTS sp78;
CREATE PROCEDURE sp78( in f1 float(24) unsigned zerofill, inout f2 float(24) unsigned zerofill, out f3 float(24) unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute78;
CREATE PROCEDURE spexecute78()
BEGIN
declare var1 float(24) unsigned zerofill;
declare var2 float(24) unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp78(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute78();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute78;
DROP PROCEDURE sp78;
DROP PROCEDURE IF EXISTS sp79;
CREATE PROCEDURE sp79( in f1 float(53) unsigned zerofill, inout f2 float(53) unsigned zerofill, out f3 float(53) unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute79;
CREATE PROCEDURE spexecute79()
BEGIN
declare var1 float(53) unsigned zerofill;
declare var2 float(53) unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+00;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp79(1.00e+00, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute79();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute79;
DROP PROCEDURE sp79;
DROP PROCEDURE IF EXISTS sp80;
CREATE PROCEDURE sp80( in f1 int, inout f2 int, out f3 int, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute80;
CREATE PROCEDURE spexecute80()
BEGIN
declare var1 int;
declare var2 int;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -2.15e+09;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp80(-2.15e+09, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute80();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute80;
DROP PROCEDURE sp80;
DROP PROCEDURE IF EXISTS sp81;
CREATE PROCEDURE sp81( in f1 int unsigned, inout f2 int unsigned, out f3 int unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute81;
CREATE PROCEDURE spexecute81()
BEGIN
declare var1 int unsigned;
declare var2 int unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 4.29e+09;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp81(4.29e+09, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute81();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute81;
DROP PROCEDURE sp81;
DROP PROCEDURE IF EXISTS sp82;
CREATE PROCEDURE sp82( in f1 int unsigned zerofill, inout f2 int unsigned zerofill, out f3 int unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute82;
CREATE PROCEDURE spexecute82()
BEGIN
declare var1 int unsigned zerofill;
declare var2 int unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 4.29e+09;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp82(4.29e+09, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute82();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute82;
DROP PROCEDURE sp82;
DROP PROCEDURE IF EXISTS sp83;
CREATE PROCEDURE sp83( in f1 int zerofill, inout f2 int zerofill, out f3 int zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute83;
CREATE PROCEDURE spexecute83()
BEGIN
declare var1 int zerofill;
declare var2 int zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 2.15e+08;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp83(2.15e+08, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute83();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute83;
DROP PROCEDURE sp83;
DROP PROCEDURE IF EXISTS sp84;
CREATE PROCEDURE sp84( in f1 mediumint, inout f2 mediumint, out f3 mediumint, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute84;
CREATE PROCEDURE spexecute84()
BEGIN
declare var1 mediumint;
declare var2 mediumint;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -8388600;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp84(-8388600, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute84();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute84;
DROP PROCEDURE sp84;
DROP PROCEDURE IF EXISTS sp85;
CREATE PROCEDURE sp85( in f1 mediumint unsigned, inout f2 mediumint unsigned, out f3 mediumint unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute85;
CREATE PROCEDURE spexecute85()
BEGIN
declare var1 mediumint unsigned;
declare var2 mediumint unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 16777201;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp85(16777201, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute85();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute85;
DROP PROCEDURE sp85;
DROP PROCEDURE IF EXISTS sp86;
CREATE PROCEDURE sp86( in f1 mediumint unsigned zerofill, inout f2 mediumint unsigned zerofill, out f3 mediumint unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute86;
CREATE PROCEDURE spexecute86()
BEGIN
declare var1 mediumint unsigned zerofill;
declare var2 mediumint unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 16777210;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp86(16777210, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute86();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute86;
DROP PROCEDURE sp86;
DROP PROCEDURE IF EXISTS sp87;
CREATE PROCEDURE sp87( in f1 mediumint zerofill, inout f2 mediumint zerofill, out f3 mediumint zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute87;
CREATE PROCEDURE spexecute87()
BEGIN
declare var1 mediumint zerofill;
declare var2 mediumint zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -8388601;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp87(-8388601, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute87();
ERROR 22003: BIGINT UNSIGNED value is out of range in '(f1@0 - 10)'
DROP PROCEDURE spexecute87;
DROP PROCEDURE sp87;
DROP PROCEDURE IF EXISTS sp88;
CREATE PROCEDURE sp88( in f1 numeric (0) unsigned zerofill, inout f2 numeric (0) unsigned zerofill, out f3 numeric (0) unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute88;
CREATE PROCEDURE spexecute88()
BEGIN
declare var1 numeric (0) unsigned zerofill;
declare var2 numeric (0) unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 99999999;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp88(99999999, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute88();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute88;
DROP PROCEDURE sp88;
DROP PROCEDURE IF EXISTS sp89;
CREATE PROCEDURE sp89( in f1 numeric (0, 0) unsigned zerofill, inout f2 numeric (0, 0) unsigned zerofill, out f3 numeric (0, 0) unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute89;
CREATE PROCEDURE spexecute89()
BEGIN
declare var1 numeric (0, 0) unsigned zerofill;
declare var2 numeric (0, 0) unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 99999999;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp89(99999999, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute89();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute89;
DROP PROCEDURE sp89;
DROP PROCEDURE IF EXISTS sp90;
CREATE PROCEDURE sp90( in f1 numeric (63, 30) unsigned, inout f2 numeric (63, 30) unsigned, out f3 numeric (63, 30) unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute90;
CREATE PROCEDURE spexecute90()
BEGIN
declare var1 numeric (63, 30) unsigned;
declare var2 numeric (63, 30) unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+22;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp90(1.00e+20, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute90();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute90;
DROP PROCEDURE sp90;
DROP PROCEDURE IF EXISTS sp91;
CREATE PROCEDURE sp91( in f1 numeric (63, 30) unsigned zerofill, inout f2 numeric (63, 30) unsigned zerofill, out f3 numeric (63, 30) unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute91;
CREATE PROCEDURE spexecute91()
BEGIN
declare var1 numeric (63, 30) unsigned zerofill;
declare var2 numeric (63, 30) unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+22;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp91(1.00e+20, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute91();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute91;
DROP PROCEDURE sp91;
DROP PROCEDURE IF EXISTS sp92;
CREATE PROCEDURE sp92( in f1 numeric (63, 30) zerofill, inout f2 numeric (63, 30) zerofill, out f3 numeric (63, 30) zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute92;
CREATE PROCEDURE spexecute92()
BEGIN
declare var1 numeric (63, 30) zerofill;
declare var2 numeric (63, 30) zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -1.00e+22;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp92(-1.00e+20, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute92();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute92;
DROP PROCEDURE sp92;
DROP PROCEDURE IF EXISTS sp93;
CREATE PROCEDURE sp93( in f1 numeric (64) unsigned zerofill, inout f2 numeric (64) unsigned zerofill, out f3 numeric (64) unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute93;
CREATE PROCEDURE spexecute93()
BEGIN
declare var1 numeric (64) unsigned zerofill;
declare var2 numeric (64) unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 1.00e+22;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp93(1.00e+20, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute93();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute93;
DROP PROCEDURE sp93;
DROP PROCEDURE IF EXISTS sp94;
CREATE PROCEDURE sp94( in f1 smallint, inout f2 smallint, out f3 smallint, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute94;
CREATE PROCEDURE spexecute94()
BEGIN
declare var1 smallint;
declare var2 smallint;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -32701;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp94(-32701, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute94();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute94;
DROP PROCEDURE sp94;
DROP PROCEDURE IF EXISTS sp95;
CREATE PROCEDURE sp95( in f1 smallint unsigned, inout f2 smallint unsigned, out f3 smallint unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute95;
CREATE PROCEDURE spexecute95()
BEGIN
declare var1 smallint unsigned;
declare var2 smallint unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 65531;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp95(65531, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute95();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute95;
DROP PROCEDURE sp95;
DROP PROCEDURE IF EXISTS sp96;
CREATE PROCEDURE sp96( in f1 smallint unsigned zerofill, inout f2 smallint unsigned zerofill, out f3 smallint unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute96;
CREATE PROCEDURE spexecute96()
BEGIN
declare var1 smallint unsigned zerofill;
declare var2 smallint unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 65531;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp96(65531, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute96();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute96;
DROP PROCEDURE sp96;
DROP PROCEDURE IF EXISTS sp97;
CREATE PROCEDURE sp97( in f1 smallint zerofill, inout f2 smallint zerofill, out f3 smallint zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute97;
CREATE PROCEDURE spexecute97()
BEGIN
declare var1 smallint zerofill;
declare var2 smallint zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -32601;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp97(-32601, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute97();
ERROR 22003: BIGINT UNSIGNED value is out of range in '(f1@0 - 10)'
DROP PROCEDURE spexecute97;
DROP PROCEDURE sp97;
DROP PROCEDURE IF EXISTS sp98;
CREATE PROCEDURE sp98( in f1 tinyint, inout f2 tinyint, out f3 tinyint, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute98;
CREATE PROCEDURE spexecute98()
BEGIN
declare var1 tinyint;
declare var2 tinyint;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -115;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp98(-115, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute98();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute98;
DROP PROCEDURE sp98;
DROP PROCEDURE IF EXISTS sp99;
CREATE PROCEDURE sp99( in f1 tinyint unsigned, inout f2 tinyint unsigned, out f3 tinyint unsigned, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute99;
CREATE PROCEDURE spexecute99()
BEGIN
declare var1 tinyint unsigned;
declare var2 tinyint unsigned;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 251;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp99(251, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute99();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute99;
DROP PROCEDURE sp99;
DROP PROCEDURE IF EXISTS sp100;
CREATE PROCEDURE sp100( in f1 tinyint unsigned zerofill, inout f2 tinyint unsigned zerofill, out f3 tinyint unsigned zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute100;
CREATE PROCEDURE spexecute100()
BEGIN
declare var1 tinyint unsigned zerofill;
declare var2 tinyint unsigned zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = 201;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp100(201, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute100();
ERROR 22003: BIGINT value is out of range in '(f5@4 * 2)'
DROP PROCEDURE spexecute100;
DROP PROCEDURE sp100;
DROP PROCEDURE IF EXISTS sp101;
CREATE PROCEDURE sp101( in f1 tinyint zerofill, inout f2 tinyint zerofill, out f3 tinyint zerofill, in f4 bigint, inout f5 bigint, out f6 bigint, in f7 bigint, inout f8 bigint, out f9 bigint, in f10 bigint, inout f11 bigint, out f12 bigint)
BEGIN
set f1 = (f1 / 2); set f1 = (f1 * 2); set f1 = (f1 - 10); set f1 = (f1 + 10); set f2 = (f2 / 2); set f2 = (f2 * 2); set f2 = (f2 - 10); set f2 = (f2 + 10); set f3 = (f1 / 2); set f3 = (f1 * 2); set f3 = (f1 - 10); set f3 = (f1 + 10);
set f6 = f5; set f5 = (f5 * 2); set f5 = (f5 - 10); set f5 = (f5 + 10); set f6 = (f6 * 2); set f6 = (f6 - 10); set f6 = (f6 + 10);
set f9 = f8; set f8 = (f8 * 2); set f8 = (f8 - 10); set f8 = (f8 + 10); set f9 = (f9 * 2); set f9 = (f9 - 10); set f9 = (f9 + 10);
set f12 = f11; set f11 = (f11 * 2); set f11 = (f11 - 10); set f11 = (f11 + 10); set f12 = (f12 * 2); set f12 = (f12 - 10); set f12 = (f12 + 10);
SELECT f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12;
END//
DROP PROCEDURE IF EXISTS spexecute101;
CREATE PROCEDURE spexecute101()
BEGIN
declare var1 tinyint zerofill;
declare var2 tinyint zerofill;
declare var3 bigint;
declare var4 bigint;
declare var5 bigint;
declare var6 bigint;
declare var7 bigint;
declare var8 bigint;
set var1 = -101;
set var3 = -9.22e+18;
set var5 = -9.22e+18;
set var7 = -9.22e+18;
CALL sp101(-101, var1, var2, -9.22e+18, var3, var4, -9.22e+18, var5, var6, -9.22e+18, var7, var8);
SELECT var1, var2, var3, var4, var5, var6, var7, var8;
END//
CALL spexecute101();
ERROR 22003: BIGINT UNSIGNED value is out of range in '(f1@0 - 10)'
DROP PROCEDURE spexecute101;
DROP PROCEDURE sp101;
USE db_storedproc;
DROP DATABASE db1;
USE db_storedproc;

Testcase 4.7.2:
FIXME: a wrong testcase number and/or description has been detected here. This
FIXME: needs to be checked to be sure where the missing testcase is located.
.
check for "allow_invalid_dates" server sql mode

--------------------------------------------------------------------------------
DROP PROCEDURE IF EXISTS sp2;
drop table IF EXISTS temp_table;
create table temp_table (f1 datetime);
set @@sql_mode = 'allow_invalid_dates';
CREATE PROCEDURE sp2 ()
BEGIN
declare a datetime;
set a = '2005-03-14 01:01:02';
insert into temp_table values(a);
END//
show CREATE PROCEDURE sp2;
Procedure	sql_mode	Create Procedure	character_set_client	collation_connection	Database Collation
sp2	ALLOW_INVALID_DATES	CREATE DEFINER=`root`@`localhost` PROCEDURE `sp2`()
BEGIN
declare a datetime;
set a = '2005-03-14 01:01:02';
insert into temp_table values(a);
END	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
set @@sql_mode = 'traditional';
CALL sp2 ();
SELECT * from temp_table;
f1
2005-03-14 01:01:02
SELECT @@sql_mode;
@@sql_mode
STRICT_TRANS_TABLES,STRICT_ALL_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,TRADITIONAL,NO_ENGINE_SUBSTITUTION
DROP PROCEDURE sp2;
drop table temp_table;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.7.3:
FIXME: a wrong testcase number and/or description has been detected here. This
FIXME: needs to be checked to be sure where the missing testcase is located.
.
check for *high_not_precedence* server sql mode

--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp3;
set @@sql_mode = 'high_not_precedence';
CREATE PROCEDURE sp3()
BEGIN
declare a int signed;
declare b int unsigned;
set a = -5;
set b = 5;
SELECT not 1 between a and b;
END//
show CREATE PROCEDURE sp3;
Procedure	sql_mode	Create Procedure	character_set_client	collation_connection	Database Collation
sp3	HIGH_NOT_PRECEDENCE	CREATE DEFINER=`root`@`localhost` PROCEDURE `sp3`()
BEGIN
declare a int signed;
declare b int unsigned;
set a = -5;
set b = 5;
SELECT not 1 between a and b;
END	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
set @@sql_mode='';
CALL sp3();
not 1 between a and b
1
SELECT @@sql_mode;
@@sql_mode

DROP PROCEDURE sp3;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.7.4:
FIXME: a wrong testcase number and/or description has been detected here. This
FIXME: needs to be checked to be sure where the missing testcase is located.
.
check for combination of server sql modes

--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp4;
set @@sql_mode = 'ansi, error_for_division_by_zero';
ERROR 42000: Variable 'sql_mode' can't be set to the value of ' error_for_division_by_zero'
set @@sql_mode = 'ansi,error_for_division_by_zero';
Warnings:
Warning	3135	'NO_ZERO_DATE', 'NO_ZERO_IN_DATE' and 'ERROR_FOR_DIVISION_BY_ZERO' sql modes should be used with strict mode. They will be merged with strict mode in a future release.
SHOW VARIABLES LIKE 'sql_mode';
Variable_name	Value
sql_mode	REAL_AS_FLOAT,PIPES_AS_CONCAT,ANSI_QUOTES,IGNORE_SPACE,ONLY_FULL_GROUP_BY,ANSI,ERROR_FOR_DIVISION_BY_ZERO
CREATE PROCEDURE sp4()
BEGIN
declare a int;
declare b int;
declare c int;
set a = 0;
set b = 1;
set c = b/a;
show warnings;
END//
show CREATE PROCEDURE sp4;
Procedure	sql_mode	Create Procedure	character_set_client	collation_connection	Database Collation
sp4	REAL_AS_FLOAT,PIPES_AS_CONCAT,ANSI_QUOTES,IGNORE_SPACE,ONLY_FULL_GROUP_BY,ANSI,ERROR_FOR_DIVISION_BY_ZERO	CREATE DEFINER="root"@"localhost" PROCEDURE "sp4"()
BEGIN
declare a int;
declare b int;
declare c int;
set a = 0;
set b = 1;
set c = b/a;
show warnings;
END	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
set @@sql_mode='';
CALL sp4();
Level	Code	Message
Warning	1365	Division by 0
Warnings:
Warning	1365	Division by 0
DROP PROCEDURE sp4;
set @@sql_mode='';
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Section 3.1.8 - SHOW statement checks:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
USE db_storedproc;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.1:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
DROP PROCEDURE IF EXISTS sp6a;
DROP PROCEDURE IF EXISTS sp6b;
DROP PROCEDURE IF EXISTS sp6c;
CREATE PROCEDURE sp6a (i1 longtext, out i2 mediumint , inout i3 longblob, in i4 year, out i5 real)
language sql
BEGIN
set @x=i1;
set @y=@x;
END//
CREATE PROCEDURE sp6b (out i1 longtext, out i2 mediumint , out i3 longblob, out i4 year, out i5 real)
deterministic
BEGIN
set @x=i1;
set @y=@x;
END//
CREATE PROCEDURE sp6c (inout i1 longtext, inout  i2 mediumint , inout i3 longblob, inout  i4 year, inout  i5 real) comment 'this is a comment'
BEGIN
set @x=i1;
set @y=@x;
END//
show CREATE PROCEDURE sp6a;
Procedure	sql_mode	Create Procedure	character_set_client	collation_connection	Database Collation
sp6a		CREATE DEFINER=`root`@`localhost` PROCEDURE `sp6a`(i1 longtext, out i2 mediumint , inout i3 longblob, in i4 year, out i5 real)
BEGIN
set @x=i1;
set @y=@x;
END	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
show CREATE PROCEDURE sp6b;
Procedure	sql_mode	Create Procedure	character_set_client	collation_connection	Database Collation
sp6b		CREATE DEFINER=`root`@`localhost` PROCEDURE `sp6b`(out i1 longtext, out i2 mediumint , out i3 longblob, out i4 year, out i5 real)
    DETERMINISTIC
BEGIN
set @x=i1;
set @y=@x;
END	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
show CREATE PROCEDURE sp6c;
Procedure	sql_mode	Create Procedure	character_set_client	collation_connection	Database Collation
sp6c		CREATE DEFINER=`root`@`localhost` PROCEDURE `sp6c`(inout i1 longtext, inout  i2 mediumint , inout i3 longblob, inout  i4 year, inout  i5 real)
    COMMENT 'this is a comment'
BEGIN
set @x=i1;
set @y=@x;
END	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
SHOW PROCEDURE status like 'sp6a';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sp6a	PROCEDURE	root@localhost	<modified>	<created>	DEFINER		latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
SHOW PROCEDURE status like 'sp6b';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sp6b	PROCEDURE	root@localhost	<modified>	<created>	DEFINER		latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
SHOW PROCEDURE status like 'sp6c';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sp6c	PROCEDURE	root@localhost	<modified>	<created>	DEFINER	this is a comment	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP PROCEDURE sp6a;
DROP PROCEDURE sp6b;
DROP PROCEDURE sp6c;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.2:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6 (i1 longtext, i2 mediumint , i3 longblob, i4 year, i5 real)
BEGIN
set @x=i1;
set @y=@x;
END//
SHOW PROCEDURE status like 'sp6';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sp6	PROCEDURE	root@localhost	<modified>	<created>	DEFINER		latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP PROCEDURE sp6;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.3:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6 (i1 longtext, i2 mediumint , i3 longblob, i4 year, i5 real)
BEGIN
set @x=i1;
set @y=@x;
END//
SHOW CREATE FUNCTION sp6;
ERROR 42000: FUNCTION sp6 does not exist
DROP PROCEDURE sp6;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.4:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
CREATE FUNCTION sp6 (i1 longtext, i2 mediumint , i3 longblob, i4 year, i5 real) returns longtext
BEGIN
set @x=i1;
set @y=@x;
return 0;
END//
show  function status like 'sp6';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sp6	FUNCTION	root@localhost	<modified>	<created>	DEFINER		latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP FUNCTION sp6;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.5:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp7;
show CREATE PROCEDURE sp7;
ERROR 42000: PROCEDURE sp7 does not exist
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.6:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
show  procedure status like 'sp6';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.7:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1 (i1 real) returns real
BEGIN
return i1;
END//
show CREATE PROCEDURE fn1;
ERROR 42000: PROCEDURE fn1 does not exist
DROP FUNCTION fn1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.8:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1 (i1 real) returns real
BEGIN
return i1;
END//
show  procedure status like 'fn1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
DROP FUNCTION fn1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.9:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.10:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1 (i1 real) returns real
BEGIN
return i1;
END//
SHOW FUNCTION STATUS LIKE 'fn1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	fn1	FUNCTION	root@localhost	<modified>	<created>	DEFINER		latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP FUNCTION fn1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.11:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1 (x int) returns int
BEGIN
return x;
END//
show CREATE PROCEDURE fn1;
ERROR 42000: PROCEDURE fn1 does not exist
DROP FUNCTION fn1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.12:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1(x int) returns int
BEGIN
return x;
END//
DROP FUNCTION fn1;
show CREATE FUNCTION fn1;
ERROR 42000: FUNCTION fn1 does not exist
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.13:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP FUNCTION IF EXISTS f1000;
SHOW FUNCTION STATUS LIKE 'f1000';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.14:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1()
BEGIN
SELECT * from t8;
END//
show CREATE FUNCTION sp1;
ERROR 42000: FUNCTION sp1 does not exist
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.15:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6 (i1 longtext, i2 mediumint , i3 longblob, i4 year, i5 real)
BEGIN
set @x=i1;
set @y=@x;
END//
show  function status like 'sp6';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
DROP PROCEDURE sp6;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.16:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.17:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6 (i1 longtext, i2 mediumint , i3 longblob, i4 year, i5 real)
BEGIN
set @x=i1;
set @y=@x;
END//
alter procedure sp6 sql security invoker;
alter procedure sp6 comment  'this is a new comment';
SHOW PROCEDURE status like 'sp6';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	sp6	PROCEDURE	root@localhost	<modified>	<created>	INVOKER	this is a new comment	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP PROCEDURE sp6;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.18:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1 (x int) returns int
BEGIN
return x;
END//
alter function fn1 sql security invoker;
show  create  function  fn1;
Function	sql_mode	Create Function	character_set_client	collation_connection	Database Collation
fn1		CREATE DEFINER=`root`@`localhost` FUNCTION `fn1`(x int) RETURNS int
    SQL SECURITY INVOKER
BEGIN
return x;
END	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP FUNCTION fn1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.19:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1 (i1 longtext) returns longtext
BEGIN
return i1;
END//
alter function fn1 sql security invoker;
alter function fn1 comment 'this is a function 3242#@%$#@';
show  function status like 'fn1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
db_storedproc	fn1	FUNCTION	root@localhost	<modified>	<created>	INVOKER	this is a function 3242#@%$#@	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP FUNCTION fn1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.20:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6 (i1 int , i2 int)
BEGIN
set @x=i1;
set @y=@x;
END//
alter procedure sp6 comment 'this is simple';
show CREATE PROCEDURE sp6;
Procedure	sql_mode	Create Procedure	character_set_client	collation_connection	Database Collation
sp6		CREATE DEFINER=`root`@`localhost` PROCEDURE `sp6`(i1 int , i2 int)
    COMMENT 'this is simple'
BEGIN
set @x=i1;
set @y=@x;
END	latin1	latin1_swedish_ci	utf8mb4_0900_ai_ci
DROP PROCEDURE sp6;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.21:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6 (i1 int, i2 int)
BEGIN
set @x=i1;
set @y=@x;
END//
DROP PROCEDURE sp6;
show CREATE PROCEDURE sp6;
ERROR 42000: PROCEDURE sp6 does not exist
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.22:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6 (i1 longtext, i2 mediumint , i3 longblob, i4 year, i5 real)
BEGIN
set @x=i3;
set @y=@x;
END//
DROP PROCEDURE sp6;
SHOW PROCEDURE status like 'sp6';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.23:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1 (x int) returns int
BEGIN
return x;
END//
DROP FUNCTION fn1;
show CREATE FUNCTION fn1;
ERROR 42000: FUNCTION fn1 does not exist
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.8.24:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP FUNCTION IF EXISTS fn1;
CREATE FUNCTION fn1 (i1 longtext) returns longtext
BEGIN
return i1;
END//
DROP FUNCTION fn1;
SHOW FUNCTION STATUS LIKE 'fn1';
Db	Name	Type	Definer	Modified	Created	Security_type	Comment	character_set_client	collation_connection	Database Collation
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Section 3.1.9 - Routine body checks:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
USE db_storedproc;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.9.1:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
CREATE PROCEDURE sp6 (i1 longtext, i2 mediumint , i3 longblob, i4 year, i5 real)
BEGIN
set @x = i3;
set @a = i5;
set @y = @x;
set @b = @a;
SELECT * from t9 limit 0, 100;
END//
CALL sp6 (10, 20, 30, 40, 50);
f1	f2	f3
-4991	a_aaaaaaaaa	-4991
-4992	a^aaaaaaaa	-4992
-4993	agaaaaaaa	-4993
-4994	afaaaaaa	-4994
-4995	aeaaaaa	-4995
-4996	adaaaa	-4996
-4997	acaaa	-4997
-4998	abaa	-4998
-4999	aaa	-4999
-5000	a`	-5000
DROP PROCEDURE sp6;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.9.2:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
drop  table IF EXISTS res_t9;
create table res_t9 (f1 int, f2 char(25), f3 int);
CREATE PROCEDURE sp6 (i1 longtext, i2 mediumint , i3 longblob, i4 year, i5 real)
BEGIN
set @x = i3;
set @a = i5;
set @y = @x;
set @b = @a;
insert into res_t9 values (@y, @a, 111);
SELECT * from res_t9;
END//
CALL sp6 (10, 20, 30, 40, 50);
f1	f2	f3
30	50	111
DROP PROCEDURE sp6;
drop table res_t9;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.9.3:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
drop  table IF EXISTS res_t9;
create table res_t9 (f1 int, f2 char(25), f3 int);
CREATE PROCEDURE sp6 (i1 longtext, i2 mediumint , i3 longblob, i4 year, i5 real)
BEGIN
set @x = i3;
set @a = i5;
set @y = @x;
set @b = @a;
insert into res_t9 values (@y, @a, 111);
SELECT * from res_t9;
delete from res_t9;
SELECT * from res_t9;
END//
CALL sp6 (10, 20, 30, 40, 50);
f1	f2	f3
30	50	111
f1	f2	f3
DROP PROCEDURE sp6;
drop table res_t9;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.9.4:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
drop  table IF EXISTS res_t9;
create table res_t9 (f1 int, f2 char(25), f3 int);
CREATE PROCEDURE sp6 (i1 longtext, i2 mediumint , i3 longblob, i4 year, i5 real)
BEGIN
set @x = i3;
set @a = i5;
set @y = @x;
set @b = @a;
insert into res_t9 values (@y, @a, 111);
SELECT * from res_t9;
update res_t9 set f2 = 1000 where f2 = 50;
SELECT * from res_t9;
END//
CALL sp6 (10, 20, 30, 40, 50);
f1	f2	f3
30	50	111
f1	f2	f3
30	1000	111
DROP PROCEDURE sp6;
drop table res_t9;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.9.5:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
drop table IF EXISTS res_t9;
CREATE PROCEDURE sp6 (i1 longtext, i2 mediumint , i3 longblob, i4 year, i5 real)
BEGIN
set @x = i1;
set @y = i3;
set @z = i5;
set @a = @x;
set @b = @y;
set @c = @z;
create table res_t9(f1 longtext, f2 longblob, f3 real);
insert into res_t9 values (@a, @b, @c);
SELECT * from res_t9;
END//
CALL sp6 (10, 20, 30, 40, 50);
f1	f2	f3
10	30	50
DROP PROCEDURE sp6;
drop table IF EXISTS res_t9;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.9.6:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
CREATE FUNCTION fn1(i1 longtext) returns longtext
BEGIN
SELECT * from t9 limit 0, 100;
return i1;
END//
ERROR 0A000: Not allowed to return a result set from a function
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
drop table IF EXISTS res_t9;
Warnings:
Note	1051	Unknown table 'db_storedproc.res_t9'
create table res_t9 (f1 int, f2 char(25), f3 int);
insert into res_t9 values (10, 'abc', 20);
CREATE FUNCTION fn1(i1 longtext) returns longtext
BEGIN
delete from res_t9;
drop table res_t9;
return i1;
END//
ERROR HY000: Explicit or implicit commit is not allowed in stored function or trigger.
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
drop table IF EXISTS res_t9;
CREATE FUNCTION fn1(i1 longtext) returns longtext
BEGIN
create table res_t9 (f1 longtext, f2 longblob, f3 real);
drop table res_t9;
return i1;
END//
ERROR HY000: Explicit or implicit commit is not allowed in stored function or trigger.
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
drop  table IF EXISTS res_t9;
Warnings:
Note	1051	Unknown table 'db_storedproc.res_t9'
create table res_t9 (f1 int, f2 char(25), f3 int);
CREATE FUNCTION fn1(i1 longtext) returns longtext
BEGIN
insert into res_t9 values (100, 'abc', 300);
drop table res_t9;
return i1;
END//
ERROR HY000: Explicit or implicit commit is not allowed in stored function or trigger.
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
drop  table IF EXISTS res_t9;
create table res_t9 (f1 int, f2 char(25), f3 int);
insert into res_t9 values (10, 'abc', 20);
CREATE FUNCTION fn1(i1 longtext) returns longtext
BEGIN
update res_t9 set f1 = 20;
drop table res_t9;
return i1;
END//
ERROR HY000: Explicit or implicit commit is not allowed in stored function or trigger.
drop table res_t9;
DROP FUNCTION IF EXISTS fn1;
Warnings:
Note	1305	FUNCTION db_storedproc.fn1 does not exist
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.9.7:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS sp6;
drop table IF EXISTS res_t9;
create table res_t9 (f1 longtext, f2 longblob, f3 real);
CREATE PROCEDURE sp6 (i1 longtext, i2 mediumint , i3 longblob, i4 year, i5 real)
BEGIN
set @x = i1;
set @y = i3;
set @z = i5;
set @a = @x;
set @b = @y;
set @c = @z;
insert into res_t9 values (@a, @b, @c);
SELECT * from res_t9;
create index index_1 on res_t9 (f1 (5));
analyze table res_t9;
show index from res_t9;
END//
CALL sp6 (10, 20, 30, 40, 50);
f1	f2	f3
10	30	50
Table	Op	Msg_type	Msg_text
db_storedproc.res_t9	analyze	status	OK
Table	Non_unique	Key_name	Seq_in_index	Column_name	Collation	Cardinality	Sub_part	Packed	Null	Index_type	Comment	Index_comment	Visible	Expression
res_t9	1	index_1	1	f1	A	1	5	NULL	YES	BTREE			YES	NULL
DROP PROCEDURE sp6;
drop table res_t9;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Section 3.1._ - :
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
USE db_storedproc;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.1:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1 (x int, y int)
BEGIN
set @y=x;
END//
CREATE PROCEDURE h1 ()
BEGIN
declare continue handler for 1318 set @x2 = 1;
set @x=0;
CALL sp1 (1);
set @x=1;
SELECT @x, @x2;
END//
CALL h1 ();
@x	@x2
1	1
DROP PROCEDURE h1;
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.2:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
CREATE PROCEDURE h1 ()
BEGIN
declare continue handler for 1305 set @x2 = 1;
set @x=0;
CALL sp1 (1);
set @x=1;
SELECT @x, @x2;
END//
CALL h1 ();
@x	@x2
1	1
DROP PROCEDURE h1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.3:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1 (x int, y int)
BEGIN
set @xx=1;
END//
CREATE PROCEDURE h1 ()
BEGIN
declare exit handler for 1318 set @x2 = 1;
set @x=1;
set @x2=0;
CALL sp1 (1);
set @x=0;
END//
CALL h1();
SELECT @x, @x2;
@x	@x2
1	1
DROP PROCEDURE h1;
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.4:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
CREATE PROCEDURE h1 ()
BEGIN
declare exit handler for 1305 set @x2 = 1;
set @x=1;
set @x2=0;
CALL sp1 (1);
set @x=0;
END//
CALL h1 ();
SELECT @x, @x2;
@x	@x2
1	1
DROP PROCEDURE h1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.5:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1 (x int, y int)
BEGIN
set @y=x;
END//
CREATE PROCEDURE h1 ()
BEGIN
declare continue handler for 1318 set @x2 = 1;
set @x=0;
CALL sp1 (1);
set @x=1;
SELECT @x, @x2;
END//
CALL h1 ();
@x	@x2
1	1
DROP PROCEDURE h1;
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.6:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1 (x int, y int)
BEGIN
set @y=x;
END//
CREATE PROCEDURE h1 ()
BEGIN
declare continue handler for 1318 set @x2 = 1;
set @x=0;
CALL sp1 (1);
set @x=1;
SELECT @x, @x2;
END//
CALL h1 ();
@x	@x2
1	1
DROP PROCEDURE h1;
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.7:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1 (x int, y int)
BEGIN
set @y=x;
END//
CREATE PROCEDURE h1 ()
BEGIN
declare continue handler for sqlstate '42000' set @x2 = 1;
set @x=0;
CALL sp1 (1);
set @x=1;
SELECT @x, @x2;
END//
CALL h1 ();
@x	@x2
1	1
DROP PROCEDURE h1;
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.8:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
CREATE PROCEDURE h1 ()
BEGIN
declare continue handler for sqlstate '42000' set @x2 = 1;
set @x=0;
CALL sp1 (1);
set @x=1;
SELECT @x, @x2;
END//
CALL h1 ();
@x	@x2
1	1
DROP PROCEDURE h1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.9:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1 (x int, y int)
BEGIN
set @xx=1;
END//
CREATE PROCEDURE h1 ()
BEGIN
declare exit handler for sqlstate '42000' set @x2 = 1;
set @x=1;
set @x2=0;
CALL sp1 (1);
set @x=0;
END//
CALL h1();
SELECT @x, @x2;
@x	@x2
1	1
DROP PROCEDURE h1;
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.10:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
CREATE PROCEDURE h1 ()
BEGIN
declare exit handler for sqlstate '42000' set @x2 = 1;
set @x=1;
set @x2=0;
CALL sp1 (1);
set @x=0;
END//
CALL h1 ();
SELECT @x, @x2;
@x	@x2
1	1
DROP PROCEDURE h1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.11:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1 (x int, y int)
BEGIN
set @y=x;
END//
CREATE PROCEDURE h1 ()
BEGIN
declare continue handler for sqlstate '42000' set @x2 = 1;
set @x=0;
CALL sp1 (1);
set @x=1;
SELECT @x, @x2;
END//
CALL h1 ();
@x	@x2
1	1
DROP PROCEDURE h1;
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.12:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
DROP PROCEDURE IF EXISTS sp1;
CREATE PROCEDURE sp1 (x int, y int)
BEGIN
set @y=x;
END//
CREATE PROCEDURE h1 ()
BEGIN
declare continue handler for sqlstate '42000' set @x2 = 1;
set @x=0;
CALL sp1 (1);
set @x=1;
SELECT @x, @x2;
END//
CALL h1 ();
@x	@x2
1	1
DROP PROCEDURE h1;
DROP PROCEDURE sp1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.13:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare continue handler for sqlstate '02000' set done = 1;
open cur1;
repeat
SELECT done;
fetch cur1 into a, b;
SELECT done;
if not done then
insert into res_t2 values (a, b);
END if;
until done END repeat;
SELECT done;
close cur1;
END//
CALL h1();
done
0
done
1
done
1
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
DROP TABLE IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.14:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare continue handler for sqlstate '02000' set done = 1;
open cur1;
repeat
SELECT done;
fetch cur1 into a, b;
SELECT done;
if not done then
insert into res_t2 values (a, b);
END if;
until done END repeat;
SELECT done;
close cur1;
END//
CALL h1();
done
0
done
1
done
1
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
DROP TABLE IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.15:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare continue handler for sqlstate '02000' set done = 1;
open cur1;
repeat
SELECT done;
set @x=0;
fetch cur1 into a, b;
SELECT @x=1;
if not done then
insert into res_t2 values (a, b);
END if;
until done END repeat;
SELECT done;
close cur1;
END//
CALL h1();
done
0
@x=1
0
done
1
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
DROP TABLE IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.16:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare continue handler for sqlstate '02000' set done = 1;
open cur1;
repeat
SELECT done;
set @x=0;
fetch cur1 into a, b;
SELECT @x=1;
if not done then
insert into res_t2 values (a, b);
END if;
until done END repeat;
SELECT done;
close cur1;
END//
CALL h1();
done
0
@x=1
0
done
1
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
DROP TABLE IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.17:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
insert into res_t1 values('a', 'b');
insert into res_t1 values('c', 'd');
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare continue handler for sqlstate 'HY000' set done = 1;
open cur1;
SELECT done;
fetch cur1 into a;
SELECT done;
close cur1;
END//
CALL h1();
done
0
done
1
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
DROP TABLE IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.18:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
insert into res_t1 values('a', 'b');
insert into res_t1 values('c', 'd');
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare continue handler for 1328 set done = 1;
open cur1;
SELECT done;
fetch cur1 into a;
SELECT done;
close cur1;
END//
CALL h1();
done
0
done
1
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
DROP TABLE IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.19:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
insert into res_t1 values('a', 'b');
insert into res_t1 values('c', 'd');
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare exit handler for sqlstate 'HY000' set done = 1;
open cur1;
SELECT done;
set @x=0;
fetch cur1 into a;
set @x=1;
SELECT done, @x;
close cur1;
END//
CALL h1();
done
0
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
DROP TABLE IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.20:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
insert into res_t1 values('a', 'b');
insert into res_t1 values('c', 'd');
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare exit handler for 1328 set done = 1;
open cur1;
SELECT done;
set @x=0;
fetch cur1 into a;
set @x=1;
SELECT done;
close cur1;
END//
CALL h1();
done
0
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
DROP TABLE IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.21:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
insert into res_t1 values('a', 'b');
insert into res_t1 values('c', 'd');
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare continue handler for 1325 set done = 1;
open cur1;
SELECT done;
open cur1;
SELECT done;
close cur1;
END//
CALL h1();
done
0
done
1
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
DROP TABLE IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.22:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
insert into res_t1 values('a', 'b');
insert into res_t1 values('c', 'd');
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare continue handler for 1325 set done = 1;
open cur1;
SELECT done;
open cur1;
set @x=1;
SELECT done, @x;
close cur1;
END//
CALL h1();
done
0
done	@x
1	1
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
DROP TABLE IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.23:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
insert into res_t1 values('a', 'b');
insert into res_t1 values('c', 'd');
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare exit handler for 1325 set done = 1;
open cur1;
set @x=0;
SELECT done;
open cur1;
set @x=1;
SELECT done;
close cur1;
END//
CALL h1();
done
0
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
DROP TABLE IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.24:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
insert into res_t1 values('a', 'b');
insert into res_t1 values('c', 'd');
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare exit handler for sqlstate '24000' set done = 1;
open cur1;
set @x=0;
SELECT done;
open cur1;
set @x=1;
SELECT done, @x;
close cur1;
END//
CALL h1();
done
0
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
DROP TABLE IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.25:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
insert into res_t1 values('a', 'b');
insert into res_t1 values('c', 'd');
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare continue handler for 1326 set done = 1;
set @x=0;
fetch cur1 into a, b;
set @x=1;
SELECT done, @x;
END//
CALL h1();
done	@x
1	1
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
DROP TABLE IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.26:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
insert into res_t1 values('a', 'b');
insert into res_t1 values('c', 'd');
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare continue handler for sqlstate '24000' set done = 1;
set @x=0;
fetch cur1 into a, b;
set @x=1;
SELECT done, @x;
END//
CALL h1();
done	@x
1	1
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
DROP TABLE IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.27:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
insert into res_t1 values('a', 'b');
insert into res_t1 values('c', 'd');
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare exit handler for 1326 set done = 1;
set @x=0;
fetch cur1 into a, b;
set @x=1;
SELECT done, @x;
END//
CALL h1();
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
DROP TABLE IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.28:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
insert into res_t1 values('a', 'b');
insert into res_t1 values('c', 'd');
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare exit handler for sqlstate '24000' set done = 1;
set @x=0;
fetch cur1 into a, b;
set @x=1;
SELECT done, @x;
END//
CALL h1();
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.29:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
insert into res_t1 values('a', 'b');
insert into res_t1 values('c', 'd');
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare continue handler for 1339 set done = 1;
set @x=0;
case @x
when 1 then set @x=10;
when 2 then set @x=11;
END case;
set @x=1;
SELECT done, @x;
END//
CALL h1();
done	@x
1	1
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.30:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
insert into res_t1 values('a', 'b');
insert into res_t1 values('c', 'd');
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare continue handler for sqlstate '20000' set done = 1;
set @x=0;
case @x
when 1 then set @x=10;
when 2 then set @x=11;
END case;
set @x=1;
SELECT done, @x;
END//
CALL h1();
done	@x
1	1
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.31:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
insert into res_t1 values('a', 'b');
insert into res_t1 values('c', 'd');
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare exit handler for 1339 set done = 1;
set @x=0;
case @x
when 1 then set @x=10;
when 2 then set @x=11;
END case;
set @x=1;
SELECT done, @x;
END//
CALL h1();
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.32:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
drop table IF EXISTS res_t2;
create table res_t1(w char, x char);
insert into res_t1 values('a', 'b');
insert into res_t1 values('c', 'd');
create table res_t2(y char, z char);
CREATE PROCEDURE h1()
BEGIN
declare done int default 0;
declare a, b char;
declare cur1 cursor for SELECT w, x from res_t1;
declare exit handler for sqlstate '20000' set done = 1;
set @x=0;
case @x
when 1 then set @x=10;
when 2 then set @x=11;
END case;
set @x=1;
SELECT done, @x;
END//
CALL h1();
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
DROP TABLE IF EXISTS res_t2;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.33:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
create table res_t1(w char, x char);
insert into res_t1 values('a', 'b');
insert into res_t1 values('c', 'd');
CREATE PROCEDURE h1()
BEGIN
declare condname condition for sqlstate '20000';
declare done int default 0;
declare a, b char;
declare condname condition for sqlstate '20000';
declare cur1 cursor for SELECT w, x from t1;
set @x=2;
case @x
when 1 then set @x=10;
when 2 then set @x=11;
END case;
set @x=1;
SELECT done, @x;
END//
ERROR 42000: Duplicate condition: condname
DROP TABLE IF EXISTS res_t1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.35:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
drop table IF EXISTS res_t1;
CREATE TABLE res_t1(w INT UNIQUE, x CHAR);
insert into res_t1 values (1, 'a');
CREATE PROCEDURE h1 ()
begin1_label:BEGIN
declare condname1 condition for sqlstate '020';
declare condname2 condition for sqlstate 'wewe';
declare condname3 condition for 9999;
declare exit handler for sqlstate '020' set @var1 = 1;
declare exit handler for sqlstate 'wewe'set @var1 = 1;
declare exit handler for 9999 set @var1 = 1;
set @var2 = 1;
insert into res_t1 values (2, 'b');
begin2_label: BEGIN
declare continue handler for sqlstate '90000023' set @var3= 1;
set @var4 = 1;
insert into res_t1 values (3, 'c');
END begin2_label;
END begin1_label//
ERROR 42000: Bad SQLSTATE: '020'
CREATE PROCEDURE h1 ()
begin1_label:BEGIN
declare condname1 condition for sqlstate '020';
declare condname2 condition for sqlstate 'wewe';
declare condname3 condition for 9999;
set @var2 = 1;
insert into res_t1 values (2, 'b');
begin2_label: BEGIN
declare continue handler for sqlstate '90000023' set @var3= 1;
set @var4 = 1;
insert into res_t1 values (3, 'c');
END begin2_label;
END begin1_label//
ERROR 42000: Bad SQLSTATE: '020'
DROP TABLE IF EXISTS res_t1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.36:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
CREATE PROCEDURE h1 ()
BEGIN
declare x1 int default 0;
BEGIN
declare condname1 condition for sqlstate '00000';
declare exit handler for condname1 set @x = 1;
set x1 = 1;
set x1 = 2;
END;
SELECT @x, x1;
END//
ERROR 42000: Bad SQLSTATE: '00000'
DROP PROCEDURE IF EXISTS h1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.40:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
CREATE TABLE res_t1(w CHAR UNIQUE, x CHAR);
INSERT INTO res_t1 VALUES ('a', 'b');
CREATE PROCEDURE h1 ()
BEGIN
DECLARE x1, x2, x3, x4, x5 int default 0;
DECLARE condname1 CONDITION FOR SQLSTATE '42000';
DECLARE condname2 CONDITION FOR SQLSTATE '42000';
DECLARE CONTINUE HANDLER FOR condname1 set x1 = 1;
DECLARE CONTINUE HANDLER FOR condname1 set x2 = 1;
DECLARE EXIT HANDLER FOR condname1 SET x3 = 1;
DECLARE CONTINUE HANDLER FOR condname2 SET x4 = 1;
DECLARE EXIT HANDLER FOR condname2 SET x5 = 1;
END//
ERROR 42000: Duplicate handler declared in the same block
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

Testcase 4.11.41:
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
CREATE PROCEDURE h1 ()
BEGIN
DECLARE x1 INT DEFAULT 0;
BEGIN
DECLARE condname1 CONDITION FOR SQLSTATE '00000';
DECLARE EXIT HANDLER FOR SQLSTATE '00000' SET @x = 1;
SET x1 = 1;
SET x1 = 2;
END;
SELECT @x, x1;
END//
ERROR 42000: Bad SQLSTATE: '00000'
CALL h1();
ERROR 42000: PROCEDURE db_storedproc.h1 does not exist
DROP PROCEDURE IF EXISTS h1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

* Testcase 3.1.2.53 (4.11.42):
* Ensure that a handler condition of sqlwarning takes the same action as a
* handler condition defined with an sqlstate that begins with 01.
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
CREATE PROCEDURE h1()
BEGIN
DECLARE EXIT HANDLER FOR SQLWARNING SET @done = 1;
SET @done=0;
SET @x=1;
INSERT INTO res_t1 VALUES('xxx', 'yy');
SET @x=0;
END//
CALL h1();
ERROR 42S02: Table 'db_storedproc.res_t1' doesn't exist
SELECT @done, @x;
@done	@x
0	1
CREATE TABLE res_t1(w CHAR, x CHAR);
INSERT INTO res_t1 VALUES('a', 'b');
INSERT INTO res_t1 VALUES('c', 'd');
CALL h1();
SELECT @done, @x;
@done	@x
1	1
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
CREATE PROCEDURE h1()
BEGIN
DECLARE CONTINUE HANDLER FOR SQLWARNING SET @done = 1;
SET @done=0;
SET @x=0;
INSERT INTO res_t1 VALUES('xxx', 'yy');
SET @x=1;
END//
CALL h1();
ERROR 42S02: Table 'db_storedproc.res_t1' doesn't exist
SELECT @done, @x;
@done	@x
0	0
CREATE TABLE res_t1(w CHAR, x CHAR);
INSERT INTO res_t1 VALUES('a', 'b');
INSERT INTO res_t1 VALUES('c', 'd');
CALL h1();
SELECT @done, @x;
@done	@x
1	1
DROP PROCEDURE IF EXISTS h1;
DROP TABLE IF EXISTS res_t1;
SET sql_mode = default;

--source suite/funcs_1/storedproc/cleanup_sp_tb.inc
--------------------------------------------------------------------------------
DROP DATABASE IF EXISTS db_storedproc;
DROP DATABASE IF EXISTS db_storedproc_1;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.

.                               +++ END OF SCRIPT +++
--------------------------------------------------------------------------------
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
