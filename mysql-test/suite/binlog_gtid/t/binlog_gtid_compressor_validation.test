# ==== Purpose ====
#
# This test verifies that compression of mysql.gtid_executed table shall be
# done only by the gtid compressor thread.
#
# ==== Implementation ====
#
# 0. This test requires only one server.
# 1. Create an InnoDB table and insert 2 rows.
#    Wait till each entry appears individually in the mysql.gtid_executed table.
# 2. Assert that table is not compressed.
# 3. Enable debug points to enable force compression and to print the
#    compression info for validation purpose.
# 4. Insert third row and assert that table is compressed.
# 5. Assert that the compression was done by the gtid compressor thread.
# 6. Cleanup
#
# ==== References ====
#
# Bug#100118 Server doesn't restart because of too many gaps in the
#            mysql.gtid_executed table

# This test requires debug binaries.
--source include/have_debug.inc
# This test is binlog format agnostic
--source include/have_binlog_format_row.inc

--let $server_uuid = `SELECT @@GLOBAL.SERVER_UUID`

# Clean the table before starting the test.
RESET MASTER;

--echo #
--echo # 1. Create an InnoDB table and insert 2 rows.
--echo #    Wait till each entry appears individually in the table.

CREATE TABLE t1 (a INT NOT NULL PRIMARY KEY) ENGINE = INNODB;

--let $wait_condition = SELECT count(*) = 1 FROM mysql.gtid_executed WHERE interval_start = 1 AND interval_end = 1
--source include/wait_condition.inc

INSERT INTO t1 VALUES (1);

--let $wait_condition = SELECT count(*) = 1 FROM mysql.gtid_executed WHERE interval_start = 2 AND interval_end = 2
--source include/wait_condition.inc

INSERT INTO t1 VALUES (2);

--let $wait_condition = SELECT count(*) = 1 FROM mysql.gtid_executed WHERE interval_start = 3 AND interval_end = 3
--source include/wait_condition.inc

--echo #
--echo # 2. Assert that table is not compressed.

--let $assert_text = COMMITTED_GTIDS SERVER_UUID:1-3
--let $assert_cond = "[SELECT @@GLOBAL.GTID_EXECUTED]" = "$server_uuid:1-3"
--source include/assert.inc

--let $assert_cond = COUNT(*) = 3 FROM mysql.gtid_executed
--let $assert_text = The mysql gtid table should have 3 rows.
--source include/assert.inc

--echo #
--echo # 3. Enable debug points to enable force compression and to print the
--echo #    compression info for validation purpose.
--let $debug_point = simulate_force_compress
--source include/add_debug_point.inc
--let $debug_point = print_gtid_compression_info
--source include/add_debug_point.inc

--echo #
--echo # 4. Insert third row and assert that table is compressed.
INSERT INTO t1 VALUES (3);

--let $wait_condition = SELECT count(*) = 1 FROM mysql.gtid_executed WHERE interval_start = 1 AND interval_end = 4
--source include/wait_condition.inc

--let $assert_cond = COUNT(*) = 1 FROM mysql.gtid_executed
--let $assert_text = The mysql gtid table should have 1 row.
--source include/assert.inc

--echo
--echo # 5. Assert that the compression was done by the gtid compressor thread.

--let $assert_file=$MYSQLTEST_VARDIR/log/mysqld.1.err
--let $assert_match= .*Compression done by compressor thread, first gapless row = 1-4.*
--let $assert_select= Compression done by compressor thread, first gapless row = 1-4
--let $assert_text= GTID table compression is done by compressor thread.
--source include/assert_grep.inc

--echo #
--echo # 6. Cleanup
--let $debug_point = simulate_force_compress
--source include/remove_debug_point.inc
--let $debug_point = print_gtid_compression_info
--source include/remove_debug_point.inc
DROP TABLE t1;
