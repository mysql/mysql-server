--source include/not_threadpool.inc

# 2010-01-28 OBN Added support to load 'innodb' and 'semisync' if possible.
# As we need to have there variables loaded if the components exist but do 
# not want the test skiped if they are not, we cannot use the 'have_xxx' mecanizm.
# Added an 'all_vars-master.opt' file that includes
# "$SEMISYNC_PLUGIN_OPT --loose-innodb" (see $SEMISYNC_PLUGIN_OPT setting in mysql-test-run.pl)
# and logic similar to 'include/have_semisync_plugin.inc' that will load semisync plugin
if (`SELECT @@have_dynamic_loading = 'YES' AND LENGTH('$SEMISYNC_MASTER_PLUGIN') > 0`)
{
  --disable_query_log
  # The following is to prevent a mis-match on windows that has the name of of the lib ending with 'dll' 
  --replace_regex /\.dll/.so/
  eval INSTALL PLUGIN rpl_semi_sync_master SONAME '$SEMISYNC_MASTER_PLUGIN';
  --replace_regex /\.dll/.so/
  eval INSTALL PLUGIN rpl_semi_sync_slave SONAME '$SEMISYNC_SLAVE_PLUGIN';
  --enable_query_log
}



#
# This test verifies that *all* system variables are tested
# by the sys_vars suite. For every system variable
# there must be a <variable_name>_basic.test file.
#

#
# we can diff in perl or in sql, as it's my_SQL_test suite, do it in sql
#

perl;
  use File::Basename;
  my $dirname=dirname($ENV{MYSQLTEST_FILE});
  my @all_tests=<$dirname/*_basic{,_32,_64}.test>;
  open(F, '>', "$ENV{MYSQLTEST_VARDIR}/tmp/sys_vars.all_vars.txt") or die;
  binmode F;
  print F join "\n", sort map { s/_basic(_32|_64)?\.test$//; basename $_ } @all_tests;
EOF

#
# todo: fix Bug #55080 mysql-next-mr requires a specic to new added global variables test file
# to get rid of unxpected and probited following SELECT results
#

create table t1 (test_name text);
create table t2 (variable_name text);
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
eval load data infile "$MYSQLTEST_VARDIR/tmp/sys_vars.all_vars.txt" into table t1;

--disable_warnings
insert into t2 select variable_name from performance_schema.global_variables;
insert into t2 select variable_name from performance_schema.session_variables;
--enable_warnings

# Performance schema variables are too long for files named
# 'mysql-test/suite/sys_vars/t/' ...
# ... 'performance_schema_events_waits_history_long_size_basic-master.opt'
# to fit in the tar source distribution (limit in old tar)
# Renaming the tests to aliases below.

update t2 set variable_name= replace(variable_name, "performance_schema_", "pfs_");
update t2 set variable_name= replace(variable_name, "_history_long_", "_hl_");
update t2 set variable_name= replace(variable_name, "_history_", "_h_");
update t2 set variable_name= replace(variable_name, "_throttle_queries_not_using_indexes", "_throttle_qni");
update t2 set variable_name= replace(variable_name, "lock_order_", "lo_");

--sorted_result
select variable_name as `There should be *no* long test name listed below:` from t2
  where length(variable_name) > 50;

--sorted_result
select variable_name as `There should be *no* variables listed below:` from t2
  left join t1 on variable_name=test_name where test_name is null ORDER BY variable_name;

drop table t1;
drop table t2;

# Unloading the semisync plugins in case they were loaded
if (`SELECT @@have_dynamic_loading = 'YES' AND LENGTH('$SEMISYNC_MASTER_PLUGIN') > 0`)
{
  --disable_query_log
  UNINSTALL PLUGIN rpl_semi_sync_master;
  UNINSTALL PLUGIN rpl_semi_sync_slave;
  --enable_query_log
}

# Cleanup
--remove_file $MYSQLTEST_VARDIR/tmp/sys_vars.all_vars.txt
