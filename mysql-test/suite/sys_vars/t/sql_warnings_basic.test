################# mysql-test\t\sql_warnings_basic.test ########################
#                                                                             #
# Variable Name: sql_warnings                                                 #
# Scope: SESSION                                                              #
# Access Type: Dynamic                                                        #
# Data Type: boolean                                                          #
# Default Value:                                                              #
# Valid Values:0,1                                                            #
#                                                                             #
#                                                                             #
# Creation Date: 2008-02-07                                                   #
# Author:  Rizwan                                                             #
#                                                                             #
# Description: Test Cases of Dynamic System Variable sql_warnings             #
#              that checks the behavior of this variable in the following ways#
#              * Default Value                                                #
#              * Valid & Invalid values                                       #
#              * Scope & Access method                                        #
#              * Data Integrity                                               #
#                                                                             #
# Reference: http://dev.mysql.com/doc/refman/5.1/en/                          #
#  server-system-variables.html                                               #
#                                                                             #
###############################################################################

--source include/load_sysvars.inc


######################################################################## 
#                    START OF sql_warnings TESTS                       #
######################################################################## 


##############################################################################
#      Saving initial value of sql_warnings in a temporary variable          #
##############################################################################

SET @session_start_value = @@session.sql_warnings;
SELECT @session_start_value;


--echo '#--------------------FN_DYNVARS_166_01------------------------#'
######################################################################## 
#           Display the DEFAULT value of sql_warnings                  #
######################################################################## 

SET @@session.sql_warnings = 0;
SET @@session.sql_warnings = DEFAULT;
SELECT @@session.sql_warnings;

SET @@session.sql_warnings = 1;
SET @@session.sql_warnings = DEFAULT;
SELECT @@session.sql_warnings;


--echo '#---------------------FN_DYNVARS_166_02-------------------------#'
############################################################################# 
#   Check if sql_warnings can be accessed with and without @@ sign          #
############################################################################# 

SET sql_warnings = 1;
SELECT @@sql_warnings;

--Error ER_UNKNOWN_TABLE
SELECT session.sql_warnings;

--Error ER_UNKNOWN_TABLE
SELECT local.sql_warnings;

SET session sql_warnings = 0;
SELECT @@session.sql_warnings;


--echo '#--------------------FN_DYNVARS_166_03------------------------#'
######################################################################## 
#      change the value of sql_warnings to a valid value               #
######################################################################## 

SET @@session.sql_warnings = 0;
SELECT @@session.sql_warnings;
SET @@session.sql_warnings = 1;
SELECT @@session.sql_warnings;


--echo '#--------------------FN_DYNVARS_166_04-------------------------#'
########################################################################### 
#       Change the value of sql_warnings to invalid value                 #
########################################################################### 

--Error ER_WRONG_TYPE_FOR_VAR
SET @@session.sql_warnings = 0.6;
--Error ER_WRONG_VALUE_FOR_VAR
SET @@session.sql_warnings = "T";
--Error ER_WRONG_VALUE_FOR_VAR
SET @@session.sql_warnings = "Y";
--Error ER_WRONG_VALUE_FOR_VAR
SET @@session.sql_warnings = TRÜE;
--Error ER_WRONG_VALUE_FOR_VAR
SET @@session.sql_warnings = ÕN;
--error ER_PARSE_ERROR
SET @@session.sql_warnings = OF;
--Error ER_WRONG_VALUE_FOR_VAR
SET @@session.sql_warnings = ÓFF;
--Error ER_WRONG_VALUE_FOR_VAR
SET @@session.sql_warnings = '¹';
--Error ER_WRONG_VALUE_FOR_VAR
SET @@session.sql_warnings = NO;


--echo '#-------------------FN_DYNVARS_166_05----------------------------#'
########################################################################### 
#       Test if accessing global sql_warnings gives error                 #
########################################################################### 

SET @@global.sql_warnings = 1-@@global.sql_warnings;
SELECT @@global.sql_warnings;
SET @@global.sql_warnings = 1-@@global.sql_warnings;
SELECT @@global.sql_warnings;


--echo '#----------------------FN_DYNVARS_166_06------------------------#'
######################################################################### 
#     Check if the value in GLOBAL Table contains variable value        #
#########################################################################

--disable_warnings
SELECT count(VARIABLE_VALUE)
FROM performance_schema.global_variables 
WHERE VARIABLE_NAME='sql_warnings';
--enable_warnings


--echo '#----------------------FN_DYNVARS_166_07------------------------#'
######################################################################### 
#     Check if the value in GLOBAL Table matches value in variable      #
#########################################################################

--disable_warnings
SELECT IF(@@session.sql_warnings, "ON", "OFF") = VARIABLE_VALUE 
FROM performance_schema.session_variables 
WHERE VARIABLE_NAME='sql_warnings';
--enable_warnings
SELECT @@session.sql_warnings;
--disable_warnings
SELECT VARIABLE_VALUE
FROM performance_schema.session_variables 
WHERE VARIABLE_NAME='sql_warnings';
--enable_warnings

--echo '#---------------------FN_DYNVARS_166_08-------------------------#'
################################################################### 
#        Check if ON and OFF values can be used on variable       #
################################################################### 

SET @@session.sql_warnings = OFF;
SELECT @@session.sql_warnings;
SET @@session.sql_warnings = ON;
SELECT @@session.sql_warnings;

--echo '#---------------------FN_DYNVARS_166_09----------------------#'
################################################################### 
#      Check if TRUE and FALSE values can be used on variable     #
################################################################### 

SET @@session.sql_warnings = TRUE;
SELECT @@session.sql_warnings;
SET @@session.sql_warnings = FALSE;
SELECT @@session.sql_warnings;

##############################  
#   Restore initial value    #
##############################

SET @@session.sql_warnings = @session_start_value;
SELECT @@session.sql_warnings;


###############################################################
#                    END OF sql_warnings TESTS                #
############################################################### 
