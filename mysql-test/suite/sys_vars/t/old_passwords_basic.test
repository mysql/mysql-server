############## mysql-test\t\old_passwords_basic.test ##########################
#                                                                             #
# Variable Name: old_passwords                                                #
# Scope: GLOBAL | SESSION                                                     #
# Access Type: Dynamic                                                        #
# Data Type: boolean                                                          #
# Default Value: FALSE                                                        #
# Range:                                                                      #
#                                                                             #
#                                                                             #
# Creation Date: 2008-02-14                                                   #
# Author:  Salman                                                             #
#                                                                             #
# Description: Test Cases of Dynamic System Variable old_passwords            #
#              that checks the behavior of this variable in the following ways#
#              * Default Value                                                #
#              * Valid & Invalid values                                       #
#              * Scope & Access method                                        #
#              * Data Integrity                                               #
#                                                                             #
# Reference: http://dev.mysql.com/doc/refman/5.1/en/                          #
#  server-system-variables.html#option_mysqld_old-passwords                   #
#                                                                             #
###############################################################################

--source include/load_sysvars.inc
###################################################
#           START OF old_passwords TESTS          #
###################################################


#############################################################
#                 Save initial value                        #
#############################################################

SET @start_global_value = @@global.old_passwords;
SELECT @start_global_value;
SET @start_session_value = @@session.old_passwords;
SELECT @start_session_value;


--echo '#--------------------FN_DYNVARS_114_01-------------------------#'
###################################################
#     Display the DEFAULT value of old_passwords  #
###################################################

SET @@global.old_passwords = 2;
SET @@global.old_passwords = DEFAULT;
SELECT @@global.old_passwords;

SET @@session.old_passwords = 2;
SET @@session.old_passwords = DEFAULT;
SELECT @@session.old_passwords;


--echo '#--------------------FN_DYNVARS_114_02-------------------------#'
###################################################
#     Check the DEFAULT value of old_passwords    #
###################################################

SET @@global.old_passwords = DEFAULT;
SELECT @@global.old_passwords = FALSE;

SET @@session.old_passwords = DEFAULT;
SELECT @@session.old_passwords = FALSE;


--echo '#--------------------FN_DYNVARS_114_03-------------------------#'
#######################################################################
# Change the value of old_passwords to a valid value for GLOBAL Scope #
#######################################################################

SET @@global.old_passwords = 0;
SELECT @@global.old_passwords;
--error ER_WRONG_VALUE_FOR_VAR
SET @@global.old_passwords = 1;
SELECT @@global.old_passwords;
SET @@global.old_passwords = 2;
SELECT @@global.old_passwords;
SET @@global.old_passwords = DEFAULT;
SELECT @@global.old_passwords;

--echo '#--------------------FN_DYNVARS_114_04-------------------------#'
########################################################################
# Change the value of old_passwords to a valid value for SESSION Scope #
########################################################################
 
SELECT @@session.old_passwords;
SET @@session.old_passwords = 0;
SELECT @@session.old_passwords;
--error ER_WRONG_VALUE_FOR_VAR
SET @@session.old_passwords = 1;
SELECT @@session.old_passwords;
SET @@session.old_passwords = 2;
SELECT @@session.old_passwords;
SET @@session.old_passwords = DEFAULT;
SELECT @@session.old_passwords;


--echo '#------------------FN_DYNVARS_114_05-----------------------#'
#########################################################
# Change the value of old_passwords to an invalid value #
#########################################################

SET @@global.old_passwords = -1024;
SELECT @@global.old_passwords;
SET @@global.old_passwords = 65536;
SELECT @@global.old_passwords;
--Error ER_WRONG_TYPE_FOR_VAR
SET @@global.old_passwords = 65530.34;
SELECT @@global.old_passwords;
--Error ER_WRONG_TYPE_FOR_VAR
SET @@session.old_passwords = test;


--echo '#------------------FN_DYNVARS_114_06-----------------------#'
####################################################################
#   Check if the value in GLOBAL Table matches value in variable   #
####################################################################

--disable_warnings
SELECT IF(@@global.old_passwords, "1", "0") = VARIABLE_VALUE 
FROM performance_schema.global_variables 
WHERE VARIABLE_NAME='old_passwords';
--enable_warnings

--echo '#------------------FN_DYNVARS_114_07-----------------------#'
####################################################################
#  Check if the value in SESSION Table matches value in variable   #
####################################################################

--disable_warnings
SELECT IF(@@session.old_passwords, "1", "0") = VARIABLE_VALUE 
FROM performance_schema.session_variables 
WHERE VARIABLE_NAME='old_passwords';
--enable_warnings

--echo '#---------------------FN_DYNVARS_114_08----------------------#'
###############################################################################
#  Check if global and session variable are independent of each other         #
###############################################################################

SET @@old_passwords = 0;
SET @@global.old_passwords = 2;
SELECT @@old_passwords = @@global.old_passwords;


--echo '#---------------------FN_DYNVARS_114_09----------------------#'
###############################################################################
#    Check if accessing variable with SESSION,LOCAL and without SCOPE points  #
#    to same session variable                                                 #
###############################################################################

SET @@old_passwords = 2;
SELECT @@old_passwords = @@local.old_passwords;
SELECT @@local.old_passwords = @@session.old_passwords;


--echo '#---------------------FN_DYNVARS_114_10----------------------#'
########################################################################
#   Check if old_passwords can be accessed with and without @@ sign    #
########################################################################

SET old_passwords = 2;
SELECT @@old_passwords;
--Error ER_UNKNOWN_TABLE
SELECT local.old_passwords;
--Error ER_UNKNOWN_TABLE
SELECT session.old_passwords;
--Error ER_BAD_FIELD_ERROR
SELECT old_passwords = @@session.old_passwords;


####################################
#     Restore initial value        #
####################################

SET @@global.old_passwords = @start_global_value;
SELECT @@global.old_passwords;
SET @@session.old_passwords = @start_session_value;
SELECT @@session.old_passwords;


##################################################
#                 END OF old_passwords TESTS     #
##################################################

