
SET @start_global_value = @@global.innodb_status_output;
SELECT @start_global_value;

#
# exists as global only
#
--echo Valid values are 'ON' and 'OFF'
select @@global.innodb_status_output in (0, 1);
select @@global.innodb_status_output;
--error ER_INCORRECT_GLOBAL_LOCAL_VAR
select @@session.innodb_status_output;
show global variables like 'innodb_status_output';
show session variables like 'innodb_status_output';
--disable_warnings
select * from performance_schema.global_variables where variable_name='innodb_status_output';
select * from performance_schema.session_variables where variable_name='innodb_status_output';
--enable_warnings

#
# show that it's writable
#
set global innodb_status_output='OFF';
select @@global.innodb_status_output;
--disable_warnings
select * from performance_schema.global_variables where variable_name='innodb_status_output';
select * from performance_schema.session_variables where variable_name='innodb_status_output';
--enable_warnings
set @@global.innodb_status_output=1;
select @@global.innodb_status_output;
--disable_warnings
select * from performance_schema.global_variables where variable_name='innodb_status_output';
select * from performance_schema.session_variables where variable_name='innodb_status_output';
--enable_warnings
set global innodb_status_output=0;
select @@global.innodb_status_output;
--disable_warnings
select * from performance_schema.global_variables where variable_name='innodb_status_output';
select * from performance_schema.session_variables where variable_name='innodb_status_output';
--enable_warnings
set @@global.innodb_status_output='ON';
select @@global.innodb_status_output;
--disable_warnings
select * from performance_schema.global_variables where variable_name='innodb_status_output';
select * from performance_schema.session_variables where variable_name='innodb_status_output';
--enable_warnings
--error ER_GLOBAL_VARIABLE
set session innodb_status_output='OFF';
--error ER_GLOBAL_VARIABLE
set @@session.innodb_status_output='ON';

#
# incorrect types
#
--error ER_WRONG_TYPE_FOR_VAR
set global innodb_status_output=1.1;
--error ER_WRONG_TYPE_FOR_VAR
set global innodb_status_output=1e1;
--error ER_WRONG_VALUE_FOR_VAR
set global innodb_status_output=2;
--echo NOTE: The following should fail with ER_WRONG_VALUE_FOR_VAR (BUG#50643)
set global innodb_status_output=-3;
select @@global.innodb_status_output;
--disable_warnings
select * from performance_schema.global_variables where variable_name='innodb_status_output';
select * from performance_schema.session_variables where variable_name='innodb_status_output';
--enable_warnings
set global innodb_status_output=DEFAULT;
select @@global.innodb_status_output;
--disable_warnings
select * from performance_schema.global_variables where variable_name='innodb_status_output';
select * from performance_schema.session_variables where variable_name='innodb_status_output';
--enable_warnings
--error ER_WRONG_VALUE_FOR_VAR
set global innodb_status_output='AUTO';

#
# Cleanup
#

SET @@global.innodb_status_output = @start_global_value;
SELECT @@global.innodb_status_output;
