
--echo #
--echo # Variable name : session_track_system_variables
--echo # Scope         : Global & Session
--echo #

--echo # Global - default
SELECT @@global.session_track_system_variables;
--echo # Session - default
SELECT @@session.session_track_system_variables;
--echo

--echo # via performance_schema.global_variables
--disable_warnings
SELECT * FROM performance_schema.global_variables WHERE VARIABLE_NAME LIKE 'session_track%' ORDER BY VARIABLE_NAME;
--enable_warnings

--echo # via performance_schema.session_variables
--disable_warnings
SELECT * FROM performance_schema.session_variables WHERE VARIABLE_NAME LIKE 'session_track%' ORDER BY VARIABLE_NAME;
--enable_warnings

# Save the global value to be used to restore the original value.
SET @global_saved_tmp =  @@global.session_track_system_variables;
--echo

--echo # Altering global variable's value
SET @@global.session_track_system_variables='autocommit';
SELECT @@global.session_track_system_variables;
SELECT @@session.session_track_system_variables;
--echo

--echo # Altering session variable's value
SET @@session.session_track_system_variables='autocommit';
SELECT @@global.session_track_system_variables;
SELECT @@session.session_track_system_variables;
--echo

--echo # Variables' values in a new session.
connect (con1,"127.0.0.1",root,,test,$MASTER_MYPORT,);

--echo # Global - expect "autocommit"
SELECT @@global.session_track_system_variables;
--echo
--echo # Session - expect "autocommit"
SELECT @@session.session_track_system_variables;
--echo

--echo # Switching to the default connection.
connection default;

SELECT @@global.session_track_system_variables;
SELECT @@session.session_track_system_variables;
--echo

--echo # Test if DEFAULT is working as expected.
SET @@global.session_track_system_variables = DEFAULT;
SET @@session.session_track_system_variables = DEFAULT;
--echo

SELECT @@global.session_track_system_variables;
SELECT @@session.session_track_system_variables;
--echo

--echo # Variables' values in a new session (con2).
connect (con2,"127.0.0.1",root,,test,$MASTER_MYPORT,);

SELECT @@global.session_track_system_variables;
SELECT @@session.session_track_system_variables;
--echo

--echo # Altering session should not affect global.
SET @@session.session_track_system_variables = 'sql_mode';
SELECT @@global.session_track_system_variables;
SELECT @@session.session_track_system_variables;
--echo

--echo # Variables' values in a new session (con3).
connect (con3,"127.0.0.1",root,,test,$MASTER_MYPORT,);

--echo # Altering global should not affect session.
SET @@global.session_track_system_variables = 'sql_mode';
SELECT @@global.session_track_system_variables;
SELECT @@session.session_track_system_variables;
--echo

--echo # Switching to the default connection.
connection default;

--echo # Testing NULL
SET @@global.session_track_system_variables = NULL;
SET @@session.session_track_system_variables = NULL;

--echo # Global - expect NULL
SELECT @@global.session_track_system_variables;
--echo # Session - expect NULL
SELECT @@session.session_track_system_variables;


--echo # testing with duplicate entries (must fail).
# Lets first set it to some valid value.
SET @@global.session_track_system_variables= "time_zone";
SET @@session.session_track_system_variables= "time_zone";
# Now set with duplicate entries (must fail).
--error ER_DUP_LIST_ENTRY
SET @@global.session_track_system_variables= "sql_mode,sql_mode";
--error ER_DUP_LIST_ENTRY
SET @@session.session_track_system_variables= "sql_mode,sql_mode";
--echo # Global - must remain unchanged, 'time_zone'
SELECT @@global.session_track_system_variables;
--echo # Session - must remain unchanged, 'time_zone'
SELECT @@session.session_track_system_variables;
--echo

--echo # Restoring the original values.
SET @@global.session_track_system_variables = @global_saved_tmp;

--echo # End of tests.
