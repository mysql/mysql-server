
# Save the initial number of concurrent sessions
--source include/count_sessions.inc

# Setup
CREATE USER pwd_test_u1@localhost;
CREATE USER pwd_test_u2@localhost;
GRANT ALL ON *.* TO pwd_test_u2@localhost;

# Test SET PASSWORD=PASSWORD() syntax

--connect(con_u1, localhost, pwd_test_u1)
SET PASSWORD= PASSWORD('Pass!@34w0rD');
disconnect con_u1;

--connect(con_u1, localhost, pwd_test_u1, Pass!@34w0rD,,,,SSL)
set @saved_old_passwords= @@session.old_passwords;
set @@session.old_passwords= 2;
SET PASSWORD= PASSWORD(  'Pass!@34w0rD'  );
set @@session.old_passwords= @saved_old_passwords;
disconnect con_u1;

--connect(con_u1, localhost, pwd_test_u1, Pass!@34w0rD,,,,SSL)
SET PASSWORD= PASSWORD(  'Pass!@34w0rD');
disconnect con_u1;

--connect(con_u1, localhost, pwd_test_u1, Pass!@34w0rD,,,,SSL)
SET PASSWORD= PASSWORD('Pass!@34w0rD'  );
disconnect con_u1;

--connect(con_u1, localhost, pwd_test_u1, Pass!@34w0rD,,,,SSL)
SET PASSWORD= PASSWORD('');
disconnect con_u1;

# Test SET PASSWORD FOR <user> = PASSWORD() syntax

--connect(con_u2, localhost, pwd_test_u2,,,,,SSL)

SET PASSWORD FOR pwd_test_u1@localhost = PASSWORD('Pass!@34w0rD');
--exec $MYSQL -upwd_test_u1 -pPass!@34w0rD --ssl-mode=REQUIRED -e "select current_user";
set @saved_old_passwords= @@session.old_passwords;
set @@session.old_passwords= 2;
SET PASSWORD FOR pwd_test_u1@localhost = PASSWORD(  'Pass!@34w0rD'  );
set @@session.old_passwords= @saved_old_passwords;
--exec $MYSQL -upwd_test_u1 -pPass!@34w0rD --ssl-mode=REQUIRED -e "select current_user";
SET PASSWORD FOR pwd_test_u1@localhost = PASSWORD(  'Pass!@34w0rD');
--exec $MYSQL -upwd_test_u1 -pPass!@34w0rD --ssl-mode=REQUIRED -e "select current_user";
SET PASSWORD FOR pwd_test_u1@localhost = PASSWORD('Pass!@34w0rD'  );
--exec $MYSQL -upwd_test_u1 -pPass!@34w0rD --ssl-mode=REQUIRED -e "select current_user";

SET PASSWORD FOR pwd_test_u2@localhost = PASSWORD('Pass!@34w0rD');
disconnect con_u2;

--connect(con_u2, localhost, pwd_test_u2, Pass!@34w0rD,,,,SSL)
SET PASSWORD FOR pwd_test_u2@localhost = PASSWORD(  'Pass!@34w0rD'  );
disconnect con_u2;

--connect(con_u2, localhost, pwd_test_u2, Pass!@34w0rD,,,,SSL)
set @saved_old_passwords= @@session.old_passwords;
set @@session.old_passwords= 2;
SET PASSWORD FOR pwd_test_u2@localhost = PASSWORD(  'Pass!@34w0rD');
set @@session.old_passwords= @saved_old_passwords;
disconnect con_u2;

--connect(con_u2, localhost, pwd_test_u2, Pass!@34w0rD,,,,SSL)
SET PASSWORD FOR pwd_test_u2@localhost = PASSWORD('Pass!@34w0rD'  );
disconnect con_u2;

--connect(con_u2, localhost, pwd_test_u2, Pass!@34w0rD,,,,SSL)
SET PASSWORD FOR pwd_test_u2@localhost = PASSWORD('');
disconnect con_u2;

# Cleanup
connection default;

DROP USER pwd_test_u1@localhost;
DROP USER pwd_test_u2@localhost;


# Wait till all disconnects are completed
--source include/wait_until_count_sessions.inc
