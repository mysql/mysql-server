# 
# ANALYZE TABLE for partitioned tables and ANALYZE PARTITION
#
--source include/have_partition.inc
--source ../have_engine.inc


--disable_warnings
DROP TABLE IF EXISTS t1,t2;
--enable_warnings

--let $partition_options = PARTITION BY HASH(a) PARTITIONS 2
--source ../create_table.inc
if ($mysql_errname)
{
  --let $my_last_stmt = $create_statement
  --let $functionality = Partitions
  --source ../unexpected_result.inc
}
if (!$mysql_errname)
{
  INSERT INTO t1 (a,b) VALUES (1,'a'),(2,'b'),(3,'c'),(2,'d'),(4,'e'),(100,'f'),(101,'g');
  let $partiton_options = PARTITION BY RANGE(a) ( 
    PARTITION p0 VALUES LESS THAN (100), 
    PARTITION p1 VALUES LESS THAN MAXVALUE 
  );
  --let $table_name = t2
  --source ../create_table.inc

  INSERT INTO t2 (a,b) SELECT a,b FROM t1;

  INSERT INTO t1 (a,b) VALUES (3,'c');

  --let $alter_definition = ANALYZE PARTITION p0
  --source ../alter_table.inc
  if ($mysql_errname)
  {
    --let $my_last_stmt = $alter_statement
    --let $functionality = ALTER TABLE .. ANALYZE PARTITION
    --source unexpected_result.inc
  }

  INSERT INTO t2 (a,b) VALUES (4,'d'), (1000,'e');

  --let $alter_definition = ANALYZE PARTITION LOCAL ALL
  --source ../alter_table.inc

  INSERT INTO t1 (a,b) VALUES (5,'f'),(50,'g');

  --let $alter_definition = ANALYZE PARTITION NO_WRITE_TO_BINLOG p1,p0
  --source ../alter_table.inc

  DROP TABLE t1, t2;
}

let $extra_tbl_opts = PARTITION BY HASH(a) PARTITIONS 2;
--source ../analyze_table.inc
let $extra_tbl_opts =;


--source ../cleanup_engine.inc
