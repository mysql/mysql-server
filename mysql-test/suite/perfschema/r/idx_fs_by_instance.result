select OBJECT_INSTANCE_BEGIN from performance_schema.file_summary_by_instance limit 1
into @oib;
select FILE_NAME from performance_schema.file_summary_by_instance limit 1
into @fname;
select EVENT_NAME from performance_schema.file_summary_by_instance limit 1
into @ename;

====================================================================
Testing index for columns OBJECT_INSTANCE_BEGIN
====================================================================
############ Explain for Query ####################################
explain select COUNT(*) 
from performance_schema.file_summary_by_instance 
where OBJECT_INSTANCE_BEGIN = "impossible";
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	NULL	NULL	NULL	NULL	NULL	NULL	NULL	#	NULL	no matching row in const table
############ Explain for Query ####################################
explain select COUNT(*)
from performance_schema.file_summary_by_instance
where OBJECT_INSTANCE_BEGIN > "impossible";
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	file_summary_by_instance	NULL	ALL	PRIMARY	NULL	NULL	NULL	#	33.33	Using where
############ Explain for Query ####################################
explain select COUNT(*)
from performance_schema.file_summary_by_instance
where OBJECT_INSTANCE_BEGIN < "2";
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	file_summary_by_instance	NULL	ALL	PRIMARY	NULL	NULL	NULL	#	33.33	Using where
############ Explain for Query ####################################
explain select COUNT(*)
from performance_schema.file_summary_by_instance
where OBJECT_INSTANCE_BEGIN = @oib;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	file_summary_by_instance	NULL	const	PRIMARY	PRIMARY	8	const	#	100.00	NULL
############# Explain End #########################################
flush status;
select COUNT(*)
from performance_schema.file_summary_by_instance
where OBJECT_INSTANCE_BEGIN = @oib;
COUNT(*)
#
OK: handler_read_key incremented

====================================================================
Testing index for columns FILE_NAME
====================================================================
############ Explain for Query ####################################
explain select COUNT(*) 
from performance_schema.file_summary_by_instance 
where FILE_NAME = "impossible";
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	file_summary_by_instance	NULL	ref	FILE_NAME	FILE_NAME	2050	const	#	100.00	NULL
############ Explain for Query ####################################
explain select COUNT(*)
from performance_schema.file_summary_by_instance
where FILE_NAME > "impossible";
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	file_summary_by_instance	NULL	ALL	FILE_NAME	NULL	NULL	NULL	#	33.33	Using where
############ Explain for Query ####################################
explain select COUNT(*)
from performance_schema.file_summary_by_instance
where FILE_NAME < "2";
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	file_summary_by_instance	NULL	ALL	FILE_NAME	NULL	NULL	NULL	#	33.33	Using where
############ Explain for Query ####################################
explain select COUNT(*)
from performance_schema.file_summary_by_instance
where FILE_NAME = @fname;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	file_summary_by_instance	NULL	ref	FILE_NAME	FILE_NAME	2050	const	#	100.00	NULL
############# Explain End #########################################
flush status;
select COUNT(*)
from performance_schema.file_summary_by_instance
where FILE_NAME = @fname;
COUNT(*)
#
OK: handler_read_key incremented

====================================================================
Testing index for columns EVENT_NAME
====================================================================
############ Explain for Query ####################################
explain select COUNT(*) 
from performance_schema.file_summary_by_instance 
where EVENT_NAME = "impossible";
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	file_summary_by_instance	NULL	ref	EVENT_NAME	EVENT_NAME	514	const	#	100.00	NULL
############ Explain for Query ####################################
explain select COUNT(*)
from performance_schema.file_summary_by_instance
where EVENT_NAME > "impossible";
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	file_summary_by_instance	NULL	ALL	EVENT_NAME	NULL	NULL	NULL	#	33.33	Using where
############ Explain for Query ####################################
explain select COUNT(*)
from performance_schema.file_summary_by_instance
where EVENT_NAME < "2";
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	file_summary_by_instance	NULL	ALL	EVENT_NAME	NULL	NULL	NULL	#	33.33	Using where
############ Explain for Query ####################################
explain select COUNT(*)
from performance_schema.file_summary_by_instance
where EVENT_NAME = @ename;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	file_summary_by_instance	NULL	ref	EVENT_NAME	EVENT_NAME	514	const	#	100.00	NULL
############# Explain End #########################################
flush status;
select COUNT(*)
from performance_schema.file_summary_by_instance
where EVENT_NAME = @ename;
COUNT(*)
#
OK: handler_read_key incremented
