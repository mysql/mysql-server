set binlog_format=mixed;
RESET MASTER;
select count(*) > 0 from performance_schema.setup_instruments;
count(*) > 0
1
update performance_schema.setup_instruments set enabled='NO'
  where name like "wait/synch/rwlock/sql/%"
  and name not in ("wait/synch/rwlock/sql/CRYPTO_dynlock_value::lock");
select count(*) > 0 from performance_schema.events_waits_current;
count(*) > 0
1
drop table if exists test.t1;
drop table if exists test.t2;
create table test.t1 (thread_id integer);
create table test.t2 (name varchar(128));
insert into test.t1
select thread_id from performance_schema.events_waits_current;
insert into test.t2
select name from performance_schema.setup_instruments
where name like "wait/synch/rwlock/sql/%"
    and name not in ("wait/synch/rwlock/sql/CRYPTO_dynlock_value::lock");
drop table test.t1;
drop table test.t2;
update performance_schema.setup_instruments set enabled='YES'
  where name like "wait/synch/rwlock/sql/%"
  and name not in ("wait/synch/rwlock/sql/CRYPTO_dynlock_value::lock");
show binlog events from <binlog_start>;
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
master-bin.000001	#	Query	#	#	use `test`; DROP TABLE IF EXISTS `t1` /* generated by server */
master-bin.000001	#	Query	#	#	use `test`; DROP TABLE IF EXISTS `t2` /* generated by server */
master-bin.000001	#	Query	#	#	use `test`; create table test.t1 (thread_id integer)
master-bin.000001	#	Query	#	#	use `test`; create table test.t2 (name varchar(128))
master-bin.000001	#	Query	#	#	BEGIN
master-bin.000001	#	Table_map	#	#	table_id: # (test.t1)
master-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
master-bin.000001	#	Query	#	#	COMMIT
master-bin.000001	#	Query	#	#	BEGIN
master-bin.000001	#	Table_map	#	#	table_id: # (test.t2)
master-bin.000001	#	Write_rows	#	#	table_id: # flags: STMT_END_F
master-bin.000001	#	Query	#	#	COMMIT
master-bin.000001	#	Query	#	#	use `test`; DROP TABLE `t1` /* generated by server */
master-bin.000001	#	Query	#	#	use `test`; DROP TABLE `t2` /* generated by server */
