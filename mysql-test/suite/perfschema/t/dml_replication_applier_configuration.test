# Tests for PERFORMANCE_SCHEMA

# This test verifies the correct behaviour in case of invalid
# usage of DMLs on the table replication_applier_configuration.

--disable_result_log
SELECT * FROM performance_schema.replication_applier_configuration
  LIMIT 1;

SELECT * FROM performance_schema.replication_applier_configuration
  WHERE desired_delay=12;

SELECT * FROM performance_schema.replication_applier_configuration
  WHERE privilege_checks_user=NULL;
--enable_result_log

--error ER_TABLEACCESS_DENIED_ERROR
INSERT INTO performance_schema.replication_applier_configuration
  SET desired_delay=2;

--error ER_TABLEACCESS_DENIED_ERROR
INSERT INTO performance_schema.replication_applier_configuration
  SET privilege_checks_user="'user'@'%'";

--error ER_TABLEACCESS_DENIED_ERROR
UPDATE performance_schema.replication_applier_configuration
  SET desired_delay=12 WHERE desired_delay=2;

--error ER_TABLEACCESS_DENIED_ERROR
UPDATE performance_schema.replication_applier_configuration
  SET privilege_checks_user="'user'@'%'" WHERE privilege_checks_user=NULL;

--error ER_TABLEACCESS_DENIED_ERROR
DELETE FROM performance_schema.replication_applier_configuration
  WHERE desired_delay=12;

--error ER_TABLEACCESS_DENIED_ERROR
DELETE FROM performance_schema.replication_applier_configuration
  WHERE privilege_checks_user="'user'@'%'";

--error ER_TABLEACCESS_DENIED_ERROR
DELETE FROM performance_schema.replication_applier_configuration;

-- error ER_TABLEACCESS_DENIED_ERROR
LOCK TABLES performance_schema.replication_applier_configuration READ;
UNLOCK TABLES;

-- error ER_TABLEACCESS_DENIED_ERROR
LOCK TABLES performance_schema.replication_applier_configuration WRITE;
UNLOCK TABLES;
