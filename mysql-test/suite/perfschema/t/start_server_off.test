# Tests for PERFORMANCE_SCHEMA

--source ../include/start_server_common.inc

select * from information_schema.engines
  where engine = "PERFORMANCE_SCHEMA";

# Expecting all off / zero
show global status like "performance_schema%_lost";

# Expect all consumers disabled

select * from performance_schema.setup_consumers;

# Expect no instruments

select * from performance_schema.setup_instruments;

select * from performance_schema.setup_actors;
select * from performance_schema.setup_objects;

# Expect INSERT to fail with an error

--error ER_WRONG_PERFSCHEMA_USAGE
insert into performance_schema.setup_objects values ('TABLE', 'myschema', 'myobject', 'YES', 'YES');

--error ER_WRONG_PERFSCHEMA_USAGE
insert into performance_schema.setup_actors values ('myhost', 'mysuser', 'myrole', 'YES', 'YES');

# Expect SELECT, UPDATE, DELETE and TRUNCATE to affect 0 rows, but with
# no error because the target row(s) will not be found

select * from performance_schema.setup_objects;
update performance_schema.setup_objects set OBJECT_NAME = 'myobject';
delete from performance_schema.setup_objects;

select * from performance_schema.setup_actors;
update performance_schema.setup_actors set HOST = 'myhost';
delete from performance_schema.setup_actors;

truncate performance_schema.events_stages_history_long;
truncate performance_schema.events_statements_history_long;
truncate performance_schema.events_waits_history_long;
truncate performance_schema.setup_objects;
truncate performance_schema.setup_actors;

#
# Verify SHOW STATUS and SHOW VARIABLES
#

# Expect that status variables are still accessible
show global status like "performance_schema%_lost";
show session status like "performance_schema%_lost";

# Expect that system variables are still accessible
show global variables like "performance_schema";
show session variables like "performance_schema";

