source include/not_valgrind.inc;
source include/have_memcached_plugin.inc;
source include/not_windows.inc;

--disable_query_log
CALL mtr.add_suppression("daemon-memcached-w-batch-size': unsigned");
CALL mtr.add_suppression("Could not obtain server's UPN to be used as target service name");
CALL mtr.add_suppression("Warning: MySQL is trying to drop");
--enable_query_log

--enable_connect_log
SET @transaction_isolation= @@global.transaction_isolation;
SET GLOBAL TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

# Create the memcached tables
--disable_query_log
source include/memcache_config.inc;
--enable_query_log

INSERT INTO cache_policies VALUES("cache_policy", "innodb_only",
				  "innodb_only", "innodb_only", "innodb_only");

INSERT INTO config_options VALUES("separator", "|");

INSERT INTO containers VALUES ("desc_t1", "test", "t1",
			       "c1", "c2,c21", "c3", "c4", "c5", "PRIMARY");

CREATE USER mysqltest1@localhost;
connect (mysqltest1,localhost,mysqltest1,,);
connection mysqltest1;
USE test;

--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings
CREATE TABLE t1        (c1  VARCHAR(32),
                        c11 VARCHAR(32),
			c2  VARCHAR(1024),
			c21 VARCHAR(1024),
			c3 INT, c4 BIGINT UNSIGNED, c5 INT, primary key(c1))
ENGINE=INNODB;

INSERT INTO t1 VALUES ('D','D', 'Darmstadt', 'City', 0, 0, 0);
INSERT INTO t1 VALUES ('B','B', 'Berlin', 'Mitte', 0, 0, 0);
INSERT INTO t1 VALUES ('C','C', 'Cottbus', 'West', 0, 0 ,0);
INSERT INTO t1 VALUES ('H','H', 'Hamburg', 'Norderstedt', 0, 0, 0);

connection default;

--let $memcached_address=127.0.0.1:11224
--source ../include/load_daemon_memcached_expecting_success.inc

connection mysqltest1;
USE test;
--sorted_result
SELECT c1,c11,c2,c21 FROM t1;

perl;
use DBI;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:11224" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here are the memcached results with D,B,H,C:\n";
$val = $memd->get("D");
if ($val) { print "$val\n"; }
$val = $memd->get("B");
if ($val) { print "$val\n"; }
$val = $memd->get("H");
if ($val) { print "$val\n"; }
$val = $memd->get("C");
if ($val) { print "$val\n"; }
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c11,c2,c21 FROM t1;

perl;
use DBI;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:11224" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here are the memcached results after set:\n";
$val = $memd->set("E","Essen|Ost");
$val = $memd->get("E");
if ($val) { print "$val\n"; }
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c11,c2,c21 FROM t1;

perl;
use DBI;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:11224" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here are the memcached results after add:\n";
$val = $memd->add("F","Frankfurt|Sachsenhause");
$val = $memd->get("F");
if ($val) { print "$val\n"; }
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c11,c2,c21 FROM t1;

perl;
use DBI;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:11224" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here are the memcached results after replace:\n";
$val = $memd->replace("F","Frankfurt a. M.|Sachsenhausen");
$val = $memd->get("F");
if ($val) { print "$val\n"; }
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c11,c2,c21 FROM t1;

perl;
use DBI;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:11224" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here are the memcached results after delete:\n";
$val = $memd->delete("F");
$val = $memd->get("F");
if ($val) { print "$val\n"; }
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c11,c2,c21 FROM t1;

perl;
use DBI;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:11224" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here are the memcached results after add Frankfurt|Airport:\n";
$val = $memd->add("F","Frankfurt|Airport");
$val = $memd->get("F");
if ($val) { print "$val\n"; }
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c11,c2,c21 FROM t1;

perl;
use DBI;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:11224" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here are the memcached results after replace Frankfurt a.M|Sachsenhausen.:\n";
$val = $memd->replace("F","Frankfurt a. M.|Sachsenhausen");
$val = $memd->get("F");
if ($val) { print "$val\n"; }
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c11,c2,c21 FROM t1;

connection default;
# Stop plugin befor innodb_memcached configuration
UNINSTALL PLUGIN daemon_memcached;
# We can never drop primary key
ALTER TABLE test.t1 DROP PRIMARY KEY;
--let $memcached_address=127.0.0.1:11224
--source ../include/load_daemon_memcached_expecting_error.inc

connection mysqltest1;
perl;
use DBI;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:11224" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here are the memcached results after set:\n";
$val = $memd->set("E","Essen|Ost");
$val = $memd->get("E");
if ($val) { print "$val\n"; }
$val = $memd->get("H");
if ($val) { print "$val\n"; }
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c11,c2,c21 FROM t1;

connection default;
# Stop plugin befor innodb_memcached configuration
UNINSTALL PLUGIN daemon_memcached;
ALTER TABLE test.t1 ADD CONSTRAINT PRIMARY KEY (c1);
--let $memcached_address=127.0.0.1:11224
--source ../include/load_daemon_memcached_expecting_success.inc

SHOW CREATE TABLE test.t1;

connection mysqltest1;
perl;
use DBI;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:11224" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here are the memcached results after set:\n";
$val = $memd->set("E","Essen|Ost");
$val = $memd->get("E");
if ($val) { print "$val\n"; }
$val = $memd->add("F","Frankfurt|Sachsenhause");
$val = $memd->get("F");
if ($val) { print "$val\n"; }
$val = $memd->get("H");
if ($val) { print "$val\n"; }
$memd->disconnect_all;
EOF

--sorted_result
SELECT c1,c11,c2,c21 FROM t1;

# Now switch to column "c11"
connection default;
# Stop plugin before innodb_memcached configuration
UNINSTALL PLUGIN daemon_memcached;
ALTER TABLE test.t1 DROP COLUMN c1;
# Need to add index on column c11 and also update the innodb_memcache.containers
UPDATE innodb_memcache.containers set key_columns = "c11", unique_idx_name_on_key="idx";
create unique index idx on test.t1(c11);
--let $memcached_address=127.0.0.1:11224
--source ../include/load_daemon_memcached_expecting_success.inc

connection mysqltest1;
perl;
use DBI;
use Cache::Memcached;
my $memd = new Cache::Memcached {
  'servers' => [ "127.0.0.1:11224" ],
  'connect_timeout' => 20,
  'select_timeout' => 20
};
print "Here are the memcached results after add:\n";
$val = $memd->set("E","Essen|Ost");
$val = $memd->get("E");
if ($val) { print "$val\n"; }
$val = $memd->add("F","Frankfurt|Sachsenhause");
$val = $memd->get("F");
if ($val) { print "$val\n"; }
$val = $memd->get("H");
if ($val) { print "$val\n"; }
$memd->disconnect_all;
EOF

--sorted_result
SELECT c11,c2,c21 FROM t1;

DROP TABLE t1;
connection default;
disconnect mysqltest1;

UNINSTALL PLUGIN daemon_memcached;
DROP DATABASE innodb_memcache;
DROP USER mysqltest1@localhost;

SET @@global.transaction_isolation= @transaction_isolation;
