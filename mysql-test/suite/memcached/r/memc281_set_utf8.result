SET @transaction_isolation= @@global.transaction_isolation;
SET GLOBAL TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
INSERT INTO cache_policies VALUES("cache_policy", "innodb_only",
"innodb_only", "innodb_only", "innodb_only");
INSERT INTO config_options VALUES("separator", "|");
INSERT INTO containers VALUES ("desc_t1", "test", "t1",
"c1", "c2,c21", "c3", "c4", "c5", "PRIMARY");
USE test;
DROP TABLE IF EXISTS t1;
CREATE TABLE t1        (c1 VARCHAR(30) NOT NULL DEFAULT '',
c2 CHAR(120) NOT NULL DEFAULT '',
c21 CHAR(60) NOT NULL DEFAULT '',
primary key(c1))
ENGINE = INNODB DEFAULT CHARSET UTF8;
Warnings:
Warning	3719	'utf8' is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
INSERT INTO t1 VALUES ('1', 'Darmstadt', 'City');
INSERT INTO t1 VALUES ('2', 'Berlin', 'Mitte');
INSERT INTO t1 VALUES ('3', 'Cottbus', 'West');
INSERT INTO t1 VALUES ('4', 'München', 'Süd');
INSTALL PLUGIN daemon_memcached SONAME 'libmemcached.so';
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `c1` varchar(30) NOT NULL DEFAULT '',
  `c2` char(120) NOT NULL DEFAULT '',
  `c21` char(60) NOT NULL DEFAULT '',
  PRIMARY KEY (`c1`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8
SELECT c1, c2, c21 FROM t1;
c1	c2	c21
1	Darmstadt	City
2	Berlin	Mitte
3	Cottbus	West
4	München	Süd
Here are the memcached results before set:
Darmstadt                                                                                                               |City                                                        
Here are the memcached results after set:
Beijing                                                                                                                 |City                                                        
SELECT c1, c2, c21 FROM t1;
c1	c2	c21
1	Beijing	City
2	Berlin	Mitte
3	Cottbus	West
4	München	Süd
DROP TABLE t1;
UNINSTALL PLUGIN daemon_memcached;
DROP DATABASE innodb_memcache;
SET @@global.transaction_isolation= @transaction_isolation;
