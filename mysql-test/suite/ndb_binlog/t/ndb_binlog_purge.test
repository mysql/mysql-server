-- source include/have_ndb.inc
-- source include/have_binlog_format_mixed_or_row.inc
-- source include/have_debug.inc

--echo Test binlog purging, especially 'automatic' purging

# TODO
#   Manual purge




--echo Test expire-log-days handling as part of normal operation
--echo Logs are rotated as part of transaction COMMIT (to avoid
--echo a transaction being split across 2 files), rotation checks
--echo expire-logs-days to decide whether to purge, and purging
--echo calls into the Ndb handler to think about deleting rows
--echo from ndb_binlog_index.
--echo The delete from ndb_binlog_index is itself a SQL statement
--echo executing *during* the COMMIT of some other transaction,
--echo potentially in some other engine.  Don't want to think
--echo about that too closely

 
show variables like 'log_bin';

# Commit transactions to 2 different engines so that
# a single binlog file has ndb entries to delete from
# mysql.ndb_binlog_index, and may decide to do this
# while committing a transaction on some other engine
# myisam or innodb will do.

use test;
create table test.tm (b varchar(1000)) engine=myisam;
create table test.tn (b varchar(1000)) engine=ndb;

delimiter %;
create procedure go_forth_and_make_binlog(loops int)
begin
  set @x = 0;
  repeat
    insert into test.tm values (repeat('C', 1000));
    insert into test.tm values (repeat('C', 1000));
    insert into test.tm values (repeat('C', 1000));
    insert into test.tm values (repeat('C', 1000));
    insert into test.tm values (repeat('C', 1000));
    insert into test.tm values (repeat('C', 1000));
    insert into test.tm values (repeat('C', 1000));
    insert into test.tn values (repeat('N', 1000));
    delete from test.tm;
    delete from test.tn;
    select sleep(0.1);
    set @x = @x + 1;
  until @x = loops
  end repeat;
end%

delimiter ;%

--disable_result_log
call go_forth_and_make_binlog(40);
--enable_result_log

--echo Now test binlog expiration at startup...
--echo Disable the 'immediate expiration' mechanism
set global debug='';

--echo Create some binlogs...
--disable_result_log
call go_forth_and_make_binlog(40);
--enable_result_log

#show binary logs;

# Ignore the warning generated by ndbcluster's binlog thread
# when mysqld is restarted
--disable_query_log ONCE
call mtr.add_suppression("mysqld startup An incident event has been written");

--echo Now restart, should re-pickup the expire-log-days
--echo debug setting from the config file, and perform
--echo expire-logs action at restart...
let $mysqld_name=mysqld.1.1;
--source include/restart_mysqld.inc

--source include/ndb_not_readonly.inc

#show binary logs;


drop procedure go_forth_and_make_binlog;
drop table tm;
drop table tn;
