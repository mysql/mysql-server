-- source include/have_ndb.inc
-- source include/have_binlog_format_mixed_or_row.inc

create table test.t1(a int primary key) engine=ndb;

set global ndb_log_apply_status=Off;
show variables like '%ndb_log_apply_status%';

reset slave;
reset master;
--echo Should have empty apply status table
select * from mysql.ndb_apply_status;

--echo Dummy incoming ndb_apply_status updates, should not be logged
begin;
insert into mysql.ndb_apply_status values (555, 12345, 'binlog.000001', 20, 30);
insert into mysql.ndb_apply_status values (666, 67890, 'binlog.000001', 50, 60);
replace into test.t1 values (1); # So that epoch is non-empty
commit;

--echo Should not see ndb_apply_status updates in the Binlog

# Synchronise with Binlog
--disable_result_log
show binlog events;
--enable_result_log

let $Binlog_condition= like '%binlog.000001%';
--source suite/ndb_binlog/t/ndb_binlog_get_binlog_stmts_basic.inc

set global ndb_log_apply_status=On;
show variables like '%ndb_log_apply_status%';

reset slave;
reset master;
--echo Should have empty apply status table
select * from mysql.ndb_apply_status;

--echo Dummy incoming ndb_apply_status updates, should be logged
begin;
insert into mysql.ndb_apply_status values (555, 12345, 'binlog.000001', 20, 30);
insert into mysql.ndb_apply_status values (666, 67890, 'binlog.000001', 50, 60);
replace into test.t1 values (1); # So that epoch is non-empty
commit;

--echo Should see ndb_apply_status updates in the Binlog

# Synchronise with Binlog
--disable_result_log
show binlog events;
--enable_result_log

let $Binlog_condition= like '%binlog.000001%';
--source suite/ndb_binlog/t/ndb_binlog_get_binlog_stmts_basic.inc

set global ndb_log_apply_status=Off;
drop table test.t1;