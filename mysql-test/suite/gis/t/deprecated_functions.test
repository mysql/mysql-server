#####################################################################
#                                                                   #
# This test ensures that all functional requirements in WL#8055     #
# are met. To summarize, it is about deprecating 66 function names. #
# These functions are deprecated in 5.7, and will be removed in a   #
# future release.                                                   #
#                                                                   #
# Creation Date: 2014-11-21                                         #
# Author : Erik Fr√∏seth                                             #
#                                                                   #
#####################################################################
--source include/no_protocol.inc

SELECT Contains(NULL, NULL);
SELECT Disjoint(NULL, NULL);
SELECT Equals(NULL, NULL);
SELECT Intersects(NULL, NULL);
SELECT Overlaps(NULL, NULL);
SELECT Within(NULL, NULL);
SELECT Area(NULL);
SELECT HEX(AsBinary(NULL));
SELECT AsText(NULL);
SELECT HEX(AsWKB(NULL));
SELECT AsWKT(NULL);
SELECT Buffer(NULL, NULL);
SELECT Centroid(NULL);
SELECT ConvexHull(NULL);
SELECT Crosses(NULL, NULL);
SELECT Dimension(NULL);
SELECT Distance(NULL, NULL);
SELECT EndPoint(NULL);
SELECT Envelope(NULL);
SELECT ExteriorRing(NULL);
SELECT GeometryN(NULL, NULL);
SELECT GeometryType(NULL);
SELECT InteriorRingN(NULL, NULL);
SELECT IsClosed(NULL);
SELECT IsEmpty(NULL);
SELECT IsSimple(NULL);
SELECT NumGeometries(NULL);
SELECT NumInteriorRings(NULL);
SELECT NumPoints(NULL);
SELECT PointN(NULL, NULL);
SELECT SRID(NULL);
SELECT StartPoint(NULL);
SELECT Touches(NULL, NULL);
SELECT X(NULL);
SELECT Y(NULL);
SELECT GLength(NULL);
SELECT GeomCollFromText(NULL);
SELECT GeomCollFromText(NULL, NULL);
SELECT GeomCollFromWKB(NULL);
SELECT GeomCollFromWKB(NULL, NULL);
SELECT GeometryCollectionFromText(NULL);
SELECT GeometryCollectionFromText(NULL, NULL);
SELECT GeometryCollectionFromWKB(NULL);
SELECT GeometryCollectionFromWKB(NULL, NULL);
SELECT GeometryFromText(NULL);
SELECT GeometryFromText(NULL, NULL);
SELECT GeometryFromWKB(NULL);
SELECT GeometryFromWKB(NULL, NULL);
SELECT GeomFromText(NULL);
SELECT GeomFromText(NULL, NULL);
SELECT GeomFromWKB(NULL);
SELECT GeomFromWKB(NULL, NULL);
SELECT LineFromText(NULL);
SELECT LineFromText(NULL, NULL);
SELECT LineFromWKB(NULL);
SELECT LineFromWKB(NULL, NULL);
SELECT LineStringFromText(NULL);
SELECT LineStringFromText(NULL, NULL);
SELECT LineStringFromWKB(NULL);
SELECT LineStringFromWKB(NULL, NULL);
SELECT MLineFromText(NULL);
SELECT MLineFromText(NULL, NULL);
SELECT MLineFromWKB(NULL);
SELECT MLineFromWKB(NULL, NULL);
SELECT MPointFromText(NULL);
SELECT MPointFromText(NULL, NULL);
SELECT MPointFromWKB(NULL);
SELECT MPointFromWKB(NULL, NULL);
SELECT MPolyFromText(NULL);
SELECT MPolyFromText(NULL, NULL);
SELECT MPolyFromWKB(NULL);
SELECT MPolyFromWKB(NULL, NULL);
SELECT MultiLineStringFromText(NULL);
SELECT MultiLineStringFromText(NULL, NULL);
SELECT MultiLineStringFromWKB(NULL);
SELECT MultiLineStringFromWKB(NULL, NULL);
SELECT MultiPointFromText(NULL);
SELECT MultiPointFromText(NULL, NULL);
SELECT MultiPointFromWKB(NULL);
SELECT MultiPointFromWKB(NULL, NULL);
SELECT MultiPolygonFromText(NULL);
SELECT MultiPolygonFromText(NULL, NULL);
SELECT MultiPolygonFromWKB(NULL);
SELECT MultiPolygonFromWKB(NULL, NULL);
SELECT PointFromText(NULL);
SELECT PointFromText(NULL, NULL);
SELECT PointFromWKB(NULL);
SELECT PointFromWKB(NULL, NULL);
SELECT PolyFromText(NULL);
SELECT PolyFromText(NULL, NULL);
SELECT PolyFromWKB(NULL);
SELECT PolyFromWKB(NULL, NULL);
SELECT PolygonFromText(NULL);
SELECT PolygonFromText(NULL, NULL);
SELECT PolygonFromWKB(NULL);
SELECT PolygonFromWKB(NULL, NULL);
SELECT MBREqual(NULL, NULL);

-- echo # Check the same functions, buth with geometry values
-- echo # instead of NULL values.
SET @geometrycollection = "GEOMETRYCOLLECTION()";
SET @point_1 = "POINT(11 14)";
SET @point_2 = "POINT(23 45)";
SET @linestring = "LINESTRING (30 10, 10 30, 40 40)";
SET @polygon = "POLYGON((35 10, 45 45, 15 40, 10 20, 35 10), (20 30, 35 35, 30 20, 20 30))";
SET @multilinestring = "MULTILINESTRING((10 10, 11 11), (12 12, 13 13))";
SET @multipoint = "MULTIPOINT(10 10, 12 12)";
SET @multipolygon =
"MULTIPOLYGON (((40 40, 20 45, 45 30, 40 40)), "
"((20 35, 10 30, 10 10, 30 5, 45 20, 20 35), "
"(30 20, 20 15, 20 25, 30 20)))";

SELECT Contains(ST_GeomFromText(@polygon), ST_GeomFromText(@point_1));
SELECT Disjoint(ST_GeomFromText(@point_1), ST_GeomFromText(@point_2));
SELECT Equals(ST_GeomFromText(@point_1), ST_GeomFromText(@point_1));
SELECT Intersects(ST_GeomFromText(@point_1), ST_GeomFromText(@point_1));
SELECT Overlaps(ST_GeomFromText(@linestring), ST_GeomFromText(@linestring));
SELECT Within(ST_GeomFromText(@point_1), ST_GeomFromText(@point_1));
SELECT Area(ST_GeomFromText(@polygon));
SELECT HEX(AsBinary(ST_GeomFromText(@point_1)));
SELECT AsText(ST_GeomFromText(@point_1));
SELECT HEX(AsWKB(ST_GeomFromText(@point_1)));
SELECT AsWKT(ST_GeomFromText(@point_1));
SELECT ST_AsText(Buffer(ST_GeomFromText(@point_1), 1));
SELECT ST_AsText(Centroid(ST_GeomFromText(@polygon)));
SELECT ST_AsText(ConvexHull(ST_GeomFromText(@point_1)));
SELECT Crosses(ST_GeomFromText(@linestring), ST_GeomFromText(@linestring));
SELECT Dimension(ST_GeomFromText(@point_1));
SELECT Distance(ST_GeomFromText(@point_1), ST_GeomFromText(@point_2));
SELECT ST_AsText(EndPoint(ST_GeomFromText(@linestring)));
SELECT ST_AsText(Envelope(ST_GeomFromText(@point_1)));
SELECT ST_AsText(ExteriorRing(ST_GeomFromText(@polygon)));
SELECT ST_AsText(GeometryN(ST_GeomFromText(@multipoint), 2));
SELECT GeometryType(ST_GeomFromText(@point_1));
SELECT ST_AsText(InteriorRingN(ST_GeomFromText(@polygon), 1));
SELECT IsClosed(ST_GeomFromText(@linestring));
SELECT IsEmpty(ST_GeomFromText(@point_1));
SELECT IsSimple(ST_GeomFromText(@point_1));
SELECT NumGeometries(ST_GeomFromText(@geometrycollection));
SELECT NumInteriorRings(ST_GeomFromText(@polygon));
SELECT NumPoints(ST_GeomFromText(@linestring));
SELECT ST_AsText(PointN(ST_GeomFromText(@linestring), 2));
SELECT SRID(ST_GeomFromText(@point_1, 1000));
SELECT ST_AsText(StartPoint(ST_GeomFromText(@linestring)));
SELECT Touches(ST_GeomFromText(@linestring), ST_GeomFromText(@linestring));
SELECT X(ST_GeomFromText(@point_1));
SELECT Y(ST_GeomFromText(@point_1));
SELECT GLength(ST_GeomFromText(@linestring));
SELECT ST_AsText(GeomCollFromText(@geometrycollection));
SELECT ST_AsText(GeomCollFromText(@geometrycollection, 4326));
SELECT ST_AsText(GeomCollFromWKB(ST_GeomFromText(@geometrycollection)));
SELECT ST_AsText(GeomCollFromWKB(ST_GeomFromText(@geometrycollection), 4326));
SELECT ST_AsText(GeometryCollectionFromText(@geometrycollection));
SELECT ST_AsText(GeometryCollectionFromText(@geometrycollection, 4326));
SELECT ST_AsText(GeometryCollectionFromWKB(ST_GeomFromText(@geometrycollection)));
SELECT ST_AsText(GeometryCollectionFromWKB(ST_GeomFromText(@geometrycollection), 4326));
SELECT ST_AsText(GeometryFromText(@point_1));
SELECT ST_AsText(GeometryFromText(@point_1, 4326));
SELECT ST_AsText(GeometryFromWKB(ST_GeomFromText(@point_1)));
SELECT ST_AsText(GeometryFromWKB(ST_GeomFromText(@point_1), 4326));
SELECT ST_AsText(GeomFromText(@point_1));
SELECT ST_AsText(GeomFromText(@point_1, 4326));
SELECT ST_AsText(GeomFromWKB(ST_GeomFromText(@point_1)));
SELECT ST_AsText(GeomFromWKB(ST_GeomFromText(@point_1), 4326));
SELECT ST_AsText(LineFromText(@linestring));
SELECT ST_AsText(LineFromText(@linestring, 4326));
SELECT ST_AsText(LineFromWKB(ST_GeomFromText(@linestring)));
SELECT ST_AsText(LineFromWKB(ST_GeomFromText(@linestring), 4326));
SELECT ST_AsText(LineStringFromText(@linestring));
SELECT ST_AsText(LineStringFromText(@linestring, 4326));
SELECT ST_AsText(LineStringFromWKB(ST_GeomFromText(@linestring)));
SELECT ST_AsText(LineStringFromWKB(ST_GeomFromText(@linestring), 4326));
SELECT ST_AsText(MLineFromText(@multilinestring));
SELECT ST_AsText(MLineFromText(@multilinestring, 4326));
SELECT ST_AsText(MLineFromWKB(ST_GeomFromText(@multilinestring)));
SELECT ST_AsText(MLineFromWKB(ST_GeomFromText(@multilinestring), 4326));
SELECT ST_AsText(MPointFromText(@multipoint));
SELECT ST_AsText(MPointFromText(@multipoint, 4326));
SELECT ST_AsText(MPointFromWKB(ST_GeomFromText(@multipoint)));
SELECT ST_AsText(MPointFromWKB(ST_GeomFromText(@multipoint), 4326));
SELECT ST_AsText(MPolyFromText(@multipolygon));
SELECT ST_AsText(MPolyFromText(@multipolygon, 4326));
SELECT ST_AsText(MPolyFromWKB(ST_GeomFromText(@multipolygon)));
SELECT ST_AsText(MPolyFromWKB(ST_GeomFromText(@multipolygon), 4326));
SELECT ST_AsText(MultiLineStringFromText(@multilinestring));
SELECT ST_AsText(MultiLineStringFromText(@multilinestring, 4326));
SELECT ST_AsText(MultiLineStringFromWKB(ST_GeomFromText(@multilinestring)));
SELECT ST_AsText(MultiLineStringFromWKB(ST_GeomFromText(@multilinestring), 4326));
SELECT ST_AsText(MultiPointFromText(@multipoint));
SELECT ST_AsText(MultiPointFromText(@multipoint, 4326));
SELECT ST_AsText(MultiPointFromWKB(ST_GeomFromText(@multipoint)));
SELECT ST_AsText(MultiPointFromWKB(ST_GeomFromText(@multipoint), 4326));
SELECT ST_AsText(MultiPolygonFromText(@multipolygon));
SELECT ST_AsText(MultiPolygonFromText(@multipolygon, 4326));
SELECT ST_AsText(MultiPolygonFromWKB(ST_GeomFromText(@multipolygon)));
SELECT ST_AsText(MultiPolygonFromWKB(ST_GeomFromText(@multipolygon), 4326));
SELECT ST_AsText(PointFromText(@point_1));
SELECT ST_AsText(PointFromText(@point_1, 4326));
SELECT ST_AsText(PointFromWKB(ST_GeomFromText(@point_1)));
SELECT ST_AsText(PointFromWKB(ST_GeomFromText(@point_1), 4326));
SELECT ST_AsText(PolyFromText(@polygon));
SELECT ST_AsText(PolyFromText(@polygon, 4326));
SELECT ST_AsText(PolyFromWKB(ST_GeomFromText(@polygon)));
SELECT ST_AsText(PolyFromWKB(ST_GeomFromText(@polygon), 4326));
SELECT ST_AsText(PolygonFromText(@polygon));
SELECT ST_AsText(PolygonFromText(@polygon, 4326));
SELECT ST_AsText(PolygonFromWKB(ST_GeomFromText(@polygon)));
SELECT ST_AsText(PolygonFromWKB(ST_GeomFromText(@polygon), 4326));
SELECT MBREqual(ST_GeomFromText(@polygon), ST_GeomFromText(@polygon));
