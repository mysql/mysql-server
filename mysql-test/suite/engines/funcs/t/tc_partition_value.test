# We use a separate test wrapper for engines not supporting native partitioning
# since the test results will be different due to deprecation warnings. This test
# expects to either be executed directly with InnoDB as default engine, or to be
# executed indirectly by being included in a test wrapper  setting the ENGINE
# variable.
--disable_warnings
if (!$ENGINE)
{
  let $ENGINE=`SELECT variable_value FROM performance_schema.global_variables
               WHERE variable_name = 'DEFAULT_STORAGE_ENGINE'`;
  if ($ENGINE != "InnoDB")
  {
    skip Engines not supporting native partitioning are tested using a test wrapper;
  }
}
--enable_warnings

--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings
 CREATE TABLE t1 ( c1  SMALLINT, c2 INT) PARTITION BY RANGE (c1) (
    PARTITION p0 VALUES LESS THAN (1991),
    PARTITION p1 VALUES LESS THAN (1995),
    PARTITION p2 VALUES LESS THAN (1999),
    PARTITION p3 VALUES LESS THAN (2002),
    PARTITION p4 VALUES LESS THAN (2006),
    PARTITION p5 VALUES LESS THAN MAXVALUE);
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
 CREATE TABLE t1 ( c1  MEDIUMINT, c2 INT) PARTITION BY RANGE (c1) (
    PARTITION p0 VALUES LESS THAN (1991),
    PARTITION p1 VALUES LESS THAN (1995),
    PARTITION p2 VALUES LESS THAN (1999),
    PARTITION p3 VALUES LESS THAN (2002),
    PARTITION p4 VALUES LESS THAN (2006),
    PARTITION p5 VALUES LESS THAN MAXVALUE);
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
 CREATE TABLE t1 ( c1  INT, c2 INT) PARTITION BY RANGE (c1) (
    PARTITION p0 VALUES LESS THAN (1991),
    PARTITION p1 VALUES LESS THAN (1995),
    PARTITION p2 VALUES LESS THAN (1999),
    PARTITION p3 VALUES LESS THAN (2002),
    PARTITION p4 VALUES LESS THAN (2006),
    PARTITION p5 VALUES LESS THAN MAXVALUE);
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
 CREATE TABLE t1 ( c1  INTEGER, c2 INT) PARTITION BY RANGE (c1) (
    PARTITION p0 VALUES LESS THAN (1991),
    PARTITION p1 VALUES LESS THAN (1995),
    PARTITION p2 VALUES LESS THAN (1999),
    PARTITION p3 VALUES LESS THAN (2002),
    PARTITION p4 VALUES LESS THAN (2006),
    PARTITION p5 VALUES LESS THAN MAXVALUE);
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
 CREATE TABLE t1 ( c1  BIGINT, c2 INT) PARTITION BY RANGE (c1) (
    PARTITION p0 VALUES LESS THAN (1991),
    PARTITION p1 VALUES LESS THAN (1995),
    PARTITION p2 VALUES LESS THAN (1999),
    PARTITION p3 VALUES LESS THAN (2002),
    PARTITION p4 VALUES LESS THAN (2006),
    PARTITION p5 VALUES LESS THAN MAXVALUE);
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;

