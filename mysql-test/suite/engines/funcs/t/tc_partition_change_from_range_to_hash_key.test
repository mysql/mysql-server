# We use a separate test wrapper for engines not supporting native partitioning
# since the test results will be different due to deprecation warnings. This test
# expects to either be executed directly with InnoDB as default engine, or to be
# executed indirectly by being included in a test wrapper  setting the ENGINE
# variable.
--disable_warnings
if (!$ENGINE)
{
  let $ENGINE=`SELECT variable_value FROM performance_schema.global_variables
               WHERE variable_name = 'DEFAULT_STORAGE_ENGINE'`;
  if ($ENGINE != "InnoDB")
  {
    skip Engines not supporting native partitioning are tested using a test wrapper;
  }
}
--enable_warnings

CREATE TABLE t1 (c1 TINYINT NOT NULL, c2 CHAR(5)) PARTITION BY RANGE ( c1 ) (
    PARTITION p0 VALUES LESS THAN (10),
    PARTITION p1 VALUES LESS THAN (20),
    PARTITION p2 VALUES LESS THAN (30),
    PARTITION p3 VALUES LESS THAN MAXVALUE);
INSERT INTO t1 VALUES(0,'abc'),(5,'abc'),(10,'abc'),(15,'abc'),(20,'abc'),(25,'abc'),(30,'abc'),(35,'abc');
SELECT * FROM t1 ORDER BY c1;
ALTER TABLE t1 PARTITION BY HASH(c1) PARTITIONS 5;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1;
ALTER TABLE t1 COALESCE PARTITION 2;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 SMALLINT NOT NULL, c2 CHAR(5)) PARTITION BY RANGE ( c1 ) (
    PARTITION p0 VALUES LESS THAN (10),
    PARTITION p1 VALUES LESS THAN (20),
    PARTITION p2 VALUES LESS THAN (30),
    PARTITION p3 VALUES LESS THAN MAXVALUE);
INSERT INTO t1 VALUES(0,'abc'),(5,'abc'),(10,'abc'),(15,'abc'),(20,'abc'),(25,'abc'),(30,'abc'),(35,'abc');
SELECT * FROM t1 ORDER BY c1;
ALTER TABLE t1 PARTITION BY HASH(c1) PARTITIONS 5;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1;
ALTER TABLE t1 COALESCE PARTITION 2;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 MEDIUMINT NOT NULL, c2 CHAR(5)) PARTITION BY RANGE ( c1 ) (
    PARTITION p0 VALUES LESS THAN (10),
    PARTITION p1 VALUES LESS THAN (20),
    PARTITION p2 VALUES LESS THAN (30),
    PARTITION p3 VALUES LESS THAN MAXVALUE);
INSERT INTO t1 VALUES(0,'abc'),(5,'abc'),(10,'abc'),(15,'abc'),(20,'abc'),(25,'abc'),(30,'abc'),(35,'abc');
SELECT * FROM t1 ORDER BY c1;
ALTER TABLE t1 PARTITION BY HASH(c1) PARTITIONS 5;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1;
ALTER TABLE t1 COALESCE PARTITION 2;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INT NOT NULL, c2 CHAR(5)) PARTITION BY RANGE ( c1 ) (
    PARTITION p0 VALUES LESS THAN (10),
    PARTITION p1 VALUES LESS THAN (20),
    PARTITION p2 VALUES LESS THAN (30),
    PARTITION p3 VALUES LESS THAN MAXVALUE);
INSERT INTO t1 VALUES(0,'abc'),(5,'abc'),(10,'abc'),(15,'abc'),(20,'abc'),(25,'abc'),(30,'abc'),(35,'abc');
SELECT * FROM t1 ORDER BY c1;
ALTER TABLE t1 PARTITION BY HASH(c1) PARTITIONS 5;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1;
ALTER TABLE t1 COALESCE PARTITION 2;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INTEGER NOT NULL, c2 CHAR(5)) PARTITION BY RANGE ( c1 ) (
    PARTITION p0 VALUES LESS THAN (10),
    PARTITION p1 VALUES LESS THAN (20),
    PARTITION p2 VALUES LESS THAN (30),
    PARTITION p3 VALUES LESS THAN MAXVALUE);
INSERT INTO t1 VALUES(0,'abc'),(5,'abc'),(10,'abc'),(15,'abc'),(20,'abc'),(25,'abc'),(30,'abc'),(35,'abc');
SELECT * FROM t1 ORDER BY c1;
ALTER TABLE t1 PARTITION BY HASH(c1) PARTITIONS 5;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1;
ALTER TABLE t1 COALESCE PARTITION 2;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 BIGINT NOT NULL, c2 CHAR(5)) PARTITION BY RANGE ( c1 ) (
    PARTITION p0 VALUES LESS THAN (10),
    PARTITION p1 VALUES LESS THAN (20),
    PARTITION p2 VALUES LESS THAN (30),
    PARTITION p3 VALUES LESS THAN MAXVALUE);
INSERT INTO t1 VALUES(0,'abc'),(5,'abc'),(10,'abc'),(15,'abc'),(20,'abc'),(25,'abc'),(30,'abc'),(35,'abc');
SELECT * FROM t1 ORDER BY c1;
ALTER TABLE t1 PARTITION BY HASH(c1) PARTITIONS 5;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1;
ALTER TABLE t1 COALESCE PARTITION 2;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 TINYINT NOT NULL, c2 CHAR(5)) PARTITION BY RANGE ( c1 ) (
    PARTITION p0 VALUES LESS THAN (10),
    PARTITION p1 VALUES LESS THAN (20),
    PARTITION p2 VALUES LESS THAN (30),
    PARTITION p3 VALUES LESS THAN MAXVALUE);
INSERT INTO t1 VALUES(0,'abc'),(5,'abc'),(10,'abc'),(15,'abc'),(20,'abc'),(25,'abc'),(30,'abc'),(35,'abc');
SELECT * FROM t1 ORDER BY c1;
ALTER TABLE t1 PARTITION BY KEY(c1) PARTITIONS 5;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1;
ALTER TABLE t1 COALESCE PARTITION 2;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 SMALLINT NOT NULL, c2 CHAR(5)) PARTITION BY RANGE ( c1 ) (
    PARTITION p0 VALUES LESS THAN (10),
    PARTITION p1 VALUES LESS THAN (20),
    PARTITION p2 VALUES LESS THAN (30),
    PARTITION p3 VALUES LESS THAN MAXVALUE);
INSERT INTO t1 VALUES(0,'abc'),(5,'abc'),(10,'abc'),(15,'abc'),(20,'abc'),(25,'abc'),(30,'abc'),(35,'abc');
SELECT * FROM t1 ORDER BY c1;
ALTER TABLE t1 PARTITION BY KEY(c1) PARTITIONS 5;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1;
ALTER TABLE t1 COALESCE PARTITION 2;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 MEDIUMINT NOT NULL, c2 CHAR(5)) PARTITION BY RANGE ( c1 ) (
    PARTITION p0 VALUES LESS THAN (10),
    PARTITION p1 VALUES LESS THAN (20),
    PARTITION p2 VALUES LESS THAN (30),
    PARTITION p3 VALUES LESS THAN MAXVALUE);
INSERT INTO t1 VALUES(0,'abc'),(5,'abc'),(10,'abc'),(15,'abc'),(20,'abc'),(25,'abc'),(30,'abc'),(35,'abc');
SELECT * FROM t1 ORDER BY c1;
ALTER TABLE t1 PARTITION BY KEY(c1) PARTITIONS 5;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1;
ALTER TABLE t1 COALESCE PARTITION 2;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INT NOT NULL, c2 CHAR(5)) PARTITION BY RANGE ( c1 ) (
    PARTITION p0 VALUES LESS THAN (10),
    PARTITION p1 VALUES LESS THAN (20),
    PARTITION p2 VALUES LESS THAN (30),
    PARTITION p3 VALUES LESS THAN MAXVALUE);
INSERT INTO t1 VALUES(0,'abc'),(5,'abc'),(10,'abc'),(15,'abc'),(20,'abc'),(25,'abc'),(30,'abc'),(35,'abc');
SELECT * FROM t1 ORDER BY c1;
ALTER TABLE t1 PARTITION BY KEY(c1) PARTITIONS 5;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1;
ALTER TABLE t1 COALESCE PARTITION 2;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INTEGER NOT NULL, c2 CHAR(5)) PARTITION BY RANGE ( c1 ) (
    PARTITION p0 VALUES LESS THAN (10),
    PARTITION p1 VALUES LESS THAN (20),
    PARTITION p2 VALUES LESS THAN (30),
    PARTITION p3 VALUES LESS THAN MAXVALUE);
INSERT INTO t1 VALUES(0,'abc'),(5,'abc'),(10,'abc'),(15,'abc'),(20,'abc'),(25,'abc'),(30,'abc'),(35,'abc');
SELECT * FROM t1 ORDER BY c1;
ALTER TABLE t1 PARTITION BY KEY(c1) PARTITIONS 5;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1;
ALTER TABLE t1 COALESCE PARTITION 2;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 BIGINT NOT NULL, c2 CHAR(5)) PARTITION BY RANGE ( c1 ) (
    PARTITION p0 VALUES LESS THAN (10),
    PARTITION p1 VALUES LESS THAN (20),
    PARTITION p2 VALUES LESS THAN (30),
    PARTITION p3 VALUES LESS THAN MAXVALUE);
INSERT INTO t1 VALUES(0,'abc'),(5,'abc'),(10,'abc'),(15,'abc'),(20,'abc'),(25,'abc'),(30,'abc'),(35,'abc');
SELECT * FROM t1 ORDER BY c1;
ALTER TABLE t1 PARTITION BY KEY(c1) PARTITIONS 5;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1;
ALTER TABLE t1 COALESCE PARTITION 2;
SELECT * FROM t1 ORDER BY c1;
SHOW TABLES; 
--replace_result $ENGINE ENGINE 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;

