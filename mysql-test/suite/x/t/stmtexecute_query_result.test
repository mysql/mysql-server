## generated
## Test query with resultset

--source include/xplugin_preamble.inc
--source include/xplugin_create_user.inc
## Test starts here
--write_file $MYSQL_TMP_DIR/stmtexecute_query_result.tmp
## Test data
-->sql
drop schema if exists xtest;
create schema xtest;
use xtest;
create table mytable (pk int primary key auto_increment, data varchar(100));
delimiter //
create procedure result_and_error ()
begin
  select 1;
  select * from invalid_table;
end//
-->endsql
Mysqlx.Sql.StmtExecute {
  stmt: "insert into mytable values (DEFAULT, \'one\')"
}

## expect Mysqlx.Sql.StmtExecuteOk
-->recvresult
Mysqlx.Sql.StmtExecute {
  stmt: "insert into mytable values (DEFAULT, \'two\')"
}

## expect Mysqlx.Sql.StmtExecuteOk
-->recvresult
Mysqlx.Sql.StmtExecute {
  stmt: "insert into mytable values (DEFAULT, \'three\')"
}

## expect Mysqlx.Sql.StmtExecuteOk
-->recvresult
Mysqlx.Sql.StmtExecute {
  stmt: "select * from mytable"
}

## expect Mysqlx.Resultset.ColumnMetaData
-->recv
## expect Mysqlx.Resultset.ColumnMetaData
-->recv
## expect Mysqlx.Resultset.Row
-->recv
## expect Mysqlx.Resultset.Row
-->recv
## expect Mysqlx.Resultset.Row
-->recv
## expect Mysqlx.Resultset.FetchDone
-->recv
## expect Notice
-->recv
## expect Mysqlx.Sql.StmtExecuteOk
-->recv

## Cleanup
-->sql
drop schema if exists xtest;
-->endsql
EOF

--exec $MYSQLXTEST -ux_root --password='' --file=$MYSQL_TMP_DIR/stmtexecute_query_result.tmp 2>&1

## Cleanup
--remove_file $MYSQL_TMP_DIR/stmtexecute_query_result.tmp
--source include/xplugin_drop_user.inc
