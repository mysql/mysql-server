include/master-slave.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection master]
call mtr.add_suppression("Error 'Table 'test.t' doesn't exist' on query.");
call mtr.add_suppression("The slave coordinator and worker threads are stopped, possibly leaving data in inconsistent state.");
call mtr.add_suppression("Request to stop slave SQL Thread received while applying a group that has non-transactional changes;");
include/assert.inc [On master, the table should return an empty set.]

# Setup MTS and perform testing on a fresh slave.

include/sync_slave_sql_with_master.inc
include/stop_slave.inc
SET @save_replica_parallel_workers=@@global.replica_parallel_workers;
SET @@global.replica_parallel_workers=0;
Warnings:
Warning	1287	'0' is deprecated and will be removed in a future release. Please use 1 instead
set @save_replica_transaction_retries= @@global.replica_transaction_retries;
include/start_slave.inc
include/assert.inc [In non-MTS mode(SQL thread), the table should return one row as Single SQL applier thread will be part of replication_applier_status_by_worker table.]
include/assert.inc [In non-MTS mode(SQL thread), the table should return empty result set]
include/stop_slave.inc
SET @@global.replica_parallel_workers=1;
set @save_replica_transaction_retries= @@global.replica_transaction_retries;
include/start_slave.inc
include/assert.inc [Worker_Id should be 1]
include/assert.inc [thread_name should should indicate worker thread.]
include/assert.inc [Service_State should be "ON" on a fresh slave server.]
CREATE TABLE t1 (a INT);
DROP TABLE t1;
include/assert.inc [Value returned by SSS and PS table for Last_Error_Number should be same.]
include/assert.inc [Value returned by SSS and PS table for Last_Error_Message should both be empty.]
include/assert.inc [Value returned by PS table for Last_Error_Timestamp should be 0000-00-00 00:00:00.000000.]

# Introduce an error in the worker thread and check for the correctness
# of error number, message and timestamp fields.

use test;
create table t(a int primary key);
drop table t;
insert into t values(1);
include/wait_for_slave_sql_error.inc [errno=1146]

# Extract the error related fields from SSS and PS table and compare
# them for correctness.

include/assert.inc [Value returned by SSS and PS table for Last_Error_Number should be same.]
Last_Error_Message
Worker 1 failed executing transaction 'ANONYMOUS' at master log FILENAME, end_log_pos POSITION; Error 'Table 'test.t' doesn't exist' on query. Default database: 'test'. Query: 'insert into t values(1)'
include/assert.inc [Value returned by SSS and PS table for Last_Error_Timestamp should be same.]

# Verify that the error fields are preserved after STOP SLAVE.


# 1. Verify that thread_id changes to NULL and service_state to "off" on
#    STOP SLAVE.

include/assert.inc [After STOP SLAVE, thread_id should be NULL]
include/assert.inc [So, Service_State after STOP SLAVE should be "OFF".]

# 2. Extract the worker_id and the error related fields from SSS and PS
#    table and compare them. These fields should preserve their values.

include/assert.inc [Worker_Id should be 1]
include/assert.inc [Value returned by SSS and PS table for Last_Error_Number should be same.]
Last_Error_Message
Worker 1 failed executing transaction 'ANONYMOUS' at master log FILENAME, end_log_pos POSITION; Error 'Table 'test.t' doesn't exist' on query. Default database: 'test'. Query: 'insert into t values(1)'
include/assert.inc [Value returned by SSS and PS table for Last_Error_Timestamp should be same.]
stop slave;
Warnings:
Warning	1287	'STOP SLAVE' is deprecated and will be removed in a future release. Please use STOP REPLICA instead
reset slave;
Warnings:
Warning	1287	'RESET SLAVE' is deprecated and will be removed in a future release. Please use RESET REPLICA instead
drop table t;
reset master;

# Set up replication in gtid-mode=on and test 'Last_Seen_Transaction'
# field.

include/rpl_set_gtid_mode.inc [ON on servers 1,2]
stop slave;
Warnings:
Warning	1287	'STOP SLAVE' is deprecated and will be removed in a future release. Please use STOP REPLICA instead
Note	3084	Replication thread(s) for channel '' are already stopped.
CHANGE REPLICATION SOURCE to SOURCE_HOST='127.0.0.1',SOURCE_PORT=MASTER_MYPORT, SOURCE_USER='root';
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
SET @@global.replica_parallel_workers=1;
set @save_replica_transaction_retries= @@global.replica_transaction_retries;
start slave;
Warnings:
Warning	1287	'START SLAVE' is deprecated and will be removed in a future release. Please use START REPLICA instead
create database d1;
create table d1.t1(a int);
insert into d1.t1 values(1);
#
# BUG#20513547 REPLICATION_APPLIER_STATUS_BY_WORKER SHOWS
#              WRONG WORKER_ID WHEN SLAVE STOPS
#
include/stop_slave.inc
SET @@GLOBAL.replica_parallel_workers = 3;
include/start_slave.inc
SELECT worker_id from performance_schema.replication_applier_status_by_worker;
worker_id
1
2
3
include/stop_slave.inc
SELECT worker_id from performance_schema.replication_applier_status_by_worker;
worker_id
1
2
3

# Cleanup.

DROP DATABASE d1;
set @@global.replica_parallel_workers= @save_replica_parallel_workers;
set @@global.replica_transaction_retries= @save_replica_transaction_retries;
include/start_slave.inc
include/rpl_set_gtid_mode.inc [OFF on servers 1,2]
include/rpl_end.inc
