include/master-slave.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection master]
[connection slave]
call mtr.add_suppression("Operation CREATE USER failed");
call mtr.add_suppression("Operation RENAME USER failed");
call mtr.add_suppression("The slave coordinator and worker threads are stopped");
call mtr.add_suppression("Slave worker thread has failed to apply an event");
call mtr.add_suppression("Error writing relay log configuration");
call mtr.add_suppression("Error 'Unknown error' on query");
[connection master]
CREATE DATABASE master_db;
USE master_db;
CREATE TABLE IF NOT EXISTS t_checks (id INT AUTO_INCREMENT NOT NULL PRIMARY KEY,  ddl_query TEXT,  pre_binlog_check TEXT, post_binlog_check TEXT);;
USE test;
CREATE TABLE t_1 (a int);
include/sync_slave_sql_with_master.inc
include/stop_slave_sql.inc
[connection master]
include/gtid_step_reset.inc
FLUSH LOGS;
CREATE USER user1;
include/gtid_step_assert.inc [count=1, only_count=0]
include/gtid_step_reset.inc
FLUSH LOGS;
GRANT SELECT ON *.* TO user1;
include/gtid_step_assert.inc [count=1, only_count=0]
include/gtid_step_reset.inc
FLUSH LOGS;
REVOKE SELECT ON *.* FROM user1;
include/gtid_step_assert.inc [count=1, only_count=0]
include/gtid_step_reset.inc
FLUSH LOGS;
ALTER USER user1 IDENTIFIED BY '123456';
include/gtid_step_assert.inc [count=1, only_count=0]
include/gtid_step_reset.inc
FLUSH LOGS;
SET PASSWORD FOR user1=PASSWORD('abcdef');
Warnings:
Warning	1287	'SET PASSWORD FOR <user> = PASSWORD('<plaintext_password>')' is deprecated and will be removed in a future release. Please use SET PASSWORD FOR <user> = '<plaintext_password>' instead
include/gtid_step_assert.inc [count=1, only_count=0]
include/gtid_step_reset.inc
FLUSH LOGS;
RENAME USER user1 TO user2;
include/gtid_step_assert.inc [count=1, only_count=0]
include/gtid_step_reset.inc
FLUSH LOGS;
CREATE ROLE roleA,roleB;
include/gtid_step_assert.inc [count=1, only_count=0]
include/gtid_step_reset.inc
FLUSH LOGS;
GRANT roleA TO roleB;
include/gtid_step_assert.inc [count=1, only_count=0]
include/gtid_step_reset.inc
FLUSH LOGS;
REVOKE roleA FROM roleB;
include/gtid_step_assert.inc [count=1, only_count=0]
include/gtid_step_reset.inc
FLUSH LOGS;
ALTER USER user2 DEFAULT ROLE roleA;;
include/gtid_step_assert.inc [count=1, only_count=0]
include/gtid_step_reset.inc
FLUSH LOGS;
DROP ROLE roleA,roleB;
include/gtid_step_assert.inc [count=1, only_count=0]
include/gtid_step_reset.inc
FLUSH LOGS;
DROP USER user2;
include/gtid_step_assert.inc [count=1, only_count=0]
PREPARE stmt FROM 'CREATE USER user3';
DEALLOCATE PREPARE stmt;
PREPARE stmt FROM 'DROP USER user3';
DEALLOCATE PREPARE stmt;
include/gtid_step_reset.inc
FLUSH LOGS;
CREATE TRIGGER tr_0 BEFORE INSERT ON t_1 FOR EACH ROW SET @a:=1;
include/gtid_step_assert.inc [count=1, only_count=0]
include/gtid_step_reset.inc
FLUSH LOGS;
DROP TRIGGER tr_0;
include/gtid_step_assert.inc [count=1, only_count=0]
[connection slave]
include/start_slave_io.inc
Warnings:
Note	3083	Replication thread(s) for channel '' are already runnning.
[connection master]
include/sync_slave_io_with_master.inc
[connection slave]
CREATE USER user1;
START SLAVE SQL_THREAD;
include/wait_for_slave_sql_error.inc [errno=1396]
DROP USER user1;
SET @@GLOBAL.debug="+d,rli_pre_commit_error";
START SLAVE SQL_THREAD;
include/wait_for_slave_sql_error.inc [errno=1105]
SET @@GLOBAL.debug="-d,rli_pre_commit_error";
[connection master]
Loop: 1 out of 14; current query: 'CREATE USER user1'; pre-binlog check: 'SELECT count(*) = 0 FROM mysql.user WHERE user = 'user1''; pre-commit check: 'SELECT count(*) = 1 FROM mysql.user WHERE user = 'user1'';
[connection slave]
*** Query: 'CREATE USER user1'. Crash right after the query has been prepared in the engine before being logged. ***
SET @@GLOBAL.debug="+d,crash_commit_before_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
include/gtid_step_assert.inc [count=0, only_count=0]
*** Query: 'CREATE USER user1'. Crash right after the query has been binary-logged before committed in the engine. ***
SET @@GLOBAL.debug="+d,crash_commit_after_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
[connection slave]
include/gtid_step_assert.inc [count=1, only_count=1]
[connection master]
Loop: 2 out of 14; current query: 'GRANT SELECT ON *.* TO user1'; pre-binlog check: 'SELECT select_priv = 'N' FROM mysql.user WHERE user = 'user1''; pre-commit check: 'SELECT select_priv = 'Y' FROM mysql.user WHERE user = 'user1'';
[connection slave]
*** Query: 'GRANT SELECT ON *.* TO user1'. Crash right after the query has been prepared in the engine before being logged. ***
SET @@GLOBAL.debug="+d,crash_commit_before_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
include/gtid_step_assert.inc [count=0, only_count=1]
*** Query: 'GRANT SELECT ON *.* TO user1'. Crash right after the query has been binary-logged before committed in the engine. ***
SET @@GLOBAL.debug="+d,crash_commit_after_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
[connection slave]
include/gtid_step_assert.inc [count=1, only_count=1]
[connection master]
Loop: 3 out of 14; current query: 'REVOKE SELECT ON *.* FROM user1'; pre-binlog check: 'SELECT select_priv = 'Y' FROM mysql.user WHERE user = 'user1''; pre-commit check: 'SELECT select_priv = 'N' FROM mysql.user WHERE user = 'user1'';
[connection slave]
*** Query: 'REVOKE SELECT ON *.* FROM user1'. Crash right after the query has been prepared in the engine before being logged. ***
SET @@GLOBAL.debug="+d,crash_commit_before_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
include/gtid_step_assert.inc [count=0, only_count=1]
*** Query: 'REVOKE SELECT ON *.* FROM user1'. Crash right after the query has been binary-logged before committed in the engine. ***
SET @@GLOBAL.debug="+d,crash_commit_after_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
[connection slave]
include/gtid_step_assert.inc [count=1, only_count=1]
[connection master]
Loop: 4 out of 14; current query: 'ALTER USER user1 IDENTIFIED BY '123456''; pre-binlog check: 'SELECT authentication_string = '' FROM mysql.user WHERE user LIKE 'user1''; pre-commit check: 'SELECT authentication_string != '' FROM mysql.user WHERE user LIKE 'user1'';
[connection slave]
*** Query: 'ALTER USER user1 IDENTIFIED BY '123456''. Crash right after the query has been prepared in the engine before being logged. ***
SET @@GLOBAL.debug="+d,crash_commit_before_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
include/gtid_step_assert.inc [count=0, only_count=1]
*** Query: 'ALTER USER user1 IDENTIFIED BY '123456''. Crash right after the query has been binary-logged before committed in the engine. ***
SET @@GLOBAL.debug="+d,crash_commit_after_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
[connection slave]
include/gtid_step_assert.inc [count=1, only_count=1]
[connection master]
Loop: 5 out of 14; current query: 'SET PASSWORD FOR user1=PASSWORD('abcdef')'; pre-binlog check: 'SELECT authentication_string = '*6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9' FROM mysql.user WHERE user LIKE 'user1''; pre-commit check: 'SELECT authentication_string != '*6BB4837EB74329105EE4568DDA7DC67ED2CA2AD9' FROM mysql.user WHERE user LIKE 'user1'';
[connection slave]
*** Query: 'SET PASSWORD FOR user1=PASSWORD('abcdef')'. Crash right after the query has been prepared in the engine before being logged. ***
SET @@GLOBAL.debug="+d,crash_commit_before_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
include/gtid_step_assert.inc [count=0, only_count=1]
*** Query: 'SET PASSWORD FOR user1=PASSWORD('abcdef')'. Crash right after the query has been binary-logged before committed in the engine. ***
SET @@GLOBAL.debug="+d,crash_commit_after_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
[connection slave]
include/gtid_step_assert.inc [count=1, only_count=1]
[connection master]
Loop: 6 out of 14; current query: 'RENAME USER user1 TO user2'; pre-binlog check: 'SELECT count(*) = 1 FROM mysql.user WHERE user = 'user1''; pre-commit check: 'SELECT count(*) = 0 FROM mysql.user WHERE user = 'user1'';
[connection slave]
*** Query: 'RENAME USER user1 TO user2'. Crash right after the query has been prepared in the engine before being logged. ***
SET @@GLOBAL.debug="+d,crash_commit_before_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
include/gtid_step_assert.inc [count=0, only_count=1]
*** Query: 'RENAME USER user1 TO user2'. Crash right after the query has been binary-logged before committed in the engine. ***
SET @@GLOBAL.debug="+d,crash_commit_after_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
[connection slave]
include/gtid_step_assert.inc [count=1, only_count=1]
[connection master]
Loop: 7 out of 14; current query: 'CREATE ROLE roleA,roleB'; pre-binlog check: 'SELECT COUNT(*) = 0 FROM mysql.user WHERE user LIKE 'roleB' OR user LIKE 'roleA';'; pre-commit check: 'SELECT COUNT(*) = 2 FROM mysql.user WHERE user LIKE 'roleB' OR user LIKE 'roleA';';
[connection slave]
*** Query: 'CREATE ROLE roleA,roleB'. Crash right after the query has been prepared in the engine before being logged. ***
SET @@GLOBAL.debug="+d,crash_commit_before_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
include/gtid_step_assert.inc [count=0, only_count=1]
*** Query: 'CREATE ROLE roleA,roleB'. Crash right after the query has been binary-logged before committed in the engine. ***
SET @@GLOBAL.debug="+d,crash_commit_after_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
[connection slave]
include/gtid_step_assert.inc [count=1, only_count=1]
[connection master]
Loop: 8 out of 14; current query: 'GRANT roleA TO roleB'; pre-binlog check: 'SELECT count(*) = 0 FROM mysql.role_edges WHERE from_user = 'roleA''; pre-commit check: 'SELECT count(*) = 1 FROM mysql.role_edges WHERE from_user = 'roleA'';
[connection slave]
*** Query: 'GRANT roleA TO roleB'. Crash right after the query has been prepared in the engine before being logged. ***
SET @@GLOBAL.debug="+d,crash_commit_before_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
include/gtid_step_assert.inc [count=0, only_count=1]
*** Query: 'GRANT roleA TO roleB'. Crash right after the query has been binary-logged before committed in the engine. ***
SET @@GLOBAL.debug="+d,crash_commit_after_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
[connection slave]
include/gtid_step_assert.inc [count=1, only_count=1]
[connection master]
Loop: 9 out of 14; current query: 'REVOKE roleA FROM roleB'; pre-binlog check: 'SELECT count(*) = 1 FROM mysql.role_edges WHERE from_user = 'roleA''; pre-commit check: 'SELECT count(*) = 0 FROM mysql.role_edges WHERE from_user = 'roleA'';
[connection slave]
*** Query: 'REVOKE roleA FROM roleB'. Crash right after the query has been prepared in the engine before being logged. ***
SET @@GLOBAL.debug="+d,crash_commit_before_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
include/gtid_step_assert.inc [count=0, only_count=1]
*** Query: 'REVOKE roleA FROM roleB'. Crash right after the query has been binary-logged before committed in the engine. ***
SET @@GLOBAL.debug="+d,crash_commit_after_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
[connection slave]
include/gtid_step_assert.inc [count=1, only_count=1]
[connection master]
Loop: 10 out of 14; current query: 'ALTER USER user2 DEFAULT ROLE roleA;'; pre-binlog check: 'SELECT count(*) = 0 FROM mysql.default_roles WHERE user = 'user2''; pre-commit check: 'SELECT count(*) = 1 FROM mysql.default_roles WHERE user = 'user2'';
[connection slave]
*** Query: 'ALTER USER user2 DEFAULT ROLE roleA;'. Crash right after the query has been prepared in the engine before being logged. ***
SET @@GLOBAL.debug="+d,crash_commit_before_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
include/gtid_step_assert.inc [count=0, only_count=1]
*** Query: 'ALTER USER user2 DEFAULT ROLE roleA;'. Crash right after the query has been binary-logged before committed in the engine. ***
SET @@GLOBAL.debug="+d,crash_commit_after_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
[connection slave]
include/gtid_step_assert.inc [count=1, only_count=1]
[connection master]
Loop: 11 out of 14; current query: 'DROP ROLE roleA,roleB'; pre-binlog check: 'SELECT count(*) = 2 FROM mysql.user WHERE user LIKE 'roleA' OR user LIKE 'roleB''; pre-commit check: 'SELECT count(*) = 0 FROM mysql.user WHERE user LIKE 'roleA' OR user LIKE 'roleB'';
[connection slave]
*** Query: 'DROP ROLE roleA,roleB'. Crash right after the query has been prepared in the engine before being logged. ***
SET @@GLOBAL.debug="+d,crash_commit_before_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
include/gtid_step_assert.inc [count=0, only_count=1]
*** Query: 'DROP ROLE roleA,roleB'. Crash right after the query has been binary-logged before committed in the engine. ***
SET @@GLOBAL.debug="+d,crash_commit_after_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
[connection slave]
include/gtid_step_assert.inc [count=1, only_count=1]
[connection master]
Loop: 12 out of 14; current query: 'DROP USER user2'; pre-binlog check: 'SELECT count(*) = 1 FROM mysql.user WHERE user = 'user2''; pre-commit check: 'SELECT count(*) = 0 FROM mysql.user WHERE user = 'user2'';
[connection slave]
*** Query: 'DROP USER user2'. Crash right after the query has been prepared in the engine before being logged. ***
SET @@GLOBAL.debug="+d,crash_commit_before_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
include/gtid_step_assert.inc [count=0, only_count=1]
*** Query: 'DROP USER user2'. Crash right after the query has been binary-logged before committed in the engine. ***
SET @@GLOBAL.debug="+d,crash_commit_after_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
[connection slave]
include/gtid_step_assert.inc [count=1, only_count=1]
[connection master]
Loop: 13 out of 14; current query: 'CREATE TRIGGER tr_0 BEFORE INSERT ON t_1 FOR EACH ROW SET @a:=1'; pre-binlog check: 'SELECT count(*) = 0 FROM information_schema.TRIGGERS where TRIGGER_NAME = 'tr_0''; pre-commit check: 'SELECT count(*) = 1 FROM information_schema.TRIGGERS where TRIGGER_NAME = 'tr_0'';
[connection slave]
*** Query: 'CREATE TRIGGER tr_0 BEFORE INSERT ON t_1 FOR EACH ROW SET @a:=1'. Crash right after the query has been prepared in the engine before being logged. ***
SET @@GLOBAL.debug="+d,crash_commit_before_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
include/gtid_step_assert.inc [count=0, only_count=1]
*** Query: 'CREATE TRIGGER tr_0 BEFORE INSERT ON t_1 FOR EACH ROW SET @a:=1'. Crash right after the query has been binary-logged before committed in the engine. ***
SET @@GLOBAL.debug="+d,crash_commit_after_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
[connection slave]
include/gtid_step_assert.inc [count=1, only_count=1]
[connection master]
Loop: 14 out of 14; current query: 'DROP TRIGGER tr_0'; pre-binlog check: 'SELECT count(*) = 1 FROM information_schema.TRIGGERS where TRIGGER_NAME = 'tr_0''; pre-commit check: 'SELECT count(*) = 0 FROM information_schema.TRIGGERS where TRIGGER_NAME = 'tr_0'';
[connection slave]
*** Query: 'DROP TRIGGER tr_0'. Crash right after the query has been prepared in the engine before being logged. ***
SET @@GLOBAL.debug="+d,crash_commit_before_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
include/gtid_step_assert.inc [count=0, only_count=1]
*** Query: 'DROP TRIGGER tr_0'. Crash right after the query has been binary-logged before committed in the engine. ***
SET @@GLOBAL.debug="+d,crash_commit_after_log";
include/gtid_step_reset.inc
START SLAVE SQL_THREAD;
include/rpl_start_server.inc [server_number=2]
[connection slave]
include/gtid_step_assert.inc [count=1, only_count=1]
[connection slave]
include/start_slave.inc
[connection master]
DROP table t_1;
DROP DATABASE master_db;
include/sync_slave_sql_with_master.inc
include/rpl_end.inc
