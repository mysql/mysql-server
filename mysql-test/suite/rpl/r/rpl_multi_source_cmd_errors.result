#
# set up masters server_1 and server_3 with server_2 being a slave.
#.
include/rpl_init.inc [topology=1->2,3->2]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server_2]
#
#  1. Test ER_SLAVE_MULTIPLE_CHANNELS_CMD
#
CHANGE MASTER TO MASTER_USER = "root";
ERROR HY000: Multiple channels exist on the slave. Please provide channel name as an argument.
SHOW RELAYLOG EVENTS;
ERROR HY000: Multiple channels exist on the slave. Please provide channel name as an argument.
SELECT MASTER_POS_WAIT("dummy-bin.000001", 4);
ERROR HY000: Multiple channels exist on the slave. Please provide channel name as an argument.
START SLAVE UNTIL MASTER_LOG_FILE = "dummy-bin.0000001", MASTER_LOG_POS = 1729
#--error ER_SLAVE_MULTIPLE_CHANNELS_CMD
#SELECT WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS("1111-1111-1111-1111:1");
ERROR HY000: Multiple channels exist on the slave. Please provide channel name as an argument.
START SLAVE UNTIL MASTER_LOG_FILE = "dummy-bin.000001", MASTER_LOG_POS = 4;
ERROR HY000: Multiple channels exist on the slave. Please provide channel name as an argument.
#
# 2. Test errors of commands on an invalid channel
#
START SLAVE FOR CHANNEL "non_existent";
ERROR HY000: Slave channel 'non_existent' does not exist.
STOP SLAVE FOR CHANNEL "non_existent";
ERROR HY000: Slave channel 'non_existent' does not exist.
SHOW RELAYLOG EVENTS FOR CHANNEL "non_existent";
ERROR HY000: Slave channel 'non_existent' does not exist.
RESET SLAVE FOR CHANNEL "non_existent";
ERROR HY000: Slave channel 'non_existent' does not exist.
FLUSH RELAY LOGS FOR CHANNEL "non_existent";
ERROR HY000: Slave channel 'non_existent' does not exist.
# Following wait functions shall return for a non_existnent channels
SELECT MASTER_POS_WAIT("dummy-bin.00001",4, 3, "non_existtent");
MASTER_POS_WAIT("dummy-bin.00001",4, 3, "non_existtent")
NULL
SELECT WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS("1111-1111-1111-1111:1", 2, "non_existent");
WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS("1111-1111-1111-1111:1", 2, "non_existent")
NULL
Warnings:
Warning	1287	'WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS' is deprecated and will be removed in a future release. Please use WAIT_FOR_EXECUTED_GTID_SET instead
#
#  3a) Test that proper error messages are sent out when invalid
#      channel names are given for change master command.
#
CHANGE MASTER TO MASTER_HOST = "127.0.0.1", MASTER_USER = "root" FOR CHANNEL "A123456789A123456789A123456789A123456789A123456789A123456789A123456789";
ERROR HY000: Couldn't create channel: Channel name is either invalid or too long.
CHANGE MASTER TO MASTER_HOST = "127.0.0.1", MASTER_USER = "root" FOR CHANNEL "         ";
ERROR HY000: Couldn't create channel: Channel name is either invalid or too long.
#
#  3.b) Check that maximum channels permitted error is issued.
#
SET GLOBAL DEBUG = "+d, max_replication_channels_exceeded";
CHANGE MASTER TO MASTER_LOG_POS = 4 FOR CHANNEL "257th_channel";
ERROR HY000: Maximum number of replication channels allowed exceeded.
SET GLOBAL DEBUG=@old_debug;
#
#  3.c) Check that restricted channel names cannot be used
#
CHANGE MASTER TO MASTER_HOST="localhost", MASTER_PORT=10 FOR CHANNEL "group_replication_applier";
ERROR HY000: CHANGE MASTER with the given parameters cannot be performed on channel 'group_replication_applier'.
CHANGE MASTER TO MASTER_HOST="localhost", MASTER_PORT=10 FOR CHANNEL "group_replication_recovery";
ERROR HY000: CHANGE MASTER with the given parameters cannot be performed on channel 'group_replication_recovery'.
# Assert that channels are not created for failed CHANGE MASTER command.
# and number of channels configured must be 2
include/assert.inc [there shall be only two rows representing 2 channels.]
include/rpl_end.inc
RESET SLAVE ALL FOR CHANNEL 'channel_1';
RESET SLAVE ALL FOR CHANNEL 'channel_3';
