#
# Use default connection to master.
#
RESET MASTER;
SET @old_binlog_order_commits = @@global.binlog_order_commits;
SET GLOBAL binlog_order_commits = 0;
#
# Create table. Use GTID 1
#
CREATE TABLE t1 (id INT PRIMARY KEY);
#
# Make another connection. Set to stop at after dec_prep_xids.
#
SET DEBUG_SYNC = "after_dec_prep_xids SIGNAL signal.after_dec_prep_xids_reached WAIT_FOR signal.after_dec_prep_xids_unblock";
#
# Use GTID 2. Stop after dec_prep_xids. If commit is executed before
# dec_prep_xids then GTID 2 will be used out.
#
INSERT INTO t1 VALUES(1);
#
# Use default connection to master.
#
#
# Wait until after_dec_prep_xids is reached
#
SET DEBUG_SYNC = "now WAIT_FOR signal.after_dec_prep_xids_reached";
#
# Use GTID 3. Force to rotate to log 'master-bin.000002'
# All GTID 1-3 should be used in 'master-bin.000001'
#
SET SESSION debug = "+d,force_rotate";
INSERT INTO t1 VALUES(2);
SET SESSION debug = "-d,force_rotate";
#
# Add transaction in new binary log 'master-bin.000002'
# GTID 4 should be used.
#
SET DEBUG_SYNC = 'now SIGNAL signal.after_dec_prep_xids_unblock';
INSERT INTO t1 VALUES(3);
#
# Check all GTID 1-3 are used by looking at 'master-bin.000002'
#
include/assert.inc [Previous_gtids should use UUID:1-3 GTID]
#
# Cleanup
#
DROP TABLE t1;
SET GLOBAL binlog_order_commits = @old_binlog_order_commits;
