include/master-slave.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection master]
FLUSH LOCAL LOGS;
include/assert.inc [Master status shall point to master-bin.000002]
include/rpl_stop_server.inc [server_number=1]
include/rpl_start_server.inc [server_number=1]
include/assert.inc [1st binary log is not encrypted]
include/assert.inc [2nd binary log is encrypted]
include/assert.inc [3rd binary log is not encrypted]
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
master-bin.000002	#	Start_encryption	#	#	
master-bin.000002	#	Previous_gtids	#	#	
master-bin.000002	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
master-bin.000002	#	Query	#	#	use `test`; CREATE TABLE t1 (a INT)
master-bin.000002	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
master-bin.000002	#	Query	#	#	BEGIN
master-bin.000002	#	Query	#	#	use `test`; INSERT INTO t1 (a) VALUES (1)
master-bin.000002	#	Xid	#	#	COMMIT /* XID */
master-bin.000002	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
master-bin.000002	#	Query	#	#	BEGIN
master-bin.000002	#	Query	#	#	use `test`; INSERT INTO t1 (a) VALUES (2)
master-bin.000002	#	Xid	#	#	COMMIT /* XID */
master-bin.000002	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
master-bin.000002	#	Query	#	#	BEGIN
master-bin.000002	#	Query	#	#	use `test`; INSERT INTO t1 (a) VALUES (3)
master-bin.000002	#	Xid	#	#	COMMIT /* XID */
master-bin.000002	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
master-bin.000002	#	Query	#	#	BEGIN
master-bin.000002	#	Query	#	#	use `test`; INSERT INTO t1 (a) VALUES (4)
master-bin.000002	#	Xid	#	#	COMMIT /* XID */
[connection slave]
include/start_slave.inc
[connection master]
include/sync_slave_sql_with_master.inc
include/assert.inc [Slave shall have t1 with a 4 rows on it]
DROP TABLE t1;
include/stop_slave.inc
RESET SLAVE;
include/rpl_stop_server.inc [server_number=1]
include/rpl_start_server.inc [server_number=1]
include/assert.inc [1st binary log is not encrypted]
include/assert.inc [2nd binary log is encrypted]
include/assert.inc [3rd binary log is not encrypted]
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
master-bin.000002	#	Start_encryption	#	#	
master-bin.000002	#	Previous_gtids	#	#	
master-bin.000002	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
master-bin.000002	#	Query	#	#	use `test`; CREATE TABLE t1 (a INT)
master-bin.000002	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
master-bin.000002	#	Query	#	#	BEGIN
master-bin.000002	#	Query	#	#	use `test`; INSERT INTO t1 (a) VALUES (1)
master-bin.000002	#	Xid	#	#	COMMIT /* XID */
master-bin.000002	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
master-bin.000002	#	Query	#	#	BEGIN
master-bin.000002	#	Query	#	#	use `test`; INSERT INTO t1 (a) VALUES (2)
master-bin.000002	#	Xid	#	#	COMMIT /* XID */
master-bin.000002	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
master-bin.000002	#	Query	#	#	BEGIN
master-bin.000002	#	Query	#	#	use `test`; INSERT INTO t1 (a) VALUES (3)
master-bin.000002	#	Xid	#	#	COMMIT /* XID */
master-bin.000002	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
master-bin.000002	#	Query	#	#	BEGIN
master-bin.000002	#	Query	#	#	use `test`; INSERT INTO t1 (a) VALUES (4)
master-bin.000002	#	Xid	#	#	COMMIT /* XID */
master-bin.000002	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
master-bin.000002	#	Query	#	#	BEGIN
master-bin.000002	#	Query	#	#	use `test`; INSERT INTO t1 (a) VALUES (5)
master-bin.000002	#	Xid	#	#	COMMIT /* XID */
[connection slave]
include/start_slave.inc
[connection master]
include/sync_slave_sql_with_master.inc
include/assert.inc [Slave shall have t1 with a 5 rows on it]
DROP TABLE t1;
SET GLOBAL binlog_encryption=ON;
include/stop_slave.inc
RESET SLAVE;
RESET MASTER;
CREATE TABLE t0 (a INT);
INSERT INTO t0 (a) VALUES (1);
INSERT INTO t0 (a) VALUES (2);
INSERT INTO t0 (a) VALUES (3);
FLUSH BINARY LOGS;
CREATE TABLE t1 (a INT);
INSERT INTO t1 (a) VALUES (1);
FLUSH BINARY LOGS;
CREATE TABLE t2 (a INT);
INSERT INTO t2 (a) VALUES (1);
INSERT INTO t2 (a) VALUES (2);
FLUSH BINARY LOGS;
include/rpl_stop_server.inc [server_number=1]
include/rpl_start_server.inc [server_number=1]
include/assert.inc [1st binary log is not encrypted]
include/assert.inc [2nd binary log is encrypted]
include/assert.inc [3rd binary log is not encrypted]
include/show_binlog_events.inc
Log_name	Pos	Event_type	Server_id	End_log_pos	Info
master-bin.000002	#	Start_encryption	#	#	
master-bin.000002	#	Previous_gtids	#	#	
master-bin.000002	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
master-bin.000002	#	Query	#	#	use `test`; CREATE TABLE t1 (a INT)
master-bin.000002	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
master-bin.000002	#	Query	#	#	BEGIN
master-bin.000002	#	Query	#	#	use `test`; INSERT INTO t1 (a) VALUES (1)
master-bin.000002	#	Xid	#	#	COMMIT /* XID */
master-bin.000002	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
master-bin.000002	#	Query	#	#	BEGIN
master-bin.000002	#	Query	#	#	use `test`; INSERT INTO t1 (a) VALUES (2)
master-bin.000002	#	Xid	#	#	COMMIT /* XID */
master-bin.000002	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
master-bin.000002	#	Query	#	#	BEGIN
master-bin.000002	#	Query	#	#	use `test`; INSERT INTO t1 (a) VALUES (3)
master-bin.000002	#	Xid	#	#	COMMIT /* XID */
master-bin.000002	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
master-bin.000002	#	Query	#	#	BEGIN
master-bin.000002	#	Query	#	#	use `test`; INSERT INTO t1 (a) VALUES (4)
master-bin.000002	#	Xid	#	#	COMMIT /* XID */
master-bin.000002	#	Anonymous_Gtid	#	#	SET @@SESSION.GTID_NEXT= 'ANONYMOUS'
master-bin.000002	#	Query	#	#	BEGIN
master-bin.000002	#	Query	#	#	use `test`; INSERT INTO t1 (a) VALUES (5)
master-bin.000002	#	Xid	#	#	COMMIT /* XID */
[connection slave]
include/start_slave.inc
[connection master]
include/sync_slave_sql_with_master.inc
include/assert.inc [Slave shall have t1 with a 5 rows on it]
DROP TABLE t0,t1,t2;
include/rpl_end.inc
