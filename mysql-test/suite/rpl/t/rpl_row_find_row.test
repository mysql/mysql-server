# BUG#47312: RBR: Disabling key on slave breaks replication:
# HA_ERR_WRONG_INDEX
#
# Description
# ===========
#   
#   This test case checks whether disabling a key on a slave breaks
#   replication or not.
#   
#   Case #1, shows that while not using ALTER TABLE... DISABLE KEYS and
#   the slave has no key defined while the master has one, replication
#   won't break.
#
#   Case #2, shows that before patch for BUG#47312, if defining key on
#   slave table, and later disable it, replication would break. This
#   has been fixed.
# 

-- source include/not_group_replication_plugin.inc
-- source include/have_binlog_format_row.inc
-- source include/have_myisam.inc
-- source include/master-slave.inc

#
# Case #1: master has key, but slave has not. 
#          Replication does not break.
# 

SET SQL_LOG_BIN=0;
CREATE TABLE t (a int, b int, c int, key(b));
SET SQL_LOG_BIN=1;

-- connection slave

CREATE TABLE t (a int, b int, c int);

-- connection master

INSERT INTO t VALUES (1,2,4);
INSERT INTO t VALUES (4,3,4);
DELETE FROM t;

--source include/sync_slave_sql_with_master.inc

-- connection master
DROP TABLE t;

--source include/sync_slave_sql_with_master.inc

#
# Case #2: master has key, slave also has one, 
#          but it gets disabled sometime.
#          Replication does not break anymore.
# 
--source include/rpl_reset.inc
-- connection master

CREATE TABLE t (a int, b int, c int, key(b)) ENGINE=MyISAM;

--source include/sync_slave_sql_with_master.inc

ALTER TABLE t DISABLE KEYS;

-- connection master

INSERT INTO t VALUES (1,2,4);
INSERT INTO t VALUES (4,3,4);
DELETE FROM t;

--source include/sync_slave_sql_with_master.inc

-- connection master
DROP TABLE t;

--source include/sync_slave_sql_with_master.inc

#
# BUG#53889: slaves stops with 1032; handler error HA_ERR_KEY_NOT_FOUND
#
-- source include/rpl_reset.inc
-- connection master

CREATE TABLE t2 (col4 CHAR(25) DEFAULT NULL,
                 col1 BIGINT,
                 col2 TINYINT NOT NULL,
                 col5 VARCHAR(25) DEFAULT ''
                ) ENGINE = myisam;

ALTER TABLE t2 ADD INDEX idx1 ( col4 ) , ADD UNIQUE INDEX idx2 ( col5 );
INSERT INTO t2 ( col4 , col2 ) VALUES ( 'Hello', -77 ) ;
UPDATE t2 SET col1 = 13 WHERE col2 = -77;
--source include/sync_slave_sql_with_master.inc

-- let $diff_tables= master:t2, slave:t2
-- source include/diff_tables.inc

-- connection master
DROP TABLE t2;
--source include/sync_slave_sql_with_master.inc

#
# BUG#53893: RBR: nullable unique key can lead to out-of-sync slave
#

#
# We insert two rows. Both with part of UNIQUE KEY set to null.
# Then we update the last row inserted. On master the correct
# row is updated. On the slave the wrong row would be updated
# because the engine would look it up by the NULL Unique KEY.
# As a consquence, the wrong row would be updated.
#

-- source include/rpl_reset.inc
-- connection master

CREATE TABLE t1 (c1 INT NOT NULL, c2 INT NOT NULL, c3 INT, UNIQUE KEY(c1,c3), KEY(c2));
INSERT INTO t1(c1,c2) VALUES(1,1);
INSERT INTO t1(c1,c2) VALUES(1,2);
UPDATE t1 SET c1=1000 WHERE c2=2;
--source include/sync_slave_sql_with_master.inc

-- let $diff_tables= master:t1, slave:t1
-- source include/diff_tables.inc

-- connection master
DROP TABLE t1;

--echo #
--echo # Bug#27244826: INVISIBLE INDEXES ARE NOT RESPECTED BY SLAVE UNDER ROW
--echo # FORMAT
--echo #

CREATE TABLE t1 ( id INT, KEY idx_id(id) );

INSERT INTO t1 VALUES (1), (2), (3);
--source include/sync_slave_sql_with_master.inc

--echo # Alter idx_id index on slave to invisible.
ALTER TABLE t1 ALTER INDEX idx_id INVISIBLE;

--connection master
DELETE FROM t1;
--source include/sync_slave_sql_with_master.inc

--echo # check whether invisible attribute is respected
SELECT table_name, index_name, is_visible
FROM information_schema.statistics
WHERE index_name = 'idx_id';

# This prints warning 3719:
#
# 'utf8' is currently an alias for the character set UTF8MB3, which will be
# replaced by UTF8MB4 in a future release. Please consider using UTF8MB4 in
# order to be unambiguous.
#
# The number of warnings printed depends on the platform,
# so use disable_warnings to get a stable result file.

--disable_warnings
SELECT * FROM sys.schema_unused_indexes WHERE index_name = 'idx_id';
--enable_warnings

SELECT rows_selected
FROM sys.schema_index_statistics
WHERE index_name = 'idx_id';

--connection master
DROP TABLE t1;

--source include/rpl_end.inc
