# ==== Purpose ====
#
# This test checks that the slave parameter require_row_format is persisted
# and also upgraded correctly using either table or files.
#
# ==== Requirements ====
#
#  TC1: Verify that the column is added when doing an upgrade
#  TC2: On upgrade verify that the value for REQUIRE_ROW_FORMAT is 0
#  TC3: On upgrade verify that the value for REQUIRE_ROW_FORMAT is 1 for
#       group replication channels
#  TC4: Verify that TC2 and TC3  are true when upgrading from/to
#       File repositories
#  TC5: Verify that TC2, TC3 and TC4 are true when upgrading from/to
#       Table repositories
#
# ==== Implementation ====
#
# 0. Create a user to use as a privilege_checks_user
#    Create some test auxiliary include files to avoid step repetition.
#
# 1. Basic operations with REQUIRE_ROW_FORMAT
#
# 1.1. Set REQUIRE_ROW_FORMAT to 1
#      Check the performance_schema table and file repository are correct
# 1.2. Set REQUIRE_ROW_FORMAT to 0
#      Check the performance_schema table and file repository are correct
#
# 2. File to File upgrades
#
# 2.1 Upgrade the server while using File repositories
#     Start the server using a file repository that has no privileged user
#     REQUIRE_ROW_FORMAT must be 0
# 2.2 Upgrade the server while using File repositories
#     Start the server using a file repository that has a privileged user
#     REQUIRE_ROW_FORMAT must be 0
#
# 3. File to Table upgrades
#
# 3.1 Upgrade the server to Table repositories from File repositories
#     Start the server using a file repository that has no privileged user
#     REQUIRE_ROW_FORMAT must be 0
# 3.2 Upgrade the server to Table repositories from File repositories
#     Start the server using a file repository that has a privileged user
#     REQUIRE_ROW_FORMAT must be 0
#
# 4. Table to Table upgrades
#
# 4.1 Upgrade the server while using Table repositories
#     Have 3 channels:
#       1. A channel with no privileged user (ch1)
#       2. A group_replication channel (group_replication_recovery)
#       3. A channel with a privileged user (default channel)
#     REQUIRE_ROW_FORMAT must be 0 for 1) and 3). It must be 1 for 2)
#
# 5. Cleanup
#
# ==== References ====
#
# WL #12968 : Configure replication applier to require row-based replication

--source include/big_test.inc
--source include/not_valgrind.inc
--source include/not_group_replication_plugin.inc
--source include/have_binlog_format_row.inc
--source include/not_master_info_file.inc
--source include/not_have_privilege_checks_user.inc
--source include/not_rpl_gtid_only.inc
--source include/master-slave.inc

--echo
--echo # 0. Create a user to use as a privilege_checks_user
--echo #    Create some test auxiliary include files to avoid step repetition.

--source include/rpl_connection_slave.inc

CREATE USER 'replication_applier'@'localhost' IDENTIFIED BY 'password';
GRANT REPLICATION_APPLIER ON * . * TO 'replication_applier'@'localhost';
FLUSH PRIVILEGES;

--write_file $MYSQL_TMP_DIR/check_require_row_format_enabled_in_file_repo.inc END_OF_PROCEDURE

  if ($rl_info_filename == '')
  {
    --die !!!ERROR IN TEST: you must set $rl_info_filename
  }

  --let $assert_text = Check that mysql.slave_relay_log_info does not have any entry
  --let $assert_cond = [SELECT COUNT(*) FROM mysql.slave_relay_log_info WHERE CHANNEL_NAME=""] = 0
  --source include/assert.inc

  --let $count = `SELECT COUNT(*) FROM performance_schema.replication_applier_configuration WHERE REQUIRE_ROW_FORMAT = 'YES'`
  --let $assert_text = REQUIRE_ROW_FORMAT enabled for default channel "" in performance_schema.replication_applier_configuration
  --let $assert_cond = $count = 1
  --source include/assert.inc

  --let $assert_text = In the file the field is set to 1
  --let $assert_file = $MYSQLD_DATADIR/$rl_info_filename
  --let $assert_only_after = ^1\$
  --let $assert_select = 1
  --let $assert_count = 1
  --source include/assert_grep.inc

END_OF_PROCEDURE

--write_file $MYSQL_TMP_DIR/check_require_row_format_disabled_in_file_repo.inc END_OF_PROCEDURE

  --let $assert_text = Check that mysql.slave_relay_log_info does not have any entry
  --let $assert_cond = [SELECT COUNT(*) FROM mysql.slave_relay_log_info WHERE CHANNEL_NAME=""] = 0
  --source include/assert.inc

  --let $count = `SELECT COUNT(*) FROM performance_schema.replication_applier_configuration WHERE REQUIRE_ROW_FORMAT = 'NO'`
  --let $assert_text = REQUIRE_ROW_FORMAT disabled for default channel "" in performance_schema.replication_applier_configuration
  --let $assert_cond = $count = 1
  --source include/assert.inc

END_OF_PROCEDURE

--let $MYSQLD_DATADIR= `select @@datadir`
--let $rl_info_filename = `SELECT @@relay_log_info_file`

# 1. Basic operations with REQUIRE_ROW_FORMAT

--echo
--echo # 1.1. Set REQUIRE_ROW_FORMAT to 1
--echo #      Check the performance_schema table and file repository are correct

STOP SLAVE;

CHANGE REPLICATION SOURCE TO SOURCE_HOST="localhost", REQUIRE_ROW_FORMAT = 1;

--source $MYSQL_TMP_DIR/check_require_row_format_enabled_in_file_repo.inc

--echo
--echo # 1.2. Set REQUIRE_ROW_FORMAT to 0
--echo #      Check the performance_schema table and file repository are correct

CHANGE REPLICATION SOURCE TO REQUIRE_ROW_FORMAT = 0;

--source $MYSQL_TMP_DIR/check_require_row_format_disabled_in_file_repo.inc

# 2. File to File upgrades

--echo
--echo # 2.1 Upgrade the server while using File repositories
--echo #     Start the server using a file repository that has no privileged user
--echo #     REQUIRE_ROW_FORMAT must be 0

--let $sub_testcase = no_flag_no_priv_user
--let $rpl_server_restart_parameters = --skip_replica_start
--let $slave_server_num = 2
--source extra/rpl_tests/restart_slave_with_custom_relaylog_repo_file.inc

--source $MYSQL_TMP_DIR/check_require_row_format_disabled_in_file_repo.inc

--echo
--echo # 2.2 Upgrade the server while using File repositories
--echo #     Start the server using a file repository that has a privileged user
--echo #     REQUIRE_ROW_FORMAT must be 0

--let $sub_testcase = no_flag_with_priv_user
--let $rpl_server_restart_parameters = --skip_replica_start
--let $slave_server_num = 2
--source extra/rpl_tests/restart_slave_with_custom_relaylog_repo_file.inc

--source $MYSQL_TMP_DIR/check_require_row_format_disabled_in_file_repo.inc

--echo # Reset the repository to default values

CHANGE REPLICATION SOURCE TO PRIVILEGE_CHECKS_USER=NULL, REQUIRE_ROW_FORMAT = 0;

--source $MYSQL_TMP_DIR/check_require_row_format_disabled_in_file_repo.inc

# 3. File to Table upgrades

--echo
--echo # 3.1 Upgrade the server to Table repositories from File repositories
--echo #     Start the server using a file repository that has no privileged user
--echo #     REQUIRE_ROW_FORMAT must be 0

ALTER TABLE mysql.slave_relay_log_info DROP COLUMN Require_row_format;

--let $sub_testcase = no_flag_no_priv_user
--let $rpl_server_restart_parameters = --skip_replica_start --relay-log-info-repository=TABLE --upgrade=FORCE
--let $slave_server_num = 2
--source extra/rpl_tests/restart_slave_with_custom_relaylog_repo_file.inc

--let $assert_text = Check that mysql.slave_relay_log_info has an entry with REQUIRE_ROW_FORMAT set to 0
--let $assert_cond = [SELECT COUNT(*) FROM mysql.slave_relay_log_info WHERE CHANNEL_NAME="" AND REQUIRE_ROW_FORMAT = 0] = 1
--source include/assert.inc

--let $count = `SELECT COUNT(*) FROM performance_schema.replication_applier_configuration WHERE REQUIRE_ROW_FORMAT = 'NO'`
--let $assert_text = Check entry for default channel "" in performance_schema.replication_applier_configuration
--let $assert_cond = $count = 1
--source include/assert.inc

--echo
--echo # 3.2 Upgrade the server to Table repositories from File repositories
--echo #     Start the server using a file repository that has a privileged user
--echo #     REQUIRE_ROW_FORMAT must be 0

--let $rpl_server_number = 2
--let $rpl_server_parameters = --relay-log-info-repository=FILE
--let $explicit_default_wait_counter = 15000
--source include/rpl_restart_server.inc

ALTER TABLE mysql.slave_relay_log_info DROP COLUMN Require_row_format;

--let $sub_testcase = no_flag_with_priv_user
--let $rpl_server_restart_parameters = --skip_replica_start --relay-log-info-repository=TABLE --upgrade=FORCE
--let $slave_server_num = 2
--source extra/rpl_tests/restart_slave_with_custom_relaylog_repo_file.inc

--let $assert_text = Check that mysql.slave_relay_log_info has an entry with REQUIRE_ROW_FORMAT set to 0
--let $assert_cond = [SELECT COUNT(*) FROM mysql.slave_relay_log_info WHERE CHANNEL_NAME="" AND REQUIRE_ROW_FORMAT = 0] = 1
--source include/assert.inc

--let $count = `SELECT COUNT(*) FROM performance_schema.replication_applier_configuration WHERE REQUIRE_ROW_FORMAT = 'NO'`
--let $assert_text = Check entry for default channel "" in performance_schema.replication_applier_configuration
--let $assert_cond = $count = 1
--source include/assert.inc

# 4. Table to Table upgrades

--echo
--echo # 4.1 Upgrade the server while using Table repositories
--echo #     Have 3 channels:
--echo #       1. A channel with no privileged user (ch1)
--echo #       2. A group_replication channel (group_replication_recovery)
--echo #       3. A channel with a privileged user (default channel)
--echo #     REQUIRE_ROW_FORMAT must be 0 for 1) and 3). It must be 1 for 2)

# For run where GTID mode is OFF we enable it so we can configure the GR recovery channel
--let $rpl_gtid_mode= ON
--let $rpl_server_numbers= 2
--let $rpl_set_enforce_gtid_consistency= 1
--let $rpl_skip_sync= 1
--let $no_extra_info = 1
--source include/rpl_set_gtid_mode.inc

CHANGE REPLICATION SOURCE TO SOURCE_HOST="localhost", SOURCE_PORT=12 FOR CHANNEL "ch1" ;
--disable_warnings
CHANGE REPLICATION SOURCE TO SOURCE_USER="root" FOR CHANNEL "group_replication_recovery";
--enable_warnings
CHANGE REPLICATION SOURCE TO SOURCE_HOST="localhost", SOURCE_PORT=12, PRIVILEGE_CHECKS_USER = 'replication_applier'@'localhost' FOR CHANNEL "";

# Revert the table to 10 lines (pre upgrade)
ALTER TABLE mysql.slave_relay_log_info DROP COLUMN Require_row_format;
UPDATE mysql.slave_relay_log_info SET Number_of_lines = 10;

--let $rpl_server_number = 2
--let $rpl_server_parameters = --skip_replica_start --relay-log-info-repository=TABLE --upgrade=FORCE
--let $explicit_default_wait_counter = 15000
--source include/rpl_restart_server.inc

# We have only 1 table here as group_replication_recovery does not show up
--let $count = `SELECT COUNT(*) FROM performance_schema.replication_applier_configuration WHERE REQUIRE_ROW_FORMAT = 'YES'`
--let $assert_text = Check the number of channels with enabled REQUIRE_ROW_FORMAT
--let $assert_cond = $count = 0
--source include/assert.inc

--let $count = `SELECT COUNT(*) FROM performance_schema.replication_applier_configuration WHERE REQUIRE_ROW_FORMAT = 'NO'`
--let $assert_text = Check the number of channels with disabled REQUIRE_ROW_FORMAT
--let $assert_cond = $count = 2
--source include/assert.inc

--let $assert_text = Check that mysql.slave_relay_log_info has an entry with REQUIRE_ROW_FORMAT set to 0
--let $assert_cond = [SELECT COUNT(*) FROM mysql.slave_relay_log_info WHERE CHANNEL_NAME="" AND REQUIRE_ROW_FORMAT = 0] = 1
--source include/assert.inc

--let $assert_text = Check that mysql.slave_relay_log_info has an entry with REQUIRE_ROW_FORMAT set to 1
--let $assert_cond = [SELECT COUNT(*) FROM mysql.slave_relay_log_info WHERE CHANNEL_NAME="group_replication_recovery" AND REQUIRE_ROW_FORMAT = 1] = 1
--source include/assert.inc

--let $assert_text = Check that mysql.slave_relay_log_info has an entry with REQUIRE_ROW_FORMAT set to 0
--let $assert_cond = [SELECT COUNT(*) FROM mysql.slave_relay_log_info WHERE CHANNEL_NAME="ch1" AND REQUIRE_ROW_FORMAT = 0] = 1
--source include/assert.inc

--echo
--echo # 5. Cleanup

--remove_file $MYSQL_TMP_DIR/check_require_row_format_enabled_in_file_repo.inc
--remove_file $MYSQL_TMP_DIR/check_require_row_format_disabled_in_file_repo.inc

DROP USER 'replication_applier'@'localhost';

RESET SLAVE ALL FOR CHANNEL "ch1";
RESET SLAVE ALL FOR CHANNEL "group_replication_recovery";

if ($gtid_mode_on == 0) {
  --let $rpl_gtid_mode = 0
  --let $rpl_set_enforce_gtid_consistency = 0
}
--let $no_extra_info = 1
--source include/rpl_set_gtid_mode.inc

--let $rpl_channel_name=
--let $rpl_skip_sync= 1
--source include/rpl_end.inc
