# ==== Purpose ====
#
# Verify that SET @@global.binlog_format and SET @@persist.binlog_format
# must be disallowed if any replication channel applier is running.
#
# ==== Implementation ====
#
# 1. Start replication with two servers master and slave.
# 2. Connect to slave server.
# 3. Verify that SET @@global.binlog_format and SET @@persist.binlog_format
#    must be disallowed if any replication channel applier is running.
# 4. Verify that SET @@global.binlog_format takes effect if
#    no replication channel applier is running.
#
# ==== References ====
#
# Wl#8872 Allow CREATE TEMPORARY/DROP TEMPORARY in transaction when GTID_MODE=ON in RBR

# This test script will be run only in non GR set up.
--source include/not_group_replication_plugin.inc
# The test script should be run with all binlog mode.
--source include/master-slave.inc

--source include/rpl_connection_slave.inc
--echo #
--echo # Verify that SET @@global.binlog_format and SET @@persist.binlog_format
--echo # must be disallowed if any replication channel applier is running.
--echo #
--error ER_RUNNING_APPLIER_PREVENTS_SWITCH_GLOBAL_BINLOG_FORMAT
SET @@global.binlog_format=STATEMENT;
--error ER_RUNNING_APPLIER_PREVENTS_SWITCH_GLOBAL_BINLOG_FORMAT
SET @@persist.binlog_format=STATEMENT;
--source include/stop_slave_io.inc
--error ER_RUNNING_APPLIER_PREVENTS_SWITCH_GLOBAL_BINLOG_FORMAT
SET @@global.binlog_format=STATEMENT;
--error ER_RUNNING_APPLIER_PREVENTS_SWITCH_GLOBAL_BINLOG_FORMAT
SET @@persist.binlog_format=STATEMENT;
--source include/start_slave_io.inc
--echo #
--echo # Verify that SET @@global.binlog_format takes effect if
--echo # no replication channel applier is running.
--echo #
--source include/stop_slave_sql.inc
set @saved_binlog_format=@@global.binlog_format;
SET @@global.binlog_format=STATEMENT;
--let $assert_text= assert that @@global.binlog_format is set to STATEMENT
--let $assert_cond= "[select @@global.binlog_format]" = "STATEMENT"
--source include/assert.inc
SET @@global.binlog_format=ROW;
--let $assert_text= assert that @@global.binlog_format is set to ROW
--let $assert_cond= "[select @@global.binlog_format]" = "ROW"
--source include/assert.inc
SET @@global.binlog_format=MIXED;
--let $assert_text= assert that @@global.binlog_format is set to MIXED
--let $assert_cond= "[select @@global.binlog_format]" = "MIXED"
--source include/assert.inc
--source include/start_slave_sql.inc

--source include/stop_slave.inc
SET @@global.binlog_format=STATEMENT;
--let $assert_text= assert that @@global.binlog_format is set to STATEMENT
--let $assert_cond= "[select @@global.binlog_format]" = "STATEMENT"
--source include/assert.inc
SET @@global.binlog_format=ROW;
--let $assert_text= assert that @@global.binlog_format is set to ROW
--let $assert_cond= "[select @@global.binlog_format]" = "ROW"
--source include/assert.inc
SET @@global.binlog_format=MIXED;
--let $assert_text= assert that @@global.binlog_format is set to MIXED
--let $assert_cond= "[select @@global.binlog_format]" = "MIXED"
--source include/assert.inc
set global binlog_format=@saved_binlog_format;
--let $assert_text= assert that @@global.binlog_format is set to @saved_binlog_format
--let $assert_cond= "[select @@global.binlog_format]" = @saved_binlog_format
--source include/assert.inc
--source include/start_slave.inc

# Cleanup
--source include/rpl_connection_master.inc
--source include/rpl_end.inc
