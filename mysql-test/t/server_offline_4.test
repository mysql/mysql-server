# Created: Horst Hunger 2014-05-19
# WL#3836:  Method to bring servers off line

--source include/not_threadpool.inc
--source include/force_myisam_default.inc
--source include/have_myisam.inc

# Save the global value to be used to restore the original value.
SET @global_saved_tmp =  @@global.offline_mode;
let $MYSQLD_DATADIR= `SELECT @@global.datadir`;

--enable_connect_log
# This count may not be 1, because of the probably existing connections
# from the previous/parallel test runs
let $user_count= `SELECT COUNT(USER) FROM INFORMATION_SCHEMA.PROCESSLIST WHERE USER != 'event_scheduler'`;

# test case 2.1.1 3)
CREATE USER 'user1'@'localhost';
--connect(conu1,localhost,user1)
use test;
CREATE TABLE t2 (c1 int,c2 char(10));
INSERT INTO t2 VALUES (1,'aaaaaaaaaa');
INSERT INTO t2 VALUES (2,'bbbbbbbbbb');

# Check for temp files of ALTER taken from kill.test and modified.
--connection default
LOCK TABLE t2 read;

--connection conu1
--echo # ALTER should copy table
--send alter table t2 add column j int

--connection default
let $wait_condition=
  select count(*) = 1 from information_schema.processlist
  where state = "Waiting for table metadata lock" and
        info = "alter table t2 add column j int";
--source include/wait_condition.inc

# Alter will completely be rolled back (No temp files available)
SET GLOBAL offline_mode = ON;
# Wait until all non super user have been disconnected (for slow machines)
let $count_sessions= $user_count;
--source include/wait_until_count_sessions.inc
--replace_regex /_[0-9]+\.sdi/_XXX.sdi/
--list_files $MYSQLD_DATADIR/test t*
SELECT COUNT(USER) FROM INFORMATION_SCHEMA.PROCESSLIST;

SET GLOBAL offline_mode = OFF;

UNLOCK TABLES;
# Disconnect cleanup session infos on client side to be able to reconnect.
--disconnect conu1
--connect(conu1,localhost,user1)
SELECT * FROM t2 ORDER BY c1;
DROP TABLE t2;

--connection default
SET GLOBAL offline_mode = ON;
# Wait until all non super user have been disconnected (for slow machines)
let $count_sessions= $user_count;
--source include/wait_until_count_sessions.inc
SELECT COUNT(USER) FROM INFORMATION_SCHEMA.PROCESSLIST;

# Clean up
--disconnect conu1
# Wait until all users have been disconnected (for slow machines)
let $count_sessions= $user_count;
--source include/wait_until_count_sessions.inc

DROP USER 'user1'@'localhost';

--echo # Restoring the original values.
SET @@global.offline_mode = @global_saved_tmp;
