
#
# Test of rename table
#

--source include/count_sessions.inc

--disable_warnings
drop table if exists t0,t1,t2,t3,t4;
# Clear up from other tests (to ensure that SHOW TABLES below is right)
drop table if exists t0,t5,t6,t7,t8,t9,t1_1,t1_2,t9_1,t9_2;
--enable_warnings

create table t0 SELECT 1,"table 1";
create table t2 SELECT 2,"table 2";
create table t3 SELECT 3,"table 3";
rename table t0 to t1;
rename table t3 to t4, t2 to t3, t1 to t2, t4 to t1;
select * from t1;
rename table t3 to t4, t2 to t3, t1 to t2, t4 to t1;
rename table t3 to t4, t2 to t3, t1 to t2, t4 to t1;
select * from t1;

# The following should give errors
--error ER_TABLE_EXISTS_ERROR,ER_TABLE_EXISTS_ERROR
rename table t1 to t2;
--error ER_TABLE_EXISTS_ERROR,ER_TABLE_EXISTS_ERROR
rename table t1 to t1;
--error ER_TABLE_EXISTS_ERROR,ER_TABLE_EXISTS_ERROR
rename table t3 to t4, t2 to t3, t1 to t2, t4 to t2;
show tables like "t_";
--error ER_TABLE_EXISTS_ERROR,ER_TABLE_EXISTS_ERROR
rename table t3 to t1, t2 to t3, t1 to t2, t4 to t1;
--error ER_NO_SUCH_TABLE,ER_NO_SUCH_TABLE
rename table t3 to t4, t5 to t3, t1 to t2, t4 to t1;

select * from t1;
select * from t2;
select * from t3;

# This should give a warning for t4
drop table if exists t1,t2,t3,t4;

#
# Bug #2397 RENAME TABLES is not blocked by
# FLUSH TABLES WITH READ LOCK
#

connect (con1,localhost,root,,);
connect (con2,localhost,root,,);

connection con1;
CREATE TABLE t1 (a int);
CREATE TABLE t3 (a int);
connection con2;
FLUSH TABLES WITH READ LOCK;
connection con1;
send RENAME TABLE t1 TO t2, t3 to t4;
connection con2;
show tables;
UNLOCK TABLES;
connection con1;
reap;
connection con2;

# Wait for the the tables to be renamed
# i.e the query below succeds
let $query= select * from t2, t4;
source include/wait_for_query_to_succeed.inc;

show tables;

drop table t2, t4;

disconnect con2;
disconnect con1;
connection default;


--echo End of 4.1 tests


--echo #
--echo # Bug#14959: "ALTER TABLE isn't able to rename a view"
--echo # Bug#53976: "ALTER TABLE RENAME is allowed on views
--echo #             (not documented, broken)"
--echo #
create table t1(f1 int);
create view v1 as select * from t1;
--error ER_WRONG_OBJECT
alter table v1 rename to v2;
drop view v1;
drop table t1;

--echo End of 5.0 tests

--echo #
--echo # Bug#20197870: sql_table.cc: bool mysql_rename_table ...
--echo #               assertion `error==0\' failed.
--echo # The test crashes server without the fix.
--echo #
SET @orig_innodb_file_per_table= @@innodb_file_per_table;
SET GLOBAL innodb_file_per_table = 0;
create table t1(f1 int) engine=innodb;
--error ER_BAD_DB_ERROR
rename table test.t1 to nonexistingdb.t2;
drop table t1;
SET GLOBAL innodb_file_per_table = @orig_innodb_file_per_table;

--source include/wait_until_count_sessions.inc

--echo #
--echo # Bug#24807594 SDI FILE LOSTS AFTER ALTERING DATABASE
--echo # Verify that .sdi files are cleaned up correctly
--echo #
let $MYSQLD_DATADIR = `select @@datadir`;

CREATE TABLE t1(i INT) ENGINE MYISAM;
RENAME TABLE t1 TO tt1;
--echo # Should only see tt1_XXX.sdi
--replace_regex /_[0-9]+\.sdi/_XXX.sdi/
--list_files $MYSQLD_DATADIR/test *.sdi

RENAME TABLE tt1 TO tt1tt1;
--echo # Should only see tt1tt1_XXX.sdi
--replace_regex /_[0-9]+\.sdi/_XXX.sdi/
--list_files $MYSQLD_DATADIR/test *.sdi

RENAME TABLE tt1tt1 TO ttt1ttt1ttt1ttt1_xyz;
--echo # Should only see ttt1ttt1ttt1ttt1_XXX.sdi
--replace_regex /_[0-9]+\.sdi/_XXX.sdi/
--list_files $MYSQLD_DATADIR/test *.sdi

RENAME TABLE ttt1ttt1ttt1ttt1_xyz TO tttttttttttttttt1_abc;
--echo # Should only see tttttttttttttttt_XXX.sdi
--replace_regex /_[0-9]+\.sdi/_XXX.sdi/
--list_files $MYSQLD_DATADIR/test *.sdi

RENAME TABLE tttttttttttttttt1_abc TO t1;
--echo # Should only see t1_XXX.sdi
--replace_regex /_[0-9]+\.sdi/_XXX.sdi/
--list_files $MYSQLD_DATADIR/test *.sdi

DROP TABLE t1;

