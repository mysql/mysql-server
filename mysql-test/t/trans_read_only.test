--echo #
--echo # WL#5968: Implement START TRANSACTION READ (WRITE|ONLY);
--echo #

--echo #
--echo # Test9:  The --transaction-read-only option.

--echo # Saving the initial value of transaction_read_only variable
SET @transaction_read_only_save = @@transaction_read_only;

SET @@global.transaction_read_only = ON;

--echo # Also for new connections. Switching to con1
connect (con1, localhost, root);
SELECT @@transaction_read_only;
SET SESSION TRANSACTION READ WRITE;
SELECT @@transaction_read_only;
disconnect con1;
--source include/wait_until_disconnected.inc

--echo # Connection default
connection default;
SELECT @@transaction_read_only;


--echo #
--echo # Test 10: SET TRANSACTION / START TRANSACTION + implicit commit.

SET SESSION TRANSACTION READ WRITE;
--disable_ps_protocol
SET TRANSACTION READ ONLY;
--echo # Since DDL does implicit commit before starting, SET TRANSACTION
--echo # will have no effect because the "next" transaction will already
--echo # be over before the DDL statement starts.
CREATE TABLE t1 (a INT);

START TRANSACTION READ ONLY;
--echo # The same happens with START TRANSACTION
DROP TABLE t1;
--enable_ps_protocol

--echo # Restoring the original value of transaction_read_only
SET @@global.transaction_read_only = @transaction_read_only_save;
