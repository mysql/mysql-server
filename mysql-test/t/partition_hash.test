#--disable_abort_on_error
#
# Simple test for the partition storage engine
# Taken fromm the select test
#

#Want to skip this test from daily Valgrind execution
--source include/no_valgrind_without_big.inc

--disable_warnings
drop table if exists t1;
--enable_warnings

--echo #
--echo # Bug#12725206/Bug#61765: WRONG QUERY RESULTS ON SUBPARTITIONS BASED
--echo #                         ON USIGNED BIGINT
--echo #
CREATE TABLE t1 (
 a int(11) NOT NULL,
 b bigint(20) UNSIGNED NOT NULL
)
PARTITION BY RANGE (a)
SUBPARTITION BY HASH (b)
SUBPARTITIONS 3
(PARTITION p1 VALUES LESS THAN (1308614400),
 PARTITION p2 VALUES LESS THAN (1308700800),
 PARTITION p3 VALUES LESS THAN (1308787200),
 PARTITION p4 VALUES LESS THAN (1308873600),
 PARTITION p5 VALUES LESS THAN (1308960000)
);

INSERT INTO t1 VALUES
(1308614400,18446744073709551615),
(1308700800,0xFFFFFFFFFFFFFFFE),
(1308787200,18446744073709551613),
(1308873600,18446744073709551612),
(1308873600, 12531568256096620965),
(1308873600, 12531568256096),
(1308873600, 9223372036854775808);
SELECT a,b,HEX(b) FROM t1 ORDER BY a, b;

--echo # The following queries returned nothing

SELECT * FROM t1 WHERE b = 9223372036854775808;
SELECT * FROM t1 WHERE b = 18446744073709551612;
SELECT * FROM t1 WHERE b = 18446744073709551615;
analyze table t1;
EXPLAIN SELECT * FROM t1 WHERE b = 9223372036854775808;
EXPLAIN SELECT * FROM t1 WHERE b = 18446744073709551612;
EXPLAIN SELECT * FROM t1 WHERE b = 18446744073709551615;
DROP TABLE t1;

#
# Bug#30822: crash when COALESCE
#
CREATE TABLE t1 (c1 INT)
  PARTITION BY HASH (c1)
  PARTITIONS 15;
INSERT INTO t1 VALUES (1), (2), (3), (4), (5);
ALTER TABLE t1 COALESCE PARTITION 13;
DROP TABLE t1;
CREATE TABLE t1 (c1 INT)
  PARTITION BY LINEAR HASH (c1)
  PARTITIONS 5;
INSERT INTO t1 VALUES (1), (2), (3), (4), (5);
ALTER TABLE t1 COALESCE PARTITION 3;
DROP TABLE t1;

#
# LINEAR HASH tests for ADD PARTITION
#
CREATE TABLE t1 (c1 INT)
  PARTITION BY LINEAR HASH (c1)
  PARTITIONS 3;
INSERT INTO t1 VALUES (1), (2), (3), (4), (5), (6), (7);
ALTER TABLE t1 ADD PARTITION PARTITIONS 2;
SELECT * FROM t1 ORDER BY c1;
ALTER TABLE t1 ADD PARTITION PARTITIONS 10;
SELECT * FROM t1 ORDER BY c1;
SHOW CREATE TABLE t1;
DROP TABLE t1;

#
# More partition pruning tests, especially on interval walking
#
create table t1 (a int unsigned)
partition by hash(a div 2)
partitions 4;
insert into t1 values (null),(0),(1),(2),(3),(4),(5),(6),(7);
select * from t1 where a < 0;
select * from t1 where a is null or (a >= 5 and a <= 7);
select * from t1 where a is null;
select * from t1 where a is not null;
select * from t1 where a >= 1 and a < 3;
select * from t1 where a >= 3 and a <= 5;
select * from t1 where a > 2 and a < 4;
select * from t1 where a > 3 and a <= 6;
select * from t1 where a > 5;
select * from t1 where a >= 1 and a <= 5;
analyze table t1;
explain select * from t1 where a < 0;
explain select * from t1 where a is null or (a >= 5 and a <= 7); 
explain select * from t1 where a is null;
explain select * from t1 where a is not null;
explain select * from t1 where a >= 1 and a < 3;
explain select * from t1 where a >= 3 and a <= 5;
explain select * from t1 where a > 2 and a < 4;
explain select * from t1 where a > 3 and a <= 6;
explain select * from t1 where a > 5;
explain select * from t1 where a >= 1 and a <= 5;

drop table t1;

#
# Partition by hash, basic
#
CREATE TABLE t1 (
a int not null,
b int not null,
c int not null,
primary key(a,b))
partition by hash (a + 2)
partitions 3
(partition x1,
 partition x2,
 partition x3);

insert into t1 values (1,1,1);
SHOW CREATE TABLE t1;
insert into t1 values (2,1,1);
insert into t1 values (3,1,1);
insert into t1 values (4,1,1);
insert into t1 values (5,1,1);

select * from t1;

update t1 set c=3 where b=1;
select * from t1;

select b from t1 where a=3;
select b,c from t1 where a=1 AND b=1;

delete from t1 where a=1;
delete from t1 where c=3;

select * from t1;

ALTER TABLE t1
partition by hash (a + 3)
partitions 3
(partition x1,
 partition x2,
 partition x3);
select * from t1;
SHOW CREATE TABLE t1;
drop table t1;

#
# Partition by hash, only one partition
#
CREATE TABLE t1 (
a int not null,
b int not null,
c int not null,
primary key(a,b))
partition by hash (a)
(partition x1);

drop table t1;
#
# Partition by key, only one partition
#
CREATE TABLE t1 (
a int not null,
b int not null,
c int not null,
primary key(a,b))
partition by key (a)
(partition x1);

drop table t1;

#
# Bug# 15968 - crash when INSERT with f1 = -1 into partition by hash(f1)
#
CREATE TABLE t1 (f1 INTEGER, f2 char(20)) PARTITION BY HASH(f1) PARTITIONS 2;
INSERT INTO t1 SET f1 = 0 - 1, f2 = '#######';
select * from t1;
drop table t1;

#
# BUG 18423 Hash partitioning can lose rows in some queries
#
create table t1 (c1 int DEFAULT NULL,
                 c2 varchar (30) DEFAULT NULL,
                 c3 date DEFAULT NULL)
partition by hash (to_days(c3))
partitions 12;

insert into t1 values
(136,'abc','2002-01-05'),(142,'abc','2002-02-14'),(162,'abc','2002-06-28'),
(182,'abc','2002-11-09'),(158,'abc','2002-06-01'),(184,'abc','2002-11-22');
select * from t1;
select * from t1 where c3 between '2002-01-01' and '2002-12-31';

drop table t1;

--echo #
--echo #
--echo #  BUG#22152229 - ASSERTION FAILED: RC == TYPE_OK, FILE .\DD\IMPL\RAW\RAW_RECORD.CC
--echo #
--echo #

SET NAMES utf8;
let $c= `SELECT UNHEX('C8')`;
--error ER_INVALID_CHARACTER_STRING
eval CREATE TABLE T (a INT) PARTITION BY HASH('$c') PARTITIONS 1;

CREATE TABLE T (a INT) ENGINE=InnoDB;
--error ER_INVALID_CHARACTER_STRING
eval ALTER TABLE T PARTITION BY HASH('$c') PARTITIONS 1;
DROP TABLE T;

SET NAMES default;

# Additional tests

--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings
CREATE TABLE t1 (c1 TINYINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 1;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 SMALLINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 1;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 MEDIUMINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 1;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 1;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INTEGER NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 1;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 BIGINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 1;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 TINYINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 1;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 SMALLINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 1;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 MEDIUMINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 1;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 1;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INTEGER NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 1;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 BIGINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 1;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 TINYINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 2;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 SMALLINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 2;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 MEDIUMINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 2;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 2;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INTEGER NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 2;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 BIGINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 2;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 TINYINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 2;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 SMALLINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 2;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 MEDIUMINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 2;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 2;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INTEGER NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 2;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 BIGINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 2;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 TINYINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 3;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 SMALLINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 3;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 MEDIUMINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 3;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 3;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INTEGER NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 3;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 BIGINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 3;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 TINYINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 3;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 SMALLINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 3;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 MEDIUMINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 3;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 3;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INTEGER NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 3;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 BIGINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 3;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 TINYINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 4;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 SMALLINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 4;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 MEDIUMINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 4;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 4;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INTEGER NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 4;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 BIGINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 4;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 TINYINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 4;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 SMALLINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 4;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 MEDIUMINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 4;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 4;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INTEGER NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 4;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 BIGINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 4;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 TINYINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 5;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 SMALLINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 5;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 MEDIUMINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 5;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 5;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INTEGER NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 5;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 BIGINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 5;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 TINYINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 5;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 SMALLINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 5;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 MEDIUMINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 5;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 5;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INTEGER NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 5;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 BIGINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 5;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 TINYINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 10;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 SMALLINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 10;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 MEDIUMINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 10;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 10;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INTEGER NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 10;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 BIGINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 10;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 TINYINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 10;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 SMALLINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 10;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 MEDIUMINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 10;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 10;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INTEGER NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 10;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 BIGINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 10;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 TINYINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 50;
SHOW TABLES; 
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 MEDIUMINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 50;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 50;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INTEGER NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 50;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 BIGINT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 50;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 TINYINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 50;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 SMALLINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 50;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 MEDIUMINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 50;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 50;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 INTEGER NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 50;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
CREATE TABLE t1 (c1 BIGINT NOT NULL, c2 CHAR(5)) PARTITION BY HASH(c1) PARTITIONS 50;
SHOW TABLES; 
 SHOW CREATE TABLE t1; DROP TABLE t1; SHOW TABLES;
