include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]
#
# Start group replication on server 1
# Execute a transaction and block before logging to the binlog.
#
[connection server1]
include/start_and_bootstrap_group_replication.inc
CREATE TABLE t1 (c1 INT NOT NULL AUTO_INCREMENT PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES (NULL);
SET @@GLOBAL.DEBUG='+d,group_replication_after_before_commit_hook';
INSERT INTO t1 VALUES (NULL);;
[connection server_1]
SET @@GLOBAL.DEBUG='-d,group_replication_after_before_commit_hook';
SET @@GLOBAL.DEBUG='+d,sql_int_wait_for_gtid_executed_no_timeout';
#
# Start group replication on server 2
# The server should block waiting for recovery
#
[connection server2]
START GROUP_REPLICATION;
include/gr_wait_for_member_state.inc
include/assert.inc [The member should still be recovering]
#
# Unblock local query wait on server 1
# Recovery should unblock on server 2
#
[connection server_1]
SET DEBUG_SYNC= "now SIGNAL signal.commit_continue";
SET @@GLOBAL.DEBUG='-d,sql_int_wait_for_gtid_executed_no_timeout';
[connection server2]
include/gr_wait_for_member_state.inc
#
# Add some more queries
# Restart server 2 and check all is fine.
#
[connection server1]
INSERT INTO t1 VALUES (NULL);
INSERT INTO t1 VALUES (NULL);
[connection server2]
include/stop_group_replication.inc
include/start_group_replication.inc
include/assert.inc [Table t1 will contain 3 rows]
[connection server1]
include/assert.inc [Table t1 will contain 3 rows]
DROP TABLE t1;
include/group_replication_end.inc
