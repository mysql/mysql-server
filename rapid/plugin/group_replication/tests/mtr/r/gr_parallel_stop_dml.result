include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]
[connection server1]
CREATE TABLE t1 (c1 INT PRIMARY KEY);
include/rpl_sync.inc
# Add a debug sync point in the code.
[connection server_1]
SET @@GLOBAL.DEBUG= @debug_save;
SET @@GLOBAL.DEBUG= 'd,group_replication_after_recovery_module_terminated';
STOP GROUP_REPLICATION;
# Inserting the DML which was causing crash.
[connection server1]
INSERT INTO t1 VALUES(1);
[connection server_1_1]
# Signal the waiting thread on connection server_1 to resume.
SET DEBUG_SYNC= "now SIGNAL signal.termination_continue";
SET @@GLOBAL.DEBUG= @debug_save;
[connection server_1]
# Asserting that the member here is offline.
include/gr_wait_for_member_state.inc
# Asserting that only 1 member exists in the group.
[connection server2]
include/rpl_gr_wait_for_number_of_members.inc
[connection server1]
# Asserting that 1 row exist in the table on server1.
include/assert.inc [The table should have 1 row inserted.]
# Asserting that no row exist in table t1 on server2.
[connection server2]
include/assert.inc [The table should have 0 row inserted.]
include/stop_group_replication.inc
[connection server1]
include/start_and_bootstrap_group_replication.inc
[connection server2]
include/start_group_replication.inc
include/diff_tables.inc [server1:test.t1, server2:test.t1]
# Cleanup
DROP TABLE t1;
include/group_replication_end.inc
