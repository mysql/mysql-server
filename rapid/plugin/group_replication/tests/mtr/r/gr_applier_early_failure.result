include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]
#
# 1. Create a table on server 1 and replicate
#
[connection server1]
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;
include/rpl_sync.inc
#
# 2. Insert a row on server 2 with log to the binlog disabled
#
[connection server2]
SET SESSION sql_log_bin= 0;
INSERT INTO t1 VALUES (1);
SET SESSION sql_log_bin= 1;
#
# 3. Write the same query in server 1
# On server 2 the duplicated key will make the applier fail.
# Server 2 will leave
#
[connection server1]
INSERT INTO t1 VALUES (1);
[connection server2]
# Expect ERROR state.
include/gr_wait_for_member_state.inc
#
# 4. Stop server 2 and start it again. One of three things can happen:
#  A. The applier fails after the join and the member leaves the group
#     but the START GROUP_REPLICATION command does not fail
#  B. The applier fails after initialization and sets the state to ERROR,
#     making the group join fail that makes the START GROUP_REPLICATION
#     command fail with a generic ER_GROUP_REPLICATION_CONFIGURATION.
#  C. The applier fails and its initialization processes catches the error.
#     During the start, it is known that the applier failed so the START
#     GROUP_REPLICATION fails with: ER_GROUP_REPLICATION_APPLIER_INIT_ERROR
#
include/stop_group_replication.inc
START GROUP_REPLICATION;
#
# 5. Verify that member is offline after stop
#
include/stop_group_replication.inc
include/gr_wait_for_member_state.inc
#
# 6. Clean up
#
DROP TABLE t1;
SET SESSION sql_log_bin= 0;
call mtr.add_suppression("Unable to initialize the Group Replication applier module.");
call mtr.add_suppression("The applier thread execution was aborted. Unable to process more transactions, this member will now leave the group.");
call mtr.add_suppression("Fatal error during execution on the Applier process of Group Replication. The server will now leave the group.");
call mtr.add_suppression("The server was automatically set into read only mode after an error was detected.");
call mtr.add_suppression("Unable to confirm whether the server has left the group or not. Check *.*");
call mtr.add_suppression("Skipping leave operation: concurrent attempt to leave the group is on-going.");
call mtr.add_suppression("Slave SQL for channel 'group_replication_applier': Could not execute Write_rows event on table");
call mtr.add_suppression("Error writing relay log configuration.");
call mtr.add_suppression("There was a previous plugin error while the member joined the group. The member will now exit the group.");
call mtr.add_suppression("Slave SQL for channel 'group_replication_applier': Worker [0-9] failed executing transaction*");
call mtr.add_suppression("Slave SQL for channel 'group_replication_applier': ... The slave coordinator and worker threads are stopped,*");
call mtr.add_suppression("Can't evaluate the group replication applier execution status. Group replication recovery will shutdown to avoid data corruption.");
call mtr.add_suppression("Fatal error during the Recovery process of Group Replication. The server will leave the group.");
call mtr.add_suppression("It was not possible to identify the group replication applier thread");
call mtr.add_suppression("Error on group communication engine start");
SET SESSION sql_log_bin= 1;
[connection server1]
include/stop_group_replication.inc
DROP TABLE t1;
include/group_replication_end.inc
