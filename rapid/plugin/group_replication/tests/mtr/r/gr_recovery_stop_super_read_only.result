include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]
# Start a 2 server group
include/start_and_bootstrap_group_replication.inc
CREATE TABLE t1 (a INT NOT NULL AUTO_INCREMENT PRIMARY KEY , b INT);
include/start_group_replication.inc

# Restart group replication on server 2 inducing a failure on recovery
include/stop_group_replication.inc
set session sql_log_bin=0;
call mtr.add_suppression("There was an error when connecting to the donor*");
call mtr.add_suppression("Maximum number of retries when*");
call mtr.add_suppression("Fatal error during the Recovery process of Group Replication.*");
call mtr.add_suppression("Transaction cannot be executed while Group Replication is OFFLINE.*");
call mtr.add_suppression("Run function 'before_commit' in plugin 'group_replication' failed");
call mtr.add_suppression("The member is leaving a group without being on one");
call mtr.add_suppression("The member is already leaving or joining a group.");
call mtr.add_suppression("Error leaving the group");
call mtr.add_suppression("Skipping leave operation: concurrent attempt to leave the group is on-going.");
set session sql_log_bin=1;
CHANGE MASTER TO MASTER_USER='dummy_user' FOR CHANNEL 'group_replication_recovery';
SET @debug_save_retries= @@GLOBAL.group_replication_recovery_retry_count;
SET GLOBAL group_replication_recovery_retry_count= 1;
SET GLOBAL group_replication_group_name= "a1e87f30-b156-11e4-ab27-072800479365";
START GROUP_REPLICATION;

# When we try to execute a transaction on the server, it should fail as
# the server is running in the super-read-only mode
include/gr_wait_for_member_state.inc
INSERT INTO t1 (b) VALUES (1);
ERROR HY000: The MySQL server is running with the --super-read-only option so it cannot execute this statement

# Execute STOP GROUP_REPLICATION and this should reset the
# super_read_only mode.
STOP GROUP_REPLICATION;
# The server's super_read_only mode should be 0 here.
include/assert.inc [The super_read_only mode should be 0 here.]

# Query execution should pass now
INSERT INTO t1 (b) VALUES (1);

# Cleanup
DROP TABLE t1;
CHANGE MASTER TO MASTER_USER='root' FOR CHANNEL 'group_replication_recovery';
SET @@GLOBAL.group_replication_recovery_retry_count= @debug_save_retries;
DROP TABLE t1;
include/group_replication_end.inc
