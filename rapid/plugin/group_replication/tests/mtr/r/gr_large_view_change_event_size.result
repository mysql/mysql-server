include/group_replication.inc [rpl_server_count=3]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]
#
# Reduce the max_allowed_packet value to just 1MB
#
[connection server1]
SET @start_global_value_s1 = @@global.max_allowed_packet;
SET @@global.max_allowed_packet = 1024*512;
[connection server2]
SET @start_global_value_s2 = @@global.max_allowed_packet;
SET @@global.max_allowed_packet = 1024*512;
#
# Initiate a 2 member group
# Make sure the certification garbage collector is not executed
#
[connection server1]
SET @@GLOBAL.DEBUG= '+d,group_replication_certifier_broadcast_thread_big_period';
include/start_and_bootstrap_group_replication.inc
[connection server2]
SET @@GLOBAL.DEBUG= '+d,group_replication_certifier_broadcast_thread_big_period';
include/start_group_replication.inc
#
# Insert queries on both members.
#
[connection server1]
CREATE TABLE test.mytable (f1 INT NOT NULL AUTO_INCREMENT PRIMARY KEY, f2 VARCHAR(100)) ENGINE=InnoDB;
include/rpl_sync.inc
SET SESSION sql_log_bin= 0;
CREATE EVENT IF NOT EXISTS test.event1
ON SCHEDULE AT CURRENT_TIMESTAMP + INTERVAL 1 SECOND
ON COMPLETION PRESERVE
DISABLE
DO
BEGIN
DECLARE v INTEGER;
SET v=0;
WHILE v < 3900
DO
INSERT INTO test.mytable (f2) VALUES (CONCAT('testing data from ' , @@hostname, @@port));
SET v = v+1;
END WHILE;
END//
SET SESSION sql_log_bin= 1;
[connection server2]
SET SESSION sql_log_bin= 0;
CREATE EVENT IF NOT EXISTS test.event2
ON SCHEDULE AT CURRENT_TIMESTAMP + INTERVAL 1 SECOND
ON COMPLETION PRESERVE
DISABLE
DO
BEGIN
DECLARE v INTEGER;
SET v=0;
WHILE v < 3900
DO
INSERT INTO test.mytable (f2) VALUES (CONCAT('testing data from ' , @@hostname, @@port));
SET v = v+1;
END WHILE;
END//
SET SESSION sql_log_bin= 1;
[connection server1]
SET GLOBAL event_scheduler=on;
SET SESSION sql_log_bin= 0;
ALTER EVENT event1 ENABLE;
SET SESSION sql_log_bin= 1;
[connection server2]
SET GLOBAL event_scheduler=on;
SET SESSION sql_log_bin= 0;
ALTER EVENT event2 ENABLE;
SET SESSION sql_log_bin= 1;
[connection server1]
#
# Start member 3
# The certification info transmitted to member 3 should be below 1 MB
#
[connection server3]
include/start_group_replication.inc
#
# Test everything is fine
#
INSERT INTO test.mytable (f2) VALUES (CONCAT('testing data from ' , @@hostname, @@port));
include/rpl_sync.inc
[connection server1]
include/assert.inc ['There are 7801 values in the table']
[connection server2]
include/assert.inc ['There are 7801 values in the table']
#
# Cleanup
#
[connection server1]
SET SESSION sql_log_bin= 0;
ALTER EVENT event1 DISABLE;
DROP EVENT IF EXISTS test.event1;
SET SESSION sql_log_bin= 1;
SET GLOBAL event_scheduler=off;
SET @@GLOBAL.DEBUG= '-d,group_replication_certifier_broadcast_thread_big_period';
SET @@global.max_allowed_packet = @start_global_value_s1;
[connection server2]
SET SESSION sql_log_bin= 0;
ALTER EVENT event2 DISABLE;
DROP EVENT IF EXISTS test.event2;
SET SESSION sql_log_bin= 1;
SET GLOBAL event_scheduler=off;
SET @@GLOBAL.DEBUG= '-d,group_replication_certifier_broadcast_thread_big_period';
SET @@global.max_allowed_packet = @start_global_value_s2;
[connection server1]
DROP TABLE mytable;
include/group_replication_end.inc
