include/group_replication.inc [rpl_server_count=3]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]
[connection server1]
SET SESSION sql_log_bin=0;
call mtr.add_suppression("\\[Warning\\] InnoDB: Database page corruption or a failed file read of page");
SET SESSION sql_log_bin=1;
SET sql_log_bin=0;
CREATE TABLE t1(a int primary key);
SET sql_log_bin=1;
include/start_and_bootstrap_group_replication.inc
[connection server2]
SET sql_log_bin=0;
CREATE TABLE t1(a int primary key);
SET sql_log_bin=1;
include/start_group_replication.inc
[connection server1]
CREATE PROCEDURE dml_operations()
BEGIN
declare x INT;
set x=1;
while x<600 do
insert into t1 values (x);
update t1 set a=x+600 where a=x;
delete from t1 where a<650;
set x=x+1;
end  while;
end$$

----call procedure----
call dml_operations();

include/rpl_sync.inc
[connection server3]
SET sql_log_bin=0;
CREATE TABLE t1(a int primary key);
SET sql_log_bin=1;
LOCK TABLES t1 READ;
[connection server_3]
SET SESSION sql_log_bin= 0;
call mtr.add_suppression("Plugin group_replication reported: 'There was an error when connecting to the donor server. Check group replication *");
call mtr.add_suppression("Slave I/O for channel 'group_replication_recovery': Master command COM_REGISTER_SLAVE failed: failed registering on master, reconnecting to try again.*");
SET SESSION sql_log_bin= 1;
include/start_group_replication.inc
[connection server_3]
[connection server3]
UNLOCK TABLES;
# Kill and restart:--group_replication_local_address=GROUP_REPLICATION_LOCAL_ADDRESS --group_replication_group_seeds=GROUP_REPLICATION_GROUP_SEEDS --group_replication_group_name=GROUP_REPLICATION_GROUP_NAME
include/rpl_reconnect.inc
LOCK TABLES t1 READ;
include/start_group_replication.inc
[connection server_3]
[connection server3]
UNLOCK TABLES;
# Kill and restart:--group_replication_local_address=GROUP_REPLICATION_LOCAL_ADDRESS --group_replication_group_seeds=GROUP_REPLICATION_GROUP_SEEDS --group_replication_group_name=GROUP_REPLICATION_GROUP_NAME
include/rpl_reconnect.inc
LOCK TABLES t1 READ;
include/start_group_replication.inc
[connection server_3]
[connection server3]
UNLOCK TABLES;
# Kill and restart:--group_replication_local_address=GROUP_REPLICATION_LOCAL_ADDRESS --group_replication_group_seeds=GROUP_REPLICATION_GROUP_SEEDS --group_replication_group_name=GROUP_REPLICATION_GROUP_NAME
include/rpl_reconnect.inc
LOCK TABLES t1 READ;
include/start_group_replication.inc
[connection server_3]
[connection server3]
UNLOCK TABLES;
# Kill and restart:--group_replication_local_address=GROUP_REPLICATION_LOCAL_ADDRESS --group_replication_group_seeds=GROUP_REPLICATION_GROUP_SEEDS --group_replication_group_name=GROUP_REPLICATION_GROUP_NAME
include/rpl_reconnect.inc
LOCK TABLES t1 READ;
include/start_group_replication.inc
[connection server_3]
[connection server3]
UNLOCK TABLES;
# Kill and restart:--group_replication_local_address=GROUP_REPLICATION_LOCAL_ADDRESS --group_replication_group_seeds=GROUP_REPLICATION_GROUP_SEEDS --group_replication_group_name=GROUP_REPLICATION_GROUP_NAME
include/rpl_reconnect.inc
LOCK TABLES t1 READ;
include/start_group_replication.inc
[connection server3]
UNLOCK TABLES;
include/rpl_sync.inc
include/diff_tables.inc [server1:t1, server2:t1, server3:t1]
drop table t1;
drop procedure dml_operations;
include/group_replication_end.inc
