include/group_replication.inc [rpl_server_count=3]
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]
SET @debug_save= @@GLOBAL.DEBUG;
#
# 1) Setup a new single member group
#
server1
# Set the debug flag to block recovery
SET @@GLOBAL.DEBUG='d,recovery_thread_wait_before_finish';
# Member should be offline before start
include/assert.inc [On the new stopped member, the status is OFFLINE]
include/start_and_bootstrap_group_replication.inc
# Member should be online as the member is alone and doesn't need recovery
include/gr_wait_for_member_state.inc
#
# 2) A new member enters the existing group
#
STOP SLAVE SQL_THREAD FOR CHANNEL "group_replication_applier";
server2
# Set the debug flag to block recovery
SET GLOBAL group_replication_group_name= "89ab83b0-9f17-11e3-a5e2-0800200c9a66";
START GROUP_REPLICATION;
# Member should be marked as on recovery on both members
include/gr_wait_for_member_state.inc
server1
include/gr_wait_for_member_state.inc
START SLAVE SQL_THREAD FOR CHANNEL "group_replication_applier";
server2
# Member should be marked as online on both members
include/gr_wait_for_member_state.inc
server1
include/gr_wait_for_member_state.inc
#
# 3) A member leaves the existing group
#
# Add a new member to hold quorum
server3
include/start_group_replication.inc
# Member should be marked as online
include/gr_wait_for_member_state.inc
include/stop_group_replication.inc
# Member should be marked as offline after stop
include/gr_wait_for_member_state.inc
#
# Cleaning up
#
server3
SET @@GLOBAL.DEBUG= @debug_save;
server2
SET @@GLOBAL.DEBUG= @debug_save;
server1
SET @@GLOBAL.DEBUG= @debug_save;
include/group_replication_end.inc
