################################################################################
# Verify that parallel applier type cannot be changed to DATABASE on
# group_replication_applier channel when stopping and starting
# applier.
#
# Test:
# 0. The test requires one server.
#  - With member ONLINE. Check that default slave parallel type is DATABASE and
#    slave parallel workers is 0.
# 1. Stop applier thread. Test with default SLAVE_PARALLEL_TYPE and
#    SLAVE_PARALLEL_WORKERS > 0. Start applier thread should fail.
# 2. Stop applier thread. Test with SLAVE_PARALLEL_TYPE=DATABASE and
#    SLAVE_PARALLEL_WORKERS > 0. Start applier thread should fail.
# 3. Stop applier thread. Test with SLAVE_PARALLEL_TYPE=LOGICAL_CLOCK and
#    SLAVE_PARALLEL_WORKERS > 0. Start applier thread should fail.
# 4. Stop applier thread. Test with SLAVE_PARALLEL_TYPE=LOGICAL_CLOCK,
#    SLAVE_PARALLEL_WORKERS > 0 and SLAVE_PRESERVE_COMMIT_ORDER=ON.
#    Start applier thread should succeed.
# 5. Stop applier thread. Test with SLAVE_PARALLEL_TYPE=LOGICAL_CLOCK and
#    SLAVE_PARALLEL_WORKERS = 0. Start applier thread should succeed.
# 6. Stop applier thread. Test with default SLAVE_PARALLEL_TYPE and default
#    SLAVE_PARALLEL_WORKERS. Start applier thread should succeed.
################################################################################
--source include/not_mts_slave_parallel_workers.inc
--source ../inc/have_group_replication_plugin.inc
--source ../inc/group_replication.inc

# If these assert fails there is no point in continue the test,
# since it relies on DATABASE as default value.
--let $assert_text= Default slave parallel type must be DATABASE
--let $assert_cond= "[SELECT @@GLOBAL.SLAVE_PARALLEL_TYPE]" = "DATABASE"
--source include/assert.inc

--let $assert_text= Default slave parallel workers must be 0
--let $assert_cond= [SELECT @@GLOBAL.SLAVE_PARALLEL_WORKERS] = 0
--source include/assert.inc

# Save defaults.
SET @slave_parallel_type_saved= @@GLOBAL.SLAVE_PARALLEL_TYPE;
SET @slave_parallel_workers_saved= @@GLOBAL.SLAVE_PARALLEL_WORKERS;
SET @slave_preserver_commit_order_saved= @@GLOBAL.SLAVE_PRESERVE_COMMIT_ORDER;
SET GLOBAL SLAVE_PRESERVE_COMMIT_ORDER= OFF;

--echo
--echo ############################################################
--echo # 1. Test with SLAVE_PARALLEL_TYPE default value and
--echo #    parallel workers number set to 4.
STOP SLAVE SQL_THREAD FOR CHANNEL "group_replication_applier";
SET GLOBAL SLAVE_PARALLEL_WORKERS=4;
--error ER_SLAVE_CHANNEL_OPERATION_NOT_ALLOWED
START SLAVE SQL_THREAD FOR CHANNEL "group_replication_applier";

--echo
--echo ############################################################
--echo # 2. Test with SLAVE_PARALLEL_TYPE set to DATABASE and
--echo #    parallel workers number set to 4.
STOP SLAVE SQL_THREAD FOR CHANNEL "group_replication_applier";
SET @@GLOBAL.SLAVE_PARALLEL_TYPE= "DATABASE";
SET GLOBAL SLAVE_PARALLEL_WORKERS= 4;
--error ER_SLAVE_CHANNEL_OPERATION_NOT_ALLOWED
START SLAVE SQL_THREAD FOR CHANNEL "group_replication_applier";

--echo
--echo ############################################################
--echo # 3. Test with SLAVE_PARALLEL_TYPE set to LOGICAL_CLOCK and
--echo #    parallel workers number set to 4.
STOP SLAVE SQL_THREAD FOR CHANNEL "group_replication_applier";
SET @@GLOBAL.SLAVE_PARALLEL_TYPE= "LOGICAL_CLOCK";
SET GLOBAL SLAVE_PARALLEL_WORKERS= 4;
--error ER_SLAVE_CHANNEL_OPERATION_NOT_ALLOWED
START SLAVE SQL_THREAD FOR CHANNEL "group_replication_applier";

--echo
--echo ############################################################
--echo # 4. Test with SLAVE_PARALLEL_TYPE set to LOGICAL_CLOCK,
--echo #    parallel workers number set to 4 and
--echo #    SLAVE_PRESERVE_COMMIT_ORDER set to ON.
STOP SLAVE SQL_THREAD FOR CHANNEL "group_replication_applier";
SET @@GLOBAL.SLAVE_PARALLEL_TYPE= "LOGICAL_CLOCK";
SET GLOBAL SLAVE_PARALLEL_WORKERS= 4;
SET GLOBAL SLAVE_PRESERVE_COMMIT_ORDER= ON;
START SLAVE SQL_THREAD FOR CHANNEL "group_replication_applier";

--echo
--echo ############################################################
--echo # 5. Test with SLAVE_PARALLEL_TYPE set to LOGICAL_CLOCK and
--echo #    parallel workers number set to 0.
STOP SLAVE SQL_THREAD FOR CHANNEL "group_replication_applier";
SET @@GLOBAL.SLAVE_PARALLEL_TYPE= "LOGICAL_CLOCK";
SET GLOBAL SLAVE_PARALLEL_WORKERS= 0;
START SLAVE SQL_THREAD FOR CHANNEL "group_replication_applier";

--echo
--echo ############################################################
--echo # 6. Test with SLAVE_PARALLEL_TYPE default value and default
--echo #    parallel workers number.
STOP SLAVE SQL_THREAD FOR CHANNEL "group_replication_applier";
SET @@GLOBAL.SLAVE_PARALLEL_TYPE= @slave_parallel_type_saved;
SET @@GLOBAL.SLAVE_PARALLEL_WORKERS= @slave_parallel_workers_saved;
SET @@GLOBAL.SLAVE_PRESERVE_COMMIT_ORDER= @slave_preserver_commit_order_saved;
START SLAVE SQL_THREAD FOR CHANNEL "group_replication_applier";

--source ../inc/group_replication_end.inc
