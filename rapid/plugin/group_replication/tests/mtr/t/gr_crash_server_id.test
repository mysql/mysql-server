################################################################################
# This test verifies that server doesn't crashes on setting server_id=0.
#
# Test:
# 0. The test requires two servers: M1 and M2.
# 1. On M1 START GR cmd should error out when server_id=0.
# 2. On M1 START GR cmd should work fine when setting it back to server_id=1.
# 3. On M1 insert some data. Validate that same data is present on M2 as well.
################################################################################

--source ../inc/have_group_replication_plugin.inc
--source ../inc/group_replication.inc

--echo
--echo [SERVER1]
--connection server1
--source include/stop_group_replication.inc

SET SESSION sql_log_bin=0;
call mtr.add_suppression("Server id not set, will not start slave for channel 'group_replication_applier'");
call mtr.add_suppression("Error while starting the group replication applier thread");
call mtr.add_suppression("Unable to initialize the Group Replication applier module.");
call mtr.add_suppression("The member is leaving a group without being on one");
call mtr.add_suppression("It was not possible to identify the group replication applier thread");
SET SESSION sql_log_bin=1;

SET GLOBAL server_id=0;
--error ER_BAD_SLAVE, ER_GROUP_REPLICATION_APPLIER_INIT_ERROR
START GROUP_REPLICATION;

--let $skip_assert_read_only= 1
--source include/stop_group_replication.inc

SET GLOBAL server_id=1;
--source include/start_group_replication.inc
CREATE TABLE t1(c1 INT PRIMARY KEY);
INSERT INTO t1 VALUES(1);
INSERT INTO t1 VALUES(2);

# sync all members
--source include/rpl_sync.inc

# Validate members state is equal.
--let $diff_tables= server1:t1, server2:t1
--source include/diff_tables.inc

DROP TABLE t1;
--source ../inc/group_replication_end.inc
