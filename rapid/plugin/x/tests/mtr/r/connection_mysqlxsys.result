SELECT password_last_changed into @passwordchanged from mysql.user where host='localhost' and user='root';
call mtr.add_suppression("Plugin mysqlx reported: .Failed at SSL configuration: .SSL context is not usable without certificate and private key..");
call mtr.add_suppression("Plugin mysqlx reported: .SSL_CTX_load_verify_locations failed.");
call mtr.add_suppression("Plugin mysqlx reported: 'Unable to switch context to user mysqlxsys'");
call mtr.add_suppression("Plugin mysqlx reported: 'Unable to switch security context to root'");
call mtr.add_suppression("Plugin mysqlx reported: 'DROP USER mysqlxsys@localhost: Operation DROP USER failed for 'mysqlxsys'@'localhost''");
call mtr.add_suppression("Plugin mysqlx reported: 'mysqlxsys@localhost account already exists but does not have the expected grants'");
call mtr.add_suppression("Plugin mysqlx reported: 'Authentication account could not be created, mysqlx plugin will be inaccessible.'");
call mtr.add_suppression("Plugin mysqlx reported: '1.1: Unsuccessful login attempt");
call mtr.add_suppression("Plugin mysqlx reported: '2.1: Unsuccessful login attempt: Unable to switch context to user mysqlxsys");
call mtr.add_suppression("Plugin mysqlx reported: 'Delayed startup failed. Plugin is unable to accept connections.'");
call mtr.add_suppression("Password for mysqlxsys@localhost account has been expired");
call mtr.add_suppression("Can't setup mysqlxsys@localhost account - root password expired");
============================================
check that the mysqlxsys@localhost account does not exist initially
select if(count(*)=0, 'OK', 'FAIL') from mysql.user where user='mysqlxsys' and host='localhost';
if(count(*)=0, 'OK', 'FAIL')
OK
Install plugin, ensure that account got created
install plugin mysqlx soname "mysqlx.so";
Mysqlx.Ok {
  msg: "bye!"
}
ok
select if(count(*)=1, 'OK', 'FAIL') from mysql.user where user='mysqlxsys' and host='localhost';
if(count(*)=1, 'OK', 'FAIL')
OK
show grants for mysqlxsys@localhost;
Grants for mysqlxsys@localhost
GRANT SUPER ON *.* TO 'mysqlxsys'@'localhost'
GRANT SELECT ON `mysql`.`user` TO 'mysqlxsys'@'localhost'
Uninstall plugin, ensure it got removed
uninstall plugin mysqlx;
select if(count(*)=0, 'OK', 'FAIL') from mysql.user where user='mysqlxsys' and host='localhost';
if(count(*)=0, 'OK', 'FAIL')
OK
Delete our account by hand and try to login (should fail but not crash)
install plugin mysqlx soname "mysqlx.so";
Mysqlx.Ok {
  msg: "bye!"
}
ok
drop user mysqlxsys@localhost;
in main, line 0:ERROR: Unable to switch context to user mysqlxsys (code 1045)
not ok
Uninstall plugin with our account gone (see if cleanup works ok)
uninstall plugin mysqlx;
With plugin uninstalled, create a bogus account with same name and see what happens after reinstall (plugin should error out)
create user mysqlxsys@localhost;
grant insert on mysql.user to mysqlxsys@localhost;
install plugin mysqlx soname "mysqlx.so";
select sleep(1);
sleep(1)
0
expect connection error now
ERROR: Connection refused connecting to HOST:PORT
Uninstall the plugin, the account shouldnt be dropped, since its not ours
uninstall plugin mysqlx;
show grants for mysqlxsys@localhost;
Grants for mysqlxsys@localhost
GRANT USAGE ON *.* TO 'mysqlxsys'@'localhost'
GRANT INSERT ON `mysql`.`user` TO 'mysqlxsys'@'localhost'
select if(count(*)=1, 'OK', 'FAIL') from mysql.user where user='mysqlxsys' and host='localhost';
if(count(*)=1, 'OK', 'FAIL')
OK
Create a pre-existing suitable account
drop user mysqlxsys@localhost;
create user mysqlxsys@localhost;
grant ALL on *.* to mysqlxsys@localhost;
grant SUPER on *.* to mysqlxsys@localhost;
install plugin mysqlx soname "mysqlx.so";
select sleep(1);
sleep(1)
0
Mysqlx.Ok {
  msg: "bye!"
}
ok
Uninstall plugin, account is not ours, so dont drop it
uninstall plugin mysqlx;
select if(count(*)=1, 'OK', 'FAIL') from mysql.user where user='mysqlxsys' and host='localhost';
if(count(*)=1, 'OK', 'FAIL')
FAIL
Expire our account and see what happens (login should fail)
install plugin mysqlx soname "mysqlx.so";
Mysqlx.Ok {
  msg: "bye!"
}
ok
alter user mysqlxsys@localhost password expire;
in main, line 0:ERROR: Password for mysqlxsys@localhost account has been expired (code 1045)
not ok
uninstall plugin mysqlx;
Start mysqlxplugin with existing mysqlxsys account with expired password
CREATE USER mysqlxsys@localhost;
GRANT SELECT ON mysql.user TO mysqlxsys@localhost;
GRANT SUPER ON *.* TO mysqlxsys@localhost;
ALTER USER mysqlxsys@localhost PASSWORD EXPIRE;
install plugin mysqlx soname "mysqlx.so";
in main, line 0:ERROR: Password for mysqlxsys@localhost account has been expired (code 1045)
not ok
UNINSTALL PLUGIN mysqlx;
Start mysqlxplugin with existing mysqlxsys account with expired password and no priv
CREATE USER mysqlxsys@localhost;
ALTER USER mysqlxsys@localhost PASSWORD EXPIRE;
install plugin mysqlx soname "mysqlx.so";
in main, line 0:ERROR: Password for mysqlxsys@localhost account has been expired (code 1045)
not ok
UNINSTALL PLUGIN mysqlx;
Start mysqlxplugin with existing mysqlxsys account without priv
plugin should add missing permission to this account (continue installation)
it is required because in prevous ran the creation of mysqlxsys could be stopped
in middle leaving the account without permissions
CREATE USER mysqlxsys@localhost;
install plugin mysqlx soname "mysqlx.so";
Mysqlx.Ok {
  msg: "bye!"
}
ok
UNINSTALL PLUGIN mysqlx;
Start mysqlxplugin with existing mysqlxsys account with expired password and root user with
expired password. Xplugin shouldn't open TCP port for listening
CREATE USER 'super_user'@'localhost' IDENTIFIED BY '';
GRANT ALL PRIVILEGES ON *.* TO 'super_user'@'localhost' WITH GRANT OPTION;
CREATE USER mysqlxsys@localhost;
GRANT SELECT ON mysql.user TO mysqlxsys@localhost;
GRANT SUPER ON *.* TO mysqlxsys@localhost;
ALTER USER mysqlxsys@localhost PASSWORD EXPIRE;
ALTER USER root@localhost PASSWORD EXPIRE;
INSTALL PLUGIN mysqlx SONAME "mysqlx.so";
ERROR: Connection refused connecting to HOST:PORT
UNINSTALL PLUGIN mysqlx;
SET PASSWORD FOR root@localhost = '';
UPDATE mysql.user SET password_last_changed = @passwordchanged where host='localhost' and user='root';
FLUSH PRIVILEGES;
DROP USER IF EXISTS 'super_user'@'localhost';
DROP USER IF EXISTS mysqlxsys@localhost;
