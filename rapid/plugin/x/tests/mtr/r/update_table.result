install plugin mysqlx soname "mysqlx.so";
call mtr.add_suppression("Plugin mysqlx reported: .Failed at SSL configuration: .SSL context is not usable without certificate and private key..");
call mtr.add_suppression("Plugin mysqlx reported: .SSL_CTX_load_verify_locations failed.");
CREATE DATABASE `ytest`;
RUN drop schema if exists xtest

0 rows affected
RUN create schema xtest

1 rows affected
RUN create table xtest.xtable_ (id int primary key, name varchar(40), price decimal(5,2))

0 rows affected
RUN insert into xtest.xtable_ values (1, 'banana', 1.20)

1 rows affected
RUN insert into xtest.xtable_ values (2, 'apple', 0.25)

1 rows affected
RUN insert into xtest.xtable_ values (3, 'tomato', 1.80)

1 rows affected
RUN insert into xtest.xtable_ values (4, 'mango', 3.14)

1 rows affected
RUN insert into xtest.xtable_ values (5, 'orange', 0.90)

1 rows affected
RUN drop table if exists xtest.xtable

0 rows affected
RUN create table xtest.xtable as select * from xtest.xtable_

5 rows affected
Records: 5  Duplicates: 0  Warnings: 0
Rel: Update a valid row
send Mysqlx.Crud.Update {
  collection {
    name: "xtable"
    schema: "xtest"
  }
  data_model: TABLE
  criteria {
    type: OPERATOR
    operator {
      name: "=="
      param {
        type: IDENT
        identifier {
          name: "name"
        }
      }
      param {
        type: LITERAL
        literal {
          type: V_OCTETS
          v_octets {
            value: "banana"
          }
        }
      }
    }
  }
  operation {
    source {
      name: "name"
    }
    operation: SET
    value {
      type: LITERAL
      literal {
        type: V_STRING
        v_string {
          value: "lemon"
        }
      }
    }
  }
}


1 rows affected
Rows matched: 1  Changed: 1  Warnings: 0
RUN select * from xtest.xtable
id	name	price
1	lemon	1.20
2	apple	0.25
3	tomato	1.80
4	mango	3.14
5	orange	0.90
0 rows affected
RUN drop table if exists xtest.xtable

0 rows affected
RUN create table xtest.xtable as select * from xtest.xtable_

5 rows affected
Records: 5  Duplicates: 0  Warnings: 0
Rel: Update non-existing row
send Mysqlx.Crud.Update {
  collection {
    name: "xtable"
    schema: "xtest"
  }
  data_model: TABLE
  criteria {
    type: OPERATOR
    operator {
      name: "=="
      param {
        type: IDENT
        identifier {
          name: "name"
        }
      }
      param {
        type: LITERAL
        literal {
          type: V_OCTETS
          v_octets {
            value: "lemon"
          }
        }
      }
    }
  }
  operation {
    source {
      name: "name"
    }
    operation: SET
    value {
      type: LITERAL
      literal {
        type: V_STRING
        v_string {
          value: "lemon"
        }
      }
    }
  }
}


0 rows affected
Rows matched: 0  Changed: 0  Warnings: 0
RUN select * from xtest.xtable
id	name	price
1	banana	1.20
2	apple	0.25
3	tomato	1.80
4	mango	3.14
5	orange	0.90
0 rows affected
RUN drop table if exists xtest.xtable

0 rows affected
RUN create table xtest.xtable as select * from xtest.xtable_

5 rows affected
Records: 5  Duplicates: 0  Warnings: 0
Rel: Update multiple rows
send Mysqlx.Crud.Update {
  collection {
    name: "xtable"
    schema: "xtest"
  }
  data_model: TABLE
  criteria {
    type: OPERATOR
    operator {
      name: ">"
      param {
        type: IDENT
        identifier {
          name: "price"
        }
      }
      param {
        type: LITERAL
        literal {
          type: V_DOUBLE
          v_double: 1
        }
      }
    }
  }
  operation {
    source {
      name: "name"
    }
    operation: SET
    value {
      type: LITERAL
      literal {
        type: V_STRING
        v_string {
          value: "lemon"
        }
      }
    }
  }
}


3 rows affected
Rows matched: 3  Changed: 3  Warnings: 0
RUN select * from xtest.xtable
id	name	price
1	lemon	1.20
2	apple	0.25
3	lemon	1.80
4	lemon	3.14
5	orange	0.90
0 rows affected
RUN drop table if exists xtest.xtable

0 rows affected
RUN create table xtest.xtable as select * from xtest.xtable_

5 rows affected
Records: 5  Duplicates: 0  Warnings: 0
Rel: Update all rows (no criteria)
send Mysqlx.Crud.Update {
  collection {
    name: "xtable"
    schema: "xtest"
  }
  data_model: TABLE
  operation {
    source {
      name: "name"
    }
    operation: SET
    value {
      type: LITERAL
      literal {
        type: V_STRING
        v_string {
          value: "lemon"
        }
      }
    }
  }
}


5 rows affected
Rows matched: 5  Changed: 5  Warnings: 0
RUN select * from xtest.xtable
id	name	price
1	lemon	1.20
2	lemon	0.25
3	lemon	1.80
4	lemon	3.14
5	lemon	0.90
0 rows affected
RUN drop table if exists xtest.xtable

0 rows affected
RUN create table xtest.xtable as select * from xtest.xtable_

5 rows affected
Records: 5  Duplicates: 0  Warnings: 0
Rel: Update two first rows in desc order
send Mysqlx.Crud.Update {
  collection {
    name: "xtable"
    schema: "xtest"
  }
  data_model: TABLE
  criteria {
    type: OPERATOR
    operator {
      name: ">"
      param {
        type: IDENT
        identifier {
          name: "price"
        }
      }
      param {
        type: LITERAL
        literal {
          type: V_DOUBLE
          v_double: 1
        }
      }
    }
  }
  limit {
    row_count: 2
  }
  order {
    expr {
      type: IDENT
      identifier {
        name: "price"
      }
    }
    direction: DESC
  }
  operation {
    source {
      name: "name"
    }
    operation: SET
    value {
      type: LITERAL
      literal {
        type: V_STRING
        v_string {
          value: "lemon"
        }
      }
    }
  }
}


2 rows affected
Rows matched: 2  Changed: 2  Warnings: 0
RUN select * from xtest.xtable
id	name	price
1	banana	1.20
2	apple	0.25
3	lemon	1.80
4	lemon	3.14
5	orange	0.90
0 rows affected
RUN drop table if exists xtest.xtable

0 rows affected
RUN create table xtest.xtable as select * from xtest.xtable_

5 rows affected
Records: 5  Duplicates: 0  Warnings: 0
Rel: Update non-existing column
send Mysqlx.Crud.Update {
  collection {
    name: "xtable"
    schema: "xtest"
  }
  data_model: TABLE
  operation {
    source {
      name: "noname"
    }
    operation: SET
    value {
      type: LITERAL
      literal {
        type: V_STRING
        v_string {
          value: "lemon"
        }
      }
    }
  }
}

Mysqlx.Error {
  severity: ERROR
  code: 1054
  msg: "Unknown column \'noname\' in \'field list\'"
  sql_state: "42S22"
}

RUN select * from xtest.xtable
id	name	price
1	banana	1.20
2	apple	0.25
3	tomato	1.80
4	mango	3.14
5	orange	0.90
0 rows affected
RUN drop table if exists xtest.xtable

0 rows affected
RUN create table xtest.xtable as select * from xtest.xtable_

5 rows affected
Records: 5  Duplicates: 0  Warnings: 0
Rel: Update on a table with expression on invalid columns
send Mysqlx.Crud.Update {
  collection {
    name: "xtable"
    schema: "xtest"
  }
  data_model: TABLE
  criteria {
    type: OPERATOR
    operator {
      name: ">"
      param {
        type: IDENT
        identifier {
          name: "noprice"
        }
      }
      param {
        type: LITERAL
        literal {
          type: V_DOUBLE
          v_double: 1
        }
      }
    }
  }
  operation {
    source {
      name: "name"
    }
    operation: SET
    value {
      type: LITERAL
      literal {
        type: V_STRING
        v_string {
          value: "lemon"
        }
      }
    }
  }
}

Mysqlx.Error {
  severity: ERROR
  code: 1054
  msg: "Unknown column \'noprice\' in \'where clause\'"
  sql_state: "42S22"
}

RUN select * from xtest.xtable
id	name	price
1	banana	1.20
2	apple	0.25
3	tomato	1.80
4	mango	3.14
5	orange	0.90
0 rows affected
RUN drop table if exists xtest.xtable

0 rows affected
RUN create table xtest.xtable as select * from xtest.xtable_

5 rows affected
Records: 5  Duplicates: 0  Warnings: 0
Rel: Update with empty operations type
send Mysqlx.Crud.Update {
  collection {
    name: "xtable"
    schema: "xtest"
  }
  data_model: TABLE
}

Mysqlx.Error {
  severity: ERROR
  code: 5050
  msg: "Invalid update expression list"
  sql_state: "HY000"
}

RUN select * from xtest.xtable
id	name	price
1	banana	1.20
2	apple	0.25
3	tomato	1.80
4	mango	3.14
5	orange	0.90
0 rows affected
RUN drop table if exists xtest.xtable

0 rows affected
RUN create table xtest.xtable as select * from xtest.xtable_

5 rows affected
Records: 5  Duplicates: 0  Warnings: 0
Rel: Update source column with table
send Mysqlx.Crud.Update {
  collection {
    name: "xtable"
    schema: "xtest"
  }
  data_model: TABLE
  operation {
    source {
      name: ""
    }
    operation: SET
    value {
      type: LITERAL
      literal {
        type: V_STRING
        v_string {
          value: "lemon"
        }
      }
    }
  }
}

Mysqlx.Error {
  severity: ERROR
  code: 5052
  msg: "Invalid column name to update"
  sql_state: "HY000"
}

RUN select * from xtest.xtable
id	name	price
1	banana	1.20
2	apple	0.25
3	tomato	1.80
4	mango	3.14
5	orange	0.90
0 rows affected
RUN drop table if exists xtest.xtable

0 rows affected
RUN create table xtest.xtable as select * from xtest.xtable_

5 rows affected
Records: 5  Duplicates: 0  Warnings: 0
Rel: Update source column with table
send Mysqlx.Crud.Update {
  collection {
    name: "xtable"
    schema: "xtest"
  }
  data_model: TABLE
  operation {
    source {
      name: "name"
      table_name: "xtable"
    }
    operation: SET
    value {
      type: LITERAL
      literal {
        type: V_STRING
        v_string {
          value: "lemon"
        }
      }
    }
  }
}

Mysqlx.Error {
  severity: ERROR
  code: 5052
  msg: "Invalid column name to update"
  sql_state: "HY000"
}

RUN select * from xtest.xtable
id	name	price
1	banana	1.20
2	apple	0.25
3	tomato	1.80
4	mango	3.14
5	orange	0.90
0 rows affected
RUN drop table if exists xtest.xtable

0 rows affected
RUN create table xtest.xtable as select * from xtest.xtable_

5 rows affected
Records: 5  Duplicates: 0  Warnings: 0
Rel: Update source column with table and schema
send Mysqlx.Crud.Update {
  collection {
    name: "xtable"
    schema: "xtest"
  }
  data_model: TABLE
  operation {
    source {
      name: "name"
      table_name: "xtable"
      schema_name: "xschema"
    }
    operation: SET
    value {
      type: LITERAL
      literal {
        type: V_STRING
        v_string {
          value: "lemon"
        }
      }
    }
  }
}

Mysqlx.Error {
  severity: ERROR
  code: 5052
  msg: "Invalid column name to update"
  sql_state: "HY000"
}

RUN select * from xtest.xtable
id	name	price
1	banana	1.20
2	apple	0.25
3	tomato	1.80
4	mango	3.14
5	orange	0.90
0 rows affected
RUN drop table if exists xtest.xtable

0 rows affected
RUN create table xtest.xtable as select * from xtest.xtable_

5 rows affected
Records: 5  Duplicates: 0  Warnings: 0
Rel: Update on an invalid schema
send Mysqlx.Crud.Update {
  collection {
    name: "xtable"
    schema: "ytest"
  }
  data_model: TABLE
  operation {
    source {
      name: "name"
    }
    operation: SET
    value {
      type: LITERAL
      literal {
        type: V_STRING
        v_string {
          value: "lemon"
        }
      }
    }
  }
}

Mysqlx.Error {
  severity: ERROR
  code: 1146
  msg: "Table \'ytest.xtable\' doesn\'t exist"
  sql_state: "42S02"
}

RUN select * from xtest.xtable
id	name	price
1	banana	1.20
2	apple	0.25
3	tomato	1.80
4	mango	3.14
5	orange	0.90
0 rows affected
RUN drop table if exists xtest.xtable

0 rows affected
RUN create table xtest.xtable as select * from xtest.xtable_

5 rows affected
Records: 5  Duplicates: 0  Warnings: 0
Rel: Update on an invalid collection
send Mysqlx.Crud.Update {
  collection {
    name: "ytable"
    schema: "xtest"
  }
  data_model: TABLE
  operation {
    source {
      name: "name"
    }
    operation: SET
    value {
      type: LITERAL
      literal {
        type: V_STRING
        v_string {
          value: "lemon"
        }
      }
    }
  }
}

Mysqlx.Error {
  severity: ERROR
  code: 1146
  msg: "Table \'xtest.ytable\' doesn\'t exist"
  sql_state: "42S02"
}

RUN select * from xtest.xtable
id	name	price
1	banana	1.20
2	apple	0.25
3	tomato	1.80
4	mango	3.14
5	orange	0.90
0 rows affected
RUN drop schema xtest

2 rows affected
Mysqlx.Ok {
  msg: "bye!"
}
ok
DROP DATABASE `ytest`;
uninstall plugin mysqlx;
