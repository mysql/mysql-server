## Various test cases for the mysqlxsys@localhost creation by the plugin

source include/have_mysqlx_plugin.inc;
source include/not_embedded.inc;

SELECT password_last_changed into @passwordchanged from mysql.user where host='localhost' and user='root';

call mtr.add_suppression("Plugin mysqlx reported: .Failed at SSL configuration: .SSL context is not usable without certificate and private key..");
call mtr.add_suppression("Plugin mysqlx reported: .SSL_CTX_load_verify_locations failed.");

call mtr.add_suppression("Plugin mysqlx reported: 'Unable to switch context to user mysqlxsys'");
call mtr.add_suppression("Plugin mysqlx reported: 'Unable to switch security context to root'");
call mtr.add_suppression("Plugin mysqlx reported: 'Operation DROP USER failed for 'mysqlxsys'@'localhost''");
call mtr.add_suppression("Plugin mysqlx reported: 'mysqlxsys@localhost account already exists but does not have the expected grants'");
call mtr.add_suppression("Plugin mysqlx reported: 'Authentication account could not be created, mysqlx plugin will be inaccessible.'");
call mtr.add_suppression("Plugin mysqlx reported: '1.1: Unsuccessful login attempt");
call mtr.add_suppression("Plugin mysqlx reported: '2.1: Unsuccessful login attempt: Unable to switch context to user mysqlxsys");
call mtr.add_suppression("Plugin mysqlx reported: 'Delayed startup failed. Plugin is unable to accept connections.'");
call mtr.add_suppression("Password for mysqlxsys@localhost account has been expired");
call mtr.add_suppression("Can't setup mysqlxsys@localhost account - root password expired");

## Test starts here

--write_file $MYSQL_TMP_DIR/connection_mysqlxsys.tmp
select current_user();
EOF

--echo ============================================
--echo check that the mysqlxsys@localhost account does not exist initially
select if(count(*)=0, 'OK', 'FAIL') from mysql.user where user='mysqlxsys' and host='localhost';

--echo Install plugin, ensure that account got created
--source ../include/xplugin_install_and_wait.inc

select if(count(*)=1, 'OK', 'FAIL') from mysql.user where user='mysqlxsys' and host='localhost';
show grants for mysqlxsys@localhost;

--echo Uninstall plugin, ensure it got removed
uninstall plugin mysqlx;
select if(count(*)=0, 'OK', 'FAIL') from mysql.user where user='mysqlxsys' and host='localhost';

--echo Delete our account by hand and try to login (should fail but not crash)
--source ../include/xplugin_install_and_wait.inc

drop user mysqlxsys@localhost;
--error 1
--exec $MYSQLXTEST -uroot --password='' --file=$MYSQL_TMP_DIR/connection_mysqlxsys.tmp 2>&1

--echo Uninstall plugin with our account gone (see if cleanup works ok)
uninstall plugin mysqlx;

--echo With plugin uninstalled, create a bogus account with same name and see what happens after reinstall (plugin should error out)
create user mysqlxsys@localhost;
grant insert on mysql.user to mysqlxsys@localhost;
--let $wait_for_tcpsocket_status = no_wait
--let $wait_for_unixsocket_status = no_wait
--source ../include/xplugin_install_and_wait.inc
# wait a little for the account to get created
select sleep(1);

# login should fail here
--echo expect connection error now
--replace_regex /ERROR.*(No connection could be made because the target machine actively refused it connecting to*| *Connection refused connecting to*) .*:[0-9]*/ERROR: Connection refused connecting to HOST:PORT/
--error 1
--exec $MYSQLXTEST -uroot --password='' --file=$MYSQL_TMP_DIR/connection_mysqlxsys.tmp 2>&1


--echo Uninstall the plugin, the account shouldnt be dropped, since its not ours
uninstall plugin mysqlx;
show grants for mysqlxsys@localhost;
select if(count(*)=1, 'OK', 'FAIL') from mysql.user where user='mysqlxsys' and host='localhost';

--echo Create a pre-existing suitable account
drop user mysqlxsys@localhost;
create user mysqlxsys@localhost;
grant ALL on *.* to mysqlxsys@localhost;
grant SUPER on *.* to mysqlxsys@localhost;
--let $wait_for_tcpsocket_status = no_wait
--let $wait_for_unixsocket_status = no_wait
--source ../include/xplugin_install_and_wait.inc
# wait a little for the account to get created
select sleep(1);

# login should succeed here
--exec $MYSQLXTEST -uroot --password='' --file=$MYSQL_TMP_DIR/connection_mysqlxsys.tmp 2>&1

--echo Uninstall plugin, account is not ours, so dont drop it
uninstall plugin mysqlx;
select if(count(*)=1, 'OK', 'FAIL') from mysql.user where user='mysqlxsys' and host='localhost';


--echo Expire our account and see what happens (login should fail)
--source ../include/xplugin_install_and_wait.inc

alter user mysqlxsys@localhost password expire;

--error 1
--exec $MYSQLXTEST -uroot --password='' --file=$MYSQL_TMP_DIR/connection_mysqlxsys.tmp 2>&1

uninstall plugin mysqlx;

--echo Start mysqlxplugin with existing mysqlxsys account with expired password
CREATE USER mysqlxsys@localhost;
GRANT SELECT ON mysql.user TO mysqlxsys@localhost;
GRANT SUPER ON *.* TO mysqlxsys@localhost;
ALTER USER mysqlxsys@localhost PASSWORD EXPIRE;
--source ../include/xplugin_install_and_wait.inc
--error 1
--exec $MYSQLXTEST -uroot --password='' --file=$MYSQL_TMP_DIR/connection_mysqlxsys.tmp 2>&1
UNINSTALL PLUGIN mysqlx;

--echo Start mysqlxplugin with existing mysqlxsys account with expired password and no priv
CREATE USER mysqlxsys@localhost;
ALTER USER mysqlxsys@localhost PASSWORD EXPIRE;
--source ../include/xplugin_install_and_wait.inc
--error 1
--exec $MYSQLXTEST -uroot --password='' --file=$MYSQL_TMP_DIR/connection_mysqlxsys.tmp 2>&1
UNINSTALL PLUGIN mysqlx;

--echo Start mysqlxplugin with existing mysqlxsys account without priv
--echo plugin should add missing permission to this account (continue installation)
--echo it is required because in prevous ran the creation of mysqlxsys could be stopped
--echo in middle leaving the account without permissions
CREATE USER mysqlxsys@localhost;
--source ../include/xplugin_install_and_wait.inc

--exec $MYSQLXTEST -uroot --password='' --file=$MYSQL_TMP_DIR/connection_mysqlxsys.tmp 2>&1
UNINSTALL PLUGIN mysqlx;

--echo Start mysqlxplugin with existing mysqlxsys account with expired password and root user with
--echo expired password. Xplugin shouldn't open TCP port for listening
CREATE USER 'super_user'@'localhost' IDENTIFIED BY '';
GRANT ALL PRIVILEGES ON *.* TO 'super_user'@'localhost' WITH GRANT OPTION;
CREATE USER mysqlxsys@localhost;
GRANT SELECT ON mysql.user TO mysqlxsys@localhost;
GRANT SUPER ON *.* TO mysqlxsys@localhost;
--connect (con1, localhost, super_user)
ALTER USER mysqlxsys@localhost PASSWORD EXPIRE;
ALTER USER root@localhost PASSWORD EXPIRE;
--let $wait_for_tcpsocket_status = undefined_value
--let $wait_for_unixsocket_status = undefined_value
--source ../include/xplugin_install_and_wait.inc
--replace_regex /ERROR.*(No connection could be made because the target machine actively refused it connecting to*| *Connection refused connecting to*) .*:[0-9]*/ERROR: Connection refused connecting to HOST:PORT/
--error 1
--exec $MYSQLXTEST -uroot --password='' --file=$MYSQL_TMP_DIR/connection_mysqlxsys.tmp 2>&1
UNINSTALL PLUGIN mysqlx;
--disconnect con1
--connection default
SET PASSWORD FOR root@localhost = '';
--remove_file $MYSQL_TMP_DIR/connection_mysqlxsys.tmp

UPDATE mysql.user SET password_last_changed = @passwordchanged where host='localhost' and user='root';
FLUSH PRIVILEGES;


## Postamble
DROP USER IF EXISTS 'super_user'@'localhost';
DROP USER IF EXISTS mysqlxsys@localhost;
