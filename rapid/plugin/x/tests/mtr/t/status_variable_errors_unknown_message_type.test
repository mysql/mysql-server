## Test cases for unknown message types

--source ../include/xplugin_preamble.inc


## Test starts here

--let $xtest_file_session= $MYSQL_TMP_DIR/unknown_message_type_session.tmp
--write_file $xtest_file_session
-->quiet
-->binparse %MSG% Mysqlx.Session.AuthenticateStart {
    mech_name: "MYSQL41"
}

# Binary form of message splited to components
-->varlet %MSG_LENGTH% \x0a\x00\x00\x00
-->varlet %MSG_TYPE% \x04
-->varlet %MSG_BODY% \x0a\x07MYSQL41

# Verification of correctness binary form of message
-->assert_eq %MSG%	%MSG_LENGTH%%MSG_TYPE%%MSG_BODY%

-->binsend %MSG_LENGTH%%MSG_TYPE%%MSG_BODY%
-->recvtype Mysqlx.Session.AuthenticateContinue

-->binsend %MSG_LENGTH%\xff%MSG_BODY%
-->recvtype Mysqlx.Error

EOF


--let $xtest_file_connection= $MYSQL_TMP_DIR/unknown_message_type_connection.tmp
--write_file $xtest_file_connection
-->quiet

-->binparse %MSG% Mysqlx.Connection.CapabilitiesGet {
}

-->varlet %MSG_LENGTH% \x01\x00\x00\x00
-->varlet %MSG_TYPE% \x01

# Verification of correctness binary form of message
-->assert_eq %MSG%	%MSG_LENGTH%%MSG_TYPE%

-->binsend %MSG_LENGTH%%MSG_TYPE%
-->recvtype Mysqlx.Connection.Capabilities be-quiet
-->binsend %MSG_LENGTH%\xff
-->recvtype Mysqlx.Error

EOF


--let $xtest_file_crud= $MYSQL_TMP_DIR/unknown_message_type_crud.tmp
--write_file $xtest_file_crud
-->quiet

-->binparse %MSG% Mysqlx.Crud.Find {
  collection {
    name: "table"
    schema: "xtest"
  }
  data_model: TABLE
}

# Binary form of message splited to components
-->varlet %MSG_LENGTH% \x13\x00\x00\x00
-->varlet %MSG_TYPE% \x11
-->varlet %MSG_BODY% \x12\x0e\x0a\x05table\x12\x05xtest\x18\x02

# Verification of correctness binary form of message
-->assert_eq %MSG%	%MSG_LENGTH%%MSG_TYPE%%MSG_BODY%


-->macro Crud_session  %NAME%
-->title -Crud session %NAME%
-->newsession %NAME%

-->binsend %MSG_LENGTH%%MSG_TYPE%%MSG_BODY%
-->recvresult

-->binsend %MSG_LENGTH%\xff%MSG_BODY%
-->expecterror 1047
-->recvresult

-->sql
SHOW STATUS WHERE Variable_name RLIKE 'Mysqlx_(errors_unknown_message_type|crud_find)';
-->endsql

-->closesession
-->endmacro

-->callmacro Crud_session first
-->callmacro Crud_session second
-->callmacro Crud_session third

EOF


CREATE SCHEMA xtest;
CREATE TABLE xtest.table(field INT);

--exec $MYSQLXTEST -uroot --file=$xtest_file_crud 2>&1
--exec $MYSQLXTEST --no-auth -uroot --file=$xtest_file_connection 2>&1
--replace_regex /auth_data: ".+"/auth_data: "XXX"/
--exec $MYSQLXTEST --no-auth -uroot --file=$xtest_file_session 2>&1

--echo Global status
--let $wait_condition= SELECT variable_value = 5 FROM performance_schema.global_status WHERE variable_name LIKE 'Mysqlx_errors_unknown_message_type'
--source include/wait_condition_or_abort.inc
--let $wait_condition= SELECT variable_value = 3 FROM performance_schema.global_status WHERE variable_name LIKE 'Mysqlx_crud_find'
--source include/wait_condition_or_abort.inc
--let $wait_condition= SELECT variable_value = 4 FROM performance_schema.global_status WHERE variable_name LIKE 'Mysqlx_sessions_closed'
--source include/wait_condition_or_abort.inc

# Postamble
--remove_file $xtest_file_crud
--remove_file $xtest_file_connection
--remove_file $xtest_file_session

DROP SCHEMA IF EXISTS xtest;
UNINSTALL PLUGIN mysqlx;
