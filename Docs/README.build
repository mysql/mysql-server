Copyright (c) 2003, 2017, Oracle and/or its affiliates. All rights reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License, version 2.0,
as published by the Free Software Foundation.

This program is also distributed with certain software (including
but not limited to OpenSSL) that is licensed under separate terms,
as designated in a particular file or component or in included license
documentation.  The authors of MySQL hereby grant you an additional
permission to link the program and your derivative works with the
separately licensed software that they have included with MySQL.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License, version 2.0, for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA

Build Instructions for MySQL Server
===================================

The recommended way to build MySQL for developers:

cd <some build directory>
cmake <path to source directory>
make

This will give you a release build, with compiler options taken from
../cmake/build_configurations/compiler_options.cmake
and "feature set" taken from
../cmake/build_configurations/feature_set.cmake

Adding -DWITH_DEBUG=1 to the cmake command line gives you a debug build.


Building on Windows is slightly different:
cd <some build directory>
cmake <path to source directory> -G <generator>

We only support Visual Studio as generator and only 64 bit ("Win64").

cmake --build . --config Debug
or
cmake --build . --config RelWithDebInfo


If you have special needs, you can disable the defaults by setting
these cmake variables off:

WITH_DEFAULT_COMPILER_OPTIONS
WITH_DEFAULT_FEATURE_SET

Note: For building with unit tests, you need to tell cmake where to find
the sources, see ../unittest/gunit/CMakeLists.txt
You should *not* 'make install' googletest/googlemock on your system,
the libraries must be built from source, with the unit tests.

Note: You need to tell cmake where to find boost, see ../cmake/boost.cmake
